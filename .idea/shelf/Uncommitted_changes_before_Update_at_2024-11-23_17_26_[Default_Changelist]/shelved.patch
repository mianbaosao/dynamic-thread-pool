Index: dynamic-thread-pool-test/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  application:\r\n    name: dynamic-thread-pool-test\r\n  profiles:\r\n    active: dev\r\n  main:\r\n    allow-bean-definition-overriding: true  # 允许覆盖重复定义的Bean\r\n\r\nserver:\r\n  port: 8080\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/resources/application.yml b/dynamic-thread-pool-test/src/main/resources/application.yml
--- a/dynamic-thread-pool-test/src/main/resources/application.yml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-test/src/main/resources/application.yml	(date 1732353890794)
@@ -1,10 +1,5 @@
 spring:
   application:
-    name: dynamic-thread-pool-test
+    name: dynamic-thread-pool-test-app
   profiles:
     active: dev
-  main:
-    allow-bean-definition-overriding: true  # 允许覆盖重复定义的Bean
-
-server:
-  port: 8080
Index: dynamic-thread-pool-test/src/main/resources/application-dev.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\r\n  port: 8091\r\n\r\n# 线程池配置\r\nthread:\r\n  pool:\r\n    executor:\r\n      config:\r\n        core-pool-size: 20\r\n        max-pool-size: 50\r\n        keep-alive-time: 5000\r\n        block-queue-size: 5000\r\n        policy: CallerRunsPolicy\r\n\r\n# 动态线程池配置\r\ndynamic-thread-pool:\r\n  registry:\r\n    redis:\r\n      host: localhost\r\n      port: 6379\r\n    report-cron: \"0/10 * * * * ?\"\r\n  web:\r\n    auth:\r\n      enable: true\r\n      username: dtp\r\n      password: dtp\r\n    context-path: /dtp\r\n    enabled: true\r\n    grafana-dashboard-url: http://localhost:3000/d/fe4p8gg186ccgf/e58aa8-e68081-e7babf-e7a88b-e6b1a0-e79b91-e68ea7?orgId=1&from=2024-11-22T03:28:04.267Z&to=2024-11-22T09:28:04.267Z&timezone=browser&var-applicationName=&var-poolName=&refresh=5s\r\n  alarm:\r\n    enabled: true\r\n    access-token:\r\n      ding-ding: xxx\r\n    use-platform:\r\n      - \"DingDing\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/resources/application-dev.yml b/dynamic-thread-pool-test/src/main/resources/application-dev.yml
--- a/dynamic-thread-pool-test/src/main/resources/application-dev.yml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-test/src/main/resources/application-dev.yml	(date 1732353890792)
@@ -12,24 +12,20 @@
         block-queue-size: 5000
         policy: CallerRunsPolicy
 
-# 动态线程池配置
-dynamic-thread-pool:
-  registry:
-    redis:
-      host: localhost
-      port: 6379
-    report-cron: "0/10 * * * * ?"
-  web:
-    auth:
-      enable: true
-      username: dtp
-      password: dtp
-    context-path: /dtp
-    enabled: true
-    grafana-dashboard-url: http://localhost:3000/d/fe4p8gg186ccgf/e58aa8-e68081-e7babf-e7a88b-e6b1a0-e79b91-e68ea7?orgId=1&from=2024-11-22T03:28:04.267Z&to=2024-11-22T09:28:04.267Z&timezone=browser&var-applicationName=&var-poolName=&refresh=5s
-  alarm:
-    enabled: true
-    access-token:
-      ding-ding: xxx
-    use-platform:
-      - "DingDing"
\ No newline at end of file
+ #动态线程池管理配置
+dynamic:
+  thread:
+    pool:
+      config:
+        # 状态；true = 开启、false 关闭
+        enabled: true
+        # redis host
+        host: 127.0.0.1
+        # redis port
+        port: 6379
+
+# 日志
+logging:
+  level:
+    root: info
+  config: classpath:logback-spring.xml
\ No newline at end of file
Index: dynamic-thread-pool-test/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <parent>\r\n        <groupId>org.example</groupId>\r\n        <artifactId>dynamic-thread-pool</artifactId>\r\n        <version>1.0</version>\r\n    </parent>\r\n\r\n    <artifactId>dynamic-thread-pool-test</artifactId>\r\n\r\n    <packaging>jar</packaging>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-lang3</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>commons-codec</groupId>\r\n            <artifactId>commons-codec</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.example</groupId>\r\n            <artifactId>dynamic-thread-pool-spring-boot-starter</artifactId>\r\n            <version>1.0</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <finalName>dynamic-thread-pool-test-app</finalName>\r\n        <resources>\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n                <includes>\r\n                    <include>**/**</include>\r\n                </includes>\r\n            </resource>\r\n        </resources>\r\n        <testResources>\r\n            <testResource>\r\n                <directory>src/test/resources</directory>\r\n                <filtering>true</filtering>\r\n                <includes>\r\n                    <include>**/**</include>\r\n                </includes>\r\n            </testResource>\r\n        </testResources>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <version>2.6</version>\r\n                <configuration>\r\n                    <skipTests>true</skipTests>\r\n                    <testFailureIgnore>false</testFailureIgnore>\r\n                    <includes>\r\n                        <include>**/*Test.java</include>\r\n                    </includes>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration>\r\n                    <mainClass>cn.notcoder.dtp.sdk.dynamicthreadpooltest.DynamicThreadPoolTestApplication</mainClass>\r\n                    <layout>JAR</layout>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/pom.xml b/dynamic-thread-pool-test/pom.xml
--- a/dynamic-thread-pool-test/pom.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-test/pom.xml	(date 1732353890787)
@@ -13,23 +13,17 @@
     <artifactId>dynamic-thread-pool-test</artifactId>
 
     <packaging>jar</packaging>
+
     <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter</artifactId>
-        </dependency>
-
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-web</artifactId>
         </dependency>
-
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-test</artifactId>
             <scope>test</scope>
         </dependency>
-
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-configuration-processor</artifactId>
@@ -37,6 +31,7 @@
         <dependency>
             <groupId>com.alibaba</groupId>
             <artifactId>fastjson</artifactId>
+            <version>2.0.49</version>
         </dependency>
         <dependency>
             <groupId>org.apache.commons</groupId>
@@ -56,11 +51,19 @@
             <artifactId>commons-codec</artifactId>
         </dependency>
 
+        <!-- 线程组件 -->
         <dependency>
             <groupId>org.example</groupId>
             <artifactId>dynamic-thread-pool-spring-boot-starter</artifactId>
             <version>1.0</version>
         </dependency>
+
+        <!-- Netty 依赖 -->
+        <dependency>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-all</artifactId>
+            <version>4.1.68.Final</version> <!-- 选择一个稳定的版本 -->
+        </dependency>
     </dependencies>
 
     <build>
@@ -87,7 +90,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.6</version>
+                <version>2.22.2</version> <!-- 更新到更稳定的版本 -->
                 <configuration>
                     <skipTests>true</skipTests>
                     <testFailureIgnore>false</testFailureIgnore>
@@ -100,7 +103,7 @@
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-maven-plugin</artifactId>
                 <configuration>
-                    <mainClass>cn.notcoder.dtp.sdk.dynamicthreadpooltest.DynamicThreadPoolTestApplication</mainClass>
+                    <mainClass>cn.bugstack.Application</mainClass>
                     <layout>JAR</layout>
                 </configuration>
             </plugin>
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>dynamic-thread-pool</artifactId>\r\n    <packaging>pom</packaging>\r\n    <version>1.0</version>\r\n    <modules>\r\n        <module>dynamic-thread-pool-spring-boot-starter</module>\r\n        <module>dynamic-thread-pool-test</module>\r\n    </modules>\r\n\r\n    <properties>\r\n        <maven.compiler.source>8</maven.compiler.source>\r\n        <maven.compiler.target>8</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.7.12</version>\r\n        <relativePath/>\r\n    </parent>\r\n\r\n\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>commons-lang</groupId>\r\n                <artifactId>commons-lang</artifactId>\r\n                <version>2.6</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>commons-codec</groupId>\r\n                <artifactId>commons-codec</artifactId>\r\n                <version>1.15</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>fastjson</artifactId>\r\n                <version>2.0.49</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>junit</groupId>\r\n                <artifactId>junit</artifactId>\r\n                <version>4.13.1</version>\r\n                <scope>test</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n\r\n    <build>\r\n        <finalName>dynamic-thread-pool</finalName>\r\n        <resources>\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n            </resource>\r\n            <resource>\r\n                <directory>src/assembly/resources</directory>\r\n                <filtering>false</filtering>\r\n            </resource>\r\n        </resources>\r\n        <testResources>\r\n            <testResource>\r\n                <directory>src/test/resources</directory>\r\n                <filtering>true</filtering>\r\n            </testResource>\r\n            <testResource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n            </testResource>\r\n        </testResources>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-archetype-plugin</artifactId>\r\n                <version>3.2.0</version>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.0</version>\r\n                <configuration>\r\n                    <source>${java.version}</source>\r\n                    <target>${java.version}</target>\r\n                    <encoding>${project.build.sourceEncoding}</encoding>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-resources-plugin</artifactId>\r\n                <version>2.5</version>\r\n                <configuration>\r\n                    <encoding>UTF-8</encoding>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.codehaus.mojo</groupId>\r\n                <artifactId>versions-maven-plugin</artifactId>\r\n                <version>2.7</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n    <profiles>\r\n        <profile>\r\n            <id>dev</id>\r\n            <activation>\r\n                <activeByDefault>true</activeByDefault>\r\n            </activation>\r\n            <properties>\r\n                <java_jvm>-Xms1G -Xmx1G -server  -XX:MaxPermSize=256M -Xss256K -Dspring.profiles.active=test -XX:+DisableExplicitGC -XX:+UseG1GC  -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/export/Logs/xfg-frame-archetype-lite-boot -Xloggc:/export/Logs/xfg-frame-archetype-lite-boot/gc-xfg-frame-archetype-lite-boot.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps</java_jvm>\r\n                <profileActive>dev</profileActive>\r\n            </properties>\r\n        </profile>\r\n        <profile>\r\n            <id>test</id>\r\n            <properties>\r\n                <java_jvm>-Xms1G -Xmx1G -server  -XX:MaxPermSize=256M -Xss256K -Dspring.profiles.active=test -XX:+DisableExplicitGC -XX:+UseG1GC  -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/export/Logs/xfg-frame-archetype-lite-boot -Xloggc:/export/Logs/xfg-frame-archetype-lite-boot/gc-xfg-frame-archetype-lite-boot.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps</java_jvm>\r\n                <profileActive>test</profileActive>\r\n            </properties>\r\n        </profile>\r\n        <profile>\r\n            <id>prod</id>\r\n            <properties>\r\n                <java_jvm>-Xms6G -Xmx6G -server  -XX:MaxPermSize=256M -Xss256K -Dspring.profiles.active=release -XX:+DisableExplicitGC -XX:+UseG1GC  -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/export/Logs/fq-mall-activity-app -Xloggc:/export/Logs/xfg-frame-archetype-lite-boot/gc-xfg-frame-archetype-lite-boot.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps</java_jvm>\r\n                <profileActive>prod</profileActive>\r\n            </properties>\r\n        </profile>\r\n    </profiles>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/pom.xml	(date 1732353890799)
@@ -11,6 +11,7 @@
     <modules>
         <module>dynamic-thread-pool-spring-boot-starter</module>
         <module>dynamic-thread-pool-test</module>
+        <module>dynamic-thread-pool-admin</module>
     </modules>
 
     <properties>
@@ -22,36 +23,48 @@
     <parent>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-parent</artifactId>
-        <version>2.7.12</version>
+        <version>2.1.0.RELEASE</version>
         <relativePath/>
     </parent>
 
-
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>commons-lang</groupId>
-                <artifactId>commons-lang</artifactId>
-                <version>2.6</version>
-            </dependency>
-            <dependency>
-                <groupId>commons-codec</groupId>
-                <artifactId>commons-codec</artifactId>
-                <version>1.15</version>
-            </dependency>
-            <dependency>
-                <groupId>com.alibaba</groupId>
-                <artifactId>fastjson</artifactId>
-                <version>2.0.49</version>
-            </dependency>
-            <dependency>
-                <groupId>junit</groupId>
-                <artifactId>junit</artifactId>
-                <version>4.13.1</version>
-                <scope>test</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
+    <dependencies>
+        <dependency>
+            <groupId>org.slf4j</groupId>
+            <artifactId>slf4j-api</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.google.guava</groupId>
+            <artifactId>guava</artifactId>
+            <version>32.1.3-jre</version>
+        </dependency>
+        <dependency>
+            <groupId>commons-lang</groupId>
+            <artifactId>commons-lang</artifactId>
+            <version>2.6</version>
+        </dependency>
+        <dependency>
+            <groupId>commons-codec</groupId>
+            <artifactId>commons-codec</artifactId>
+            <version>1.15</version>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+            <version>2.0.49</version>
+        </dependency>
+        <dependency>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-resolver-dns</artifactId>
+            <version>4.1.92.Final</version> <!-- 或更高版本 -->
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>4.13.1</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
 
 
     <build>
@@ -108,6 +121,7 @@
         </plugins>
     </build>
 
+
     <profiles>
         <profile>
             <id>dev</id>
Index: dynamic-thread-pool-spring-boot-starter/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <parent>\r\n    <groupId>org.example</groupId>\r\n    <artifactId>dynamic-thread-pool</artifactId>\r\n    <version>1.0</version>\r\n</parent>\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <artifactId>dynamic-thread-pool-spring-boot-starter</artifactId>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-actuator</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.micrometer</groupId>\r\n            <artifactId>micrometer-registry-prometheus</artifactId>\r\n            <version>1.9.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-autoconfigure</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-aop</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>commons-lang</groupId>\r\n            <artifactId>commons-lang</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.aliyun</groupId>\r\n            <artifactId>alibaba-dingtalk-service-sdk</artifactId>\r\n            <version>2.0.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>commons-codec</groupId>\r\n            <artifactId>commons-codec</artifactId>\r\n            <version>1.11</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.redisson</groupId>\r\n            <artifactId>redisson-spring-boot-starter</artifactId>\r\n            <version>3.26.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <finalName>dynamic-thread-pool-spring-boot-starter</finalName>\r\n        <resources>\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n                <includes>\r\n                    <include>**/**</include>\r\n                </includes>\r\n            </resource>\r\n        </resources>\r\n        <testResources>\r\n            <testResource>\r\n                <directory>src/test/resources</directory>\r\n                <filtering>true</filtering>\r\n                <includes>\r\n                    <include>**/**</include>\r\n                </includes>\r\n            </testResource>\r\n        </testResources>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <version>2.12.4</version>\r\n                <configuration>\r\n                    <skipTests>true</skipTests>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-resources-plugin</artifactId>\r\n                <version>2.5</version>\r\n                <configuration>\r\n                    <encoding>${project.build.sourceEncoding}</encoding>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>2.3.2</version>\r\n                <configuration>\r\n                    <source>${maven.compiler.source}</source>\r\n                    <target>${maven.compiler.target}</target>\r\n                    <encoding>${project.build.sourceEncoding}</encoding>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-source-plugin</artifactId>\r\n                <version>2.1.2</version>\r\n                <executions>\r\n                    <execution>\r\n                        <id>attach-sources</id>\r\n                        <goals>\r\n                            <goal>jar</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/pom.xml b/dynamic-thread-pool-spring-boot-starter/pom.xml
--- a/dynamic-thread-pool-spring-boot-starter/pom.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-spring-boot-starter/pom.xml	(date 1732353890547)
@@ -27,15 +27,6 @@
         </dependency>
         <dependency>
             <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>io.micrometer</groupId>
-            <artifactId>micrometer-registry-prometheus</artifactId>
-            <version>1.9.0</version>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-autoconfigure</artifactId>
         </dependency>
         <dependency>
@@ -50,38 +41,36 @@
         <dependency>
             <groupId>commons-lang</groupId>
             <artifactId>commons-lang</artifactId>
+            <version>2.6</version>
         </dependency>
         <dependency>
             <groupId>com.alibaba</groupId>
             <artifactId>fastjson</artifactId>
+            <version>2.0.49</version>
         </dependency>
+      <!--  <dependency>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-resolver-dns</artifactId>
+            <version>4.1.92.Final</version> &lt;!&ndash; 或更高版本 &ndash;&gt;
+        </dependency>-->
         <dependency>
             <groupId>junit</groupId>
             <artifactId>junit</artifactId>
             <scope>test</scope>
         </dependency>
-
-        <dependency>
-            <groupId>com.aliyun</groupId>
-            <artifactId>alibaba-dingtalk-service-sdk</artifactId>
-            <version>2.0.0</version>
-        </dependency>
-
-        <dependency>
-            <groupId>commons-codec</groupId>
-            <artifactId>commons-codec</artifactId>
-            <version>1.11</version>
-        </dependency>
-
         <dependency>
             <groupId>org.redisson</groupId>
             <artifactId>redisson-spring-boot-starter</artifactId>
             <version>3.26.0</version>
         </dependency>
-
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
         <dependency>
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
+            <version>1.18.24</version>
         </dependency>
     </dependencies>
 
@@ -147,4 +136,5 @@
             </plugin>
         </plugins>
     </build>
+
 </project>
\ No newline at end of file
Index: dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.config;\r\n\r\nimport cn.bread.config.propertis.ThreadPoolConfigAutoProperties;\r\n\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.hook.ResizableCapacityLinkedBlockingQueue;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.scheduling.annotation.EnableAsync;\r\n\r\n\r\nimport java.util.concurrent.*;\r\n\r\n\r\n@Slf4j\r\n@EnableAsync\r\n@Configuration\r\n@EnableConfigurationProperties(ThreadPoolConfigAutoProperties.class)\r\npublic class ThreadPoolConfig {\r\n\r\n    @Bean\r\n    public ThreadPoolExecutor threadPoolExecutor01(ThreadPoolConfigAutoProperties properties) {\r\n        return new ThreadPoolExecutor(\r\n                properties.getCorePoolSize(),\r\n                properties.getMaxPoolSize(),\r\n                properties.getKeepAliveTime(),\r\n                TimeUnit.SECONDS,\r\n                new ResizableCapacityLinkedBlockingQueue<>(properties.getBlockQueueSize()),\r\n                Executors.defaultThreadFactory(),\r\n                getRejectedExecutionHandler(properties.getPolicy())\r\n        );\r\n    }\r\n\r\n    @Bean\r\n    public ThreadPoolExecutor threadPoolExecutor02(ThreadPoolConfigAutoProperties properties) {\r\n        return new ThreadPoolExecutor(\r\n                properties.getCorePoolSize(),\r\n                properties.getMaxPoolSize(),\r\n                properties.getKeepAliveTime(),\r\n                TimeUnit.SECONDS,\r\n                new ResizableCapacityLinkedBlockingQueue<>(properties.getBlockQueueSize()),\r\n                Executors.defaultThreadFactory(),\r\n                getRejectedExecutionHandler(properties.getPolicy())\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取线程池拒绝策略\r\n     * @param policy 策略名\r\n     * @return 策略\r\n     */\r\n    private RejectedExecutionHandler getRejectedExecutionHandler(String policy) {\r\n        switch (policy) {\r\n            case \"DiscardPolicy\":;\r\n                return new ThreadPoolExecutor.DiscardPolicy();\r\n            case \"DiscardOldestPolicy\":\r\n                return new ThreadPoolExecutor.DiscardOldestPolicy();\r\n            case \"CallerRunsPolicy\":;\r\n                return new ThreadPoolExecutor.CallerRunsPolicy();\r\n            case \"AbortPolicy\":\r\n            default:\r\n                return new ThreadPoolExecutor.AbortPolicy();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfig.java b/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfig.java
--- a/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfig.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfig.java	(date 1732353890790)
@@ -1,67 +1,82 @@
 package cn.bread.config;
 
-import cn.bread.config.propertis.ThreadPoolConfigAutoProperties;
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.hook.ResizableCapacityLinkedBlockingQueue;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableAsync;
 
-
 import java.util.concurrent.*;
 
-
-@Slf4j
 @EnableAsync
 @Configuration
-@EnableConfigurationProperties(ThreadPoolConfigAutoProperties.class)
+@Slf4j
+@EnableConfigurationProperties(ThreadPoolConfigProperties.class)
 public class ThreadPoolConfig {
 
-    @Bean
-    public ThreadPoolExecutor threadPoolExecutor01(ThreadPoolConfigAutoProperties properties) {
-        return new ThreadPoolExecutor(
-                properties.getCorePoolSize(),
+    @Bean("threadPoolExecutor01")
+    public ThreadPoolExecutor threadPoolExecutor01(ThreadPoolConfigProperties properties) {
+        // 实例化策略
+        RejectedExecutionHandler handler;
+        switch (properties.getPolicy()){
+            case "AbortPolicy":
+                handler = new ThreadPoolExecutor.AbortPolicy();
+                break;
+            case "DiscardPolicy":
+                handler = new ThreadPoolExecutor.DiscardPolicy();
+                break;
+            case "DiscardOldestPolicy":
+                handler = new ThreadPoolExecutor.DiscardOldestPolicy();
+                break;
+            case "CallerRunsPolicy":
+                handler = new ThreadPoolExecutor.CallerRunsPolicy();
+                break;
+            default:
+                handler = new ThreadPoolExecutor.AbortPolicy();
+                break;
+        }
+
+        // 创建线程池
+        return new ThreadPoolExecutor(properties.getCorePoolSize(),
                 properties.getMaxPoolSize(),
                 properties.getKeepAliveTime(),
                 TimeUnit.SECONDS,
-                new ResizableCapacityLinkedBlockingQueue<>(properties.getBlockQueueSize()),
+                new LinkedBlockingQueue<>(properties.getBlockQueueSize()),
                 Executors.defaultThreadFactory(),
-                getRejectedExecutionHandler(properties.getPolicy())
-        );
+                handler);
     }
 
-    @Bean
-    public ThreadPoolExecutor threadPoolExecutor02(ThreadPoolConfigAutoProperties properties) {
-        return new ThreadPoolExecutor(
-                properties.getCorePoolSize(),
+    @Bean("threadPoolExecutor02")
+    public ThreadPoolExecutor threadPoolExecutor02(ThreadPoolConfigProperties properties) {
+        // 实例化策略
+        RejectedExecutionHandler handler;
+        switch (properties.getPolicy()){
+            case "AbortPolicy":
+                handler = new ThreadPoolExecutor.AbortPolicy();
+                break;
+            case "DiscardPolicy":
+                handler = new ThreadPoolExecutor.DiscardPolicy();
+                break;
+            case "DiscardOldestPolicy":
+                handler = new ThreadPoolExecutor.DiscardOldestPolicy();
+                break;
+            case "CallerRunsPolicy":
+                handler = new ThreadPoolExecutor.CallerRunsPolicy();
+                break;
+            default:
+                handler = new ThreadPoolExecutor.AbortPolicy();
+                break;
+
+
+        }
+        // 创建线程池
+        return new ThreadPoolExecutor(properties.getCorePoolSize(),
                 properties.getMaxPoolSize(),
                 properties.getKeepAliveTime(),
                 TimeUnit.SECONDS,
-                new ResizableCapacityLinkedBlockingQueue<>(properties.getBlockQueueSize()),
+                new LinkedBlockingQueue<>(properties.getBlockQueueSize()),
                 Executors.defaultThreadFactory(),
-                getRejectedExecutionHandler(properties.getPolicy())
-        );
+                handler);
     }
 
-
-    /**
-     * 获取线程池拒绝策略
-     * @param policy 策略名
-     * @return 策略
-     */
-    private RejectedExecutionHandler getRejectedExecutionHandler(String policy) {
-        switch (policy) {
-            case "DiscardPolicy":;
-                return new ThreadPoolExecutor.DiscardPolicy();
-            case "DiscardOldestPolicy":
-                return new ThreadPoolExecutor.DiscardOldestPolicy();
-            case "CallerRunsPolicy":;
-                return new ThreadPoolExecutor.CallerRunsPolicy();
-            case "AbortPolicy":
-            default:
-                return new ThreadPoolExecutor.AbortPolicy();
-        }
-    }
 }
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.middleware.dynamic.thread.pool.sdk.config;\r\n\r\n\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.RefreshThreadPoolConfigDTO;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums.RegistryEnum;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.redis.RedisRegistry;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IAlarmService;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.impl.DynamicThreadPoolServiceImpl;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.ApplicationUtils;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.RedisUtils;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.trigger.job.ThreadPoolDataReportJob;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener.ThreadPoolConfigAdjustListener;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener.ThreadPoolConfigRefreshListener;\r\nimport io.micrometer.core.instrument.Meter;\r\nimport io.micrometer.core.instrument.config.MeterFilter;\r\nimport io.micrometer.core.instrument.config.MeterFilterReply;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.apache.commons.lang.StringUtils;\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RTopic;\r\nimport org.redisson.api.RedissonClient;\r\nimport org.redisson.codec.JsonJacksonCodec;\r\nimport org.redisson.config.Config;\r\nimport org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties;\r\nimport org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties;\r\nimport org.springframework.boot.autoconfigure.ImportAutoConfiguration;\r\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.scheduling.annotation.EnableScheduling;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.concurrent.ThreadPoolExecutor;\r\n\r\n\r\n/**\r\n * 自动配置入口\r\n */\r\n@Slf4j\r\n@Configuration\r\n@EnableConfigurationProperties(DynamicThreadPoolRegistryRedisAutoProperties.class)\r\n@EnableScheduling\r\n@ImportAutoConfiguration({DynamicThreadPoolWebAutoConfig.class, DynamicThreadPoolAlarmAutoConfig.class})\r\npublic class DynamicThreadPoolAutoConfig {\r\n\r\n    @Bean\r\n    public RedissonClient redissonClient(DynamicThreadPoolRegistryRedisAutoProperties properties) {\r\n        Config config = new Config();\r\n\r\n        config.setCodec(JsonJacksonCodec.INSTANCE);\r\n\r\n        config.useSingleServer()\r\n                .setAddress(String.format(\"redis://%s:%d\", properties.getHost(), properties.getPort()))\r\n                .setPassword(properties.getPassword())\r\n                .setDatabase(properties.getDatabase())\r\n                .setConnectionPoolSize(properties.getConnectionPoolSize())\r\n                .setConnectionMinimumIdleSize(properties.getConnectionMinimumIdleSize())\r\n                .setIdleConnectionTimeout(properties.getIdleConnectionTimeout())\r\n                .setConnectTimeout(properties.getConnectTimeout())\r\n                .setRetryAttempts(properties.getRetryAttempts())\r\n                .setRetryInterval(properties.getRetryInterval())\r\n                .setKeepAlive(properties.getKeepAlive());\r\n        return Redisson.create(config);\r\n    }\r\n\r\n    @Bean\r\n    public IRegistry redisRegistry(RedissonClient redissonClient, IAlarmService alarmService) {\r\n        return new RedisRegistry(redissonClient, alarmService);\r\n    }\r\n\r\n    @Bean\r\n    public ThreadPoolDataReportJob threadPoolDataReportJob(\r\n            IDynamicThreadPoolService dynamicThreadPoolService,\r\n            IRegistry redisRegistry) {\r\n        return new ThreadPoolDataReportJob(dynamicThreadPoolService, redisRegistry);\r\n    }\r\n\r\n\r\n    @Bean\r\n    public ThreadPoolConfigAdjustListener threadPoolConfigAdjustListener(\r\n            IDynamicThreadPoolService dynamicThreadPoolService,\r\n            IRegistry redisRegistry) {\r\n        return new ThreadPoolConfigAdjustListener(dynamicThreadPoolService, redisRegistry);\r\n    }\r\n\r\n\r\n    @Bean\r\n    public RTopic dynamicThreadPoolAdjustRedisTopic(\r\n            ThreadPoolConfigAdjustListener threadPoolConfigAdjustListener,\r\n            RedissonClient redissonClient) {\r\n        RTopic topic = redissonClient.getTopic(RegistryEnum.DYNAMIC_THREAD_POOL_ADJUST_REDIS_TOPIC_KEY.getKey());\r\n        topic.addListener(UpdateThreadPoolConfigDTO.class, threadPoolConfigAdjustListener);\r\n        return topic;\r\n    }\r\n\r\n    @Bean\r\n    public ThreadPoolConfigRefreshListener threadPoolConfigRefreshListener(\r\n            IDynamicThreadPoolService dynamicThreadPoolService,\r\n            IRegistry redisRegistry) {\r\n        return new ThreadPoolConfigRefreshListener(dynamicThreadPoolService, redisRegistry);\r\n    }\r\n\r\n    @Bean\r\n    public RTopic dynamicThreadPoolRefreshRedisTopic(\r\n            ThreadPoolConfigRefreshListener threadPoolConfigRefreshListener,\r\n            RedissonClient redissonClient) {\r\n        RTopic topic = redissonClient.getTopic(RegistryEnum.DYNAMIC_THREAD_POOL_REFRESH_REDIS_TOPIC_KEY.getKey());\r\n        topic.addListener(RefreshThreadPoolConfigDTO.class, threadPoolConfigRefreshListener);\r\n        return topic;\r\n    }\r\n\r\n    @Bean\r\n    public DynamicThreadPoolServiceImpl dynamicThreadPoolService(\r\n            ApplicationContext applicationContext,\r\n            Map<String, ThreadPoolExecutor> threadPoolExecutorMap,\r\n            RedissonClient redissonClient,\r\n            IAlarmService alarmService\r\n    ) {\r\n        String applicationName = ApplicationUtils.getApplicationName(applicationContext);\r\n        if (StringUtils.isBlank(applicationName)) {\r\n            log.warn(\"动态线程池启动提示。SpringBoot 应用未配置应用名(spring.application.name)\");\r\n        }\r\n\r\n        // 创建Bean\r\n        DynamicThreadPoolServiceImpl dynamicThreadPoolService = new DynamicThreadPoolServiceImpl(\r\n                applicationName,\r\n                threadPoolExecutorMap,\r\n                alarmService\r\n        );\r\n\r\n        // 获取缓存的配置信息，配置线程池\r\n        threadPoolExecutorMap.forEach((poolName, executor) -> {\r\n            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO = RedisUtils.getUpdateThreadPoolConfigDTO(\r\n                    redissonClient,\r\n                    applicationName,\r\n                    poolName\r\n            );\r\n            if (updateThreadPoolConfigDTO == null) {\r\n                return;\r\n            }\r\n\r\n\r\n            dynamicThreadPoolService.updateThreadPoolConfig(\r\n                    updateThreadPoolConfigDTO\r\n            );\r\n\r\n        });\r\n\r\n        return dynamicThreadPoolService;\r\n    }\r\n\r\n    @Bean\r\n    public PrometheusConfigRunner prometheusConfigRunner(\r\n            ApplicationContext applicationContext,\r\n            WebEndpointProperties webEndpointProperties,\r\n            PrometheusProperties prometheusProperties\r\n    ) {\r\n        webEndpointProperties.getExposure().setInclude(\r\n                new HashSet<>(Arrays.asList(\r\n                        \"health\",\r\n                        \"prometheus\"\r\n                ))\r\n        );\r\n\r\n        prometheusProperties.setEnabled(true);\r\n\r\n        return new PrometheusConfigRunner(\r\n                applicationContext\r\n        );\r\n    }\r\n\r\n    @Bean\r\n    public MeterFilter customMeterFilter() {\r\n        return new MeterFilter() {\r\n            @Override\r\n            public MeterFilterReply accept(Meter.Id id) {\r\n                if (id.getName().contains(\"thread_pool\")) {\r\n                    return MeterFilterReply.ACCEPT;\r\n                }\r\n                return MeterFilterReply.DENY;\r\n            }\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoConfig.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoConfig.java
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoConfig.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoConfig.java	(date 1732353890550)
@@ -1,23 +1,14 @@
 package cn.bread.middleware.dynamic.thread.pool.sdk.config;
 
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.RefreshThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums.RegistryEnum;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.redis.RedisRegistry;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IAlarmService;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.impl.DynamicThreadPoolServiceImpl;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.ApplicationUtils;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.RedisUtils;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.DynamicThreadPoolsService;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.IDynamicThreadPoolService;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj.RegistryEnumVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.registry.IRegistry;
+import cn.bread.middleware.dynamic.thread.pool.sdk.registry.redis.RedisRegistry;
 import cn.bread.middleware.dynamic.thread.pool.sdk.trigger.job.ThreadPoolDataReportJob;
 import cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener.ThreadPoolConfigAdjustListener;
-import cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener.ThreadPoolConfigRefreshListener;
-import io.micrometer.core.instrument.Meter;
-import io.micrometer.core.instrument.config.MeterFilter;
-import io.micrometer.core.instrument.config.MeterFilterReply;
+import com.alibaba.fastjson.JSON;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.commons.lang.StringUtils;
 import org.redisson.Redisson;
@@ -25,167 +16,106 @@
 import org.redisson.api.RedissonClient;
 import org.redisson.codec.JsonJacksonCodec;
 import org.redisson.config.Config;
-import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties;
-import org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties;
-import org.springframework.boot.autoconfigure.ImportAutoConfiguration;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Qualifier;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
-import java.util.Arrays;
-import java.util.HashSet;
 import java.util.Map;
+import java.util.Set;
+import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.ThreadPoolExecutor;
 
-
 /**
- * 自动配置入口
+ * @Description: 动态配置入口
+ * @Author:bread
+ * @Date: 2024-05-26 20:05
  */
-@Slf4j
 @Configuration
-@EnableConfigurationProperties(DynamicThreadPoolRegistryRedisAutoProperties.class)
+@EnableConfigurationProperties(DynamicThreadPoolAutoProperties.class)
 @EnableScheduling
-@ImportAutoConfiguration({DynamicThreadPoolWebAutoConfig.class, DynamicThreadPoolAlarmAutoConfig.class})
+@Slf4j
 public class DynamicThreadPoolAutoConfig {
+    private final Logger logger = LoggerFactory.getLogger(DynamicThreadPoolAutoConfig.class);
+
+    private String applicationName;
 
-    @Bean
-    public RedissonClient redissonClient(DynamicThreadPoolRegistryRedisAutoProperties properties) {
+
+    @Bean("redissonClient")
+    public RedissonClient redissonClient(DynamicThreadPoolAutoProperties properties) {
         Config config = new Config();
-
+        // 根据需要可以设定编解码器；https://github.com/redisson/redisson/wiki/4.-%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96
         config.setCodec(JsonJacksonCodec.INSTANCE);
 
         config.useSingleServer()
-                .setAddress(String.format("redis://%s:%d", properties.getHost(), properties.getPort()))
+                .setAddress("redis://" + properties.getHost() + ":" + properties.getPort())
                 .setPassword(properties.getPassword())
-                .setDatabase(properties.getDatabase())
-                .setConnectionPoolSize(properties.getConnectionPoolSize())
-                .setConnectionMinimumIdleSize(properties.getConnectionMinimumIdleSize())
-                .setIdleConnectionTimeout(properties.getIdleConnectionTimeout())
+                .setConnectionPoolSize(properties.getPoolSize())
+                .setConnectionMinimumIdleSize(properties.getMinIdleSize())
+                .setIdleConnectionTimeout(properties.getIdleTimeout())
                 .setConnectTimeout(properties.getConnectTimeout())
                 .setRetryAttempts(properties.getRetryAttempts())
                 .setRetryInterval(properties.getRetryInterval())
-                .setKeepAlive(properties.getKeepAlive());
-        return Redisson.create(config);
-    }
-
-    @Bean
-    public IRegistry redisRegistry(RedissonClient redissonClient, IAlarmService alarmService) {
-        return new RedisRegistry(redissonClient, alarmService);
-    }
+                .setPingConnectionInterval(properties.getPingInterval())
+                .setKeepAlive(properties.isKeepAlive())
+        ;
 
-    @Bean
-    public ThreadPoolDataReportJob threadPoolDataReportJob(
-            IDynamicThreadPoolService dynamicThreadPoolService,
-            IRegistry redisRegistry) {
-        return new ThreadPoolDataReportJob(dynamicThreadPoolService, redisRegistry);
-    }
+        RedissonClient redissonClient = Redisson.create(config);
 
+        logger.info("动态线程池，注册器（redis）链接初始化完成。{} {} {}", properties.getHost(), properties.getPoolSize(), !redissonClient.isShutdown());
 
-    @Bean
-    public ThreadPoolConfigAdjustListener threadPoolConfigAdjustListener(
-            IDynamicThreadPoolService dynamicThreadPoolService,
-            IRegistry redisRegistry) {
-        return new ThreadPoolConfigAdjustListener(dynamicThreadPoolService, redisRegistry);
-    }
-
-
-    @Bean
-    public RTopic dynamicThreadPoolAdjustRedisTopic(
-            ThreadPoolConfigAdjustListener threadPoolConfigAdjustListener,
-            RedissonClient redissonClient) {
-        RTopic topic = redissonClient.getTopic(RegistryEnum.DYNAMIC_THREAD_POOL_ADJUST_REDIS_TOPIC_KEY.getKey());
-        topic.addListener(UpdateThreadPoolConfigDTO.class, threadPoolConfigAdjustListener);
-        return topic;
-    }
-
-    @Bean
-    public ThreadPoolConfigRefreshListener threadPoolConfigRefreshListener(
-            IDynamicThreadPoolService dynamicThreadPoolService,
-            IRegistry redisRegistry) {
-        return new ThreadPoolConfigRefreshListener(dynamicThreadPoolService, redisRegistry);
-    }
-
-    @Bean
-    public RTopic dynamicThreadPoolRefreshRedisTopic(
-            ThreadPoolConfigRefreshListener threadPoolConfigRefreshListener,
-            RedissonClient redissonClient) {
-        RTopic topic = redissonClient.getTopic(RegistryEnum.DYNAMIC_THREAD_POOL_REFRESH_REDIS_TOPIC_KEY.getKey());
-        topic.addListener(RefreshThreadPoolConfigDTO.class, threadPoolConfigRefreshListener);
-        return topic;
+        return redissonClient;
     }
 
     @Bean
-    public DynamicThreadPoolServiceImpl dynamicThreadPoolService(
-            ApplicationContext applicationContext,
-            Map<String, ThreadPoolExecutor> threadPoolExecutorMap,
-            RedissonClient redissonClient,
-            IAlarmService alarmService
-    ) {
-        String applicationName = ApplicationUtils.getApplicationName(applicationContext);
+    public IRegistry redisRegistry(RedissonClient redissonClient) {
+        return new RedisRegistry(redissonClient);
+    }
+
+    @Bean("dynamicThreadPollService")
+    public DynamicThreadPoolsService dynamicThreadPollService(ApplicationContext applicationContext, Map<String, ThreadPoolExecutor> threadPoolExecutorMap){
+         applicationName=applicationContext.getEnvironment().getProperty("spring.application.name");
+
         if (StringUtils.isBlank(applicationName)) {
-            log.warn("动态线程池启动提示。SpringBoot 应用未配置应用名(spring.application.name)");
+            applicationName = "缺省的";
+            logger.warn("动态线程池，启动提示。SpringBoot 应用未配置 spring.application.name 无法获取到应用名称！");
         }
 
-        // 创建Bean
-        DynamicThreadPoolServiceImpl dynamicThreadPoolService = new DynamicThreadPoolServiceImpl(
-                applicationName,
-                threadPoolExecutorMap,
-                alarmService
-        );
+        Set<String> threadPoolKeys = threadPoolExecutorMap.keySet();
+        for(String threadPoolKey :threadPoolKeys){
+            ThreadPoolExecutor threadPoolExecutor = threadPoolExecutorMap.get(threadPoolKey);
+            int poolSize = threadPoolExecutor.getPoolSize();
+            int corePoolSize = threadPoolExecutor.getCorePoolSize();
+            BlockingQueue<Runnable> queue = threadPoolExecutor.getQueue();
+            String simpleName = queue.getClass().getSimpleName();
 
-        // 获取缓存的配置信息，配置线程池
-        threadPoolExecutorMap.forEach((poolName, executor) -> {
-            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO = RedisUtils.getUpdateThreadPoolConfigDTO(
-                    redissonClient,
-                    applicationName,
-                    poolName
-            );
-            if (updateThreadPoolConfigDTO == null) {
-                return;
-            }
+        }
 
 
-            dynamicThreadPoolService.updateThreadPoolConfig(
-                    updateThreadPoolConfigDTO
-            );
-
-        });
+        logger.info("线程池信息{}", JSON.toJSONString(threadPoolExecutorMap.keySet()));
+        return new DynamicThreadPoolsService(applicationName,threadPoolExecutorMap);
+    }
 
-        return dynamicThreadPoolService;
-    }
 
     @Bean
-    public PrometheusConfigRunner prometheusConfigRunner(
-            ApplicationContext applicationContext,
-            WebEndpointProperties webEndpointProperties,
-            PrometheusProperties prometheusProperties
-    ) {
-        webEndpointProperties.getExposure().setInclude(
-                new HashSet<>(Arrays.asList(
-                        "health",
-                        "prometheus"
-                ))
-        );
-
-        prometheusProperties.setEnabled(true);
-
-        return new PrometheusConfigRunner(
-                applicationContext
-        );
+    public ThreadPoolDataReportJob threadPoolDataReportJob(IDynamicThreadPoolService dynamicThreadPoolService, IRegistry registry) {
+        return new ThreadPoolDataReportJob(dynamicThreadPoolService, registry);
     }
 
     @Bean
-    public MeterFilter customMeterFilter() {
-        return new MeterFilter() {
-            @Override
-            public MeterFilterReply accept(Meter.Id id) {
-                if (id.getName().contains("thread_pool")) {
-                    return MeterFilterReply.ACCEPT;
-                }
-                return MeterFilterReply.DENY;
-            }
-        };
+    public ThreadPoolConfigAdjustListener createThreadPoolConfigAdjustListener(IDynamicThreadPoolService dynamicThreadPoolService, IRegistry registry) {
+        return new ThreadPoolConfigAdjustListener(dynamicThreadPoolService, registry);
+    }
+
+    @Bean(name = "dynamicThreadPoolRedisTopic")
+    public RTopic createDynamicThreadPoolRedisTopic(RedissonClient redissonClient, @Qualifier("createThreadPoolConfigAdjustListener") ThreadPoolConfigAdjustListener threadPoolConfigAdjustListener) {
+        RTopic topic = redissonClient.getTopic(RegistryEnumVO.DYNAMIC_THREAD_POOL_REDIS_TOPIC.getKey() + "_" + applicationName);
+        topic.addListener(ThreadPoolConfigEntity.class, threadPoolConfigAdjustListener);
+        return topic;
     }
+
 }
Index: .idea/git_toolbox_prj.xml
===================================================================
diff --git a/.idea/git_toolbox_prj.xml b/.idea/git_toolbox_prj.xml
deleted file mode 100644
--- a/.idea/git_toolbox_prj.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="GitToolBoxProjectSettings">
-    <option name="commitMessageIssueKeyValidationOverride">
-      <BoolValueOverride>
-        <option name="enabled" value="true" />
-      </BoolValueOverride>
-    </option>
-    <option name="commitMessageValidationEnabledOverride">
-      <BoolValueOverride>
-        <option name="enabled" value="true" />
-      </BoolValueOverride>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/IAlarmStrategy.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/IAlarmStrategy.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/IAlarmStrategy.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/IAlarmStrategy.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,9 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.strategy.alarm;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import com.taobao.api.ApiException;
-
-public interface IAlarmStrategy {
-    void send(AlarmMessageDTO message) throws ApiException;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/DynamicThreadPoolServiceImpl.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/DynamicThreadPoolServiceImpl.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/DynamicThreadPoolServiceImpl.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/DynamicThreadPoolServiceImpl.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,110 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.impl;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.hook.ResizableCapacityLinkedBlockingQueue;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IAlarmService;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;
-import lombok.AllArgsConstructor;
-import lombok.extern.slf4j.Slf4j;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-import java.util.Objects;
-import java.util.concurrent.ThreadPoolExecutor;
-
-/**
- * 动态线程池服务
- */
-
-@Slf4j
-@AllArgsConstructor
-public class DynamicThreadPoolServiceImpl implements IDynamicThreadPoolService {
-
-    private String applicationName;
-
-    private Map<String, ThreadPoolExecutor> threadPoolExecutorMap;
-
-    private IAlarmService alarmService;
-
-    @Override
-    public List<ThreadPoolConfigEntity> queryThreadPoolList() {
-        ArrayList<ThreadPoolConfigEntity> threadPools = new ArrayList<>();
-
-        threadPoolExecutorMap.forEach((beanName, executor) -> threadPools.add(
-                ThreadPoolConfigEntity.buildThreadPoolConfigEntity(
-                        applicationName,
-                        beanName,
-                        executor
-                )
-        ));
-
-        return threadPools;
-    }
-
-    @Override
-    public ThreadPoolConfigEntity queryThreadPoolByName(String threadPoolName) {
-        return ThreadPoolConfigEntity.buildThreadPoolConfigEntity(
-                applicationName,
-                threadPoolName,
-                threadPoolExecutorMap.get(threadPoolName)
-        );
-    }
-
-    @Override
-    public Boolean updateThreadPoolConfig(UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO) {
-        if (updateThreadPoolConfigDTO == null) {
-            return false;
-        }
-
-        if (!Objects.equals(updateThreadPoolConfigDTO.getApplicationName(), applicationName)) {
-            return false;
-        }
-
-        String threadPoolName = updateThreadPoolConfigDTO.getThreadPoolName();
-        if (threadPoolName == null) {
-            return false;
-        }
-
-        ThreadPoolExecutor threadPoolExecutor = threadPoolExecutorMap.get(threadPoolName);
-        if (threadPoolExecutor == null) {
-            return false;
-        }
-
-        Integer corePoolSize = updateThreadPoolConfigDTO.getCorePoolSize();
-        Integer maximumPoolSize = updateThreadPoolConfigDTO.getMaximumPoolSize();
-        // CorePoolSize 小于等于 MaximumPoolSize, 否则发出告警
-        if (maximumPoolSize < corePoolSize) {
-            alarmService.send(
-                    AlarmMessageDTO
-                            .buildAlarmMessageDTO("变更配置出错")
-                            .appendParameter("错误原因", "最大线程数小于核心线程数")
-                            .appendParameter("最大线程数", maximumPoolSize)
-                            .appendParameter("核心线程数", corePoolSize)
-            );
-            log.error("动态线程池, 变更配置时出错(最大线程数小于核心线程数): {}", updateThreadPoolConfigDTO);
-            return false;
-        }
-
-        // 变更时注意设置值的顺序, 始终满足CorePoolSize 小于等于 MaximumPoolSize
-        if (corePoolSize < threadPoolExecutor.getMaximumPoolSize()) {
-            threadPoolExecutor.setCorePoolSize(updateThreadPoolConfigDTO.getCorePoolSize());
-            threadPoolExecutor.setMaximumPoolSize(updateThreadPoolConfigDTO.getMaximumPoolSize());
-        } else {
-            threadPoolExecutor.setMaximumPoolSize(updateThreadPoolConfigDTO.getMaximumPoolSize());
-            threadPoolExecutor.setCorePoolSize(updateThreadPoolConfigDTO.getCorePoolSize());
-        }
-
-        // 变更阻塞队列的大小
-        ResizableCapacityLinkedBlockingQueue queue =
-                (ResizableCapacityLinkedBlockingQueue) threadPoolExecutor.getQueue();
-        queue.setCapacity(updateThreadPoolConfigDTO.getQueueCapacity());
-
-        // 可再次推送告警
-        AlarmServiceImpl.setCanSendForThreadPoolDanger(true);
-        return true;
-    }
-}
Index: dynamic-thread-pool-test/target/classes/logback-spring.xml
===================================================================
diff --git a/dynamic-thread-pool-test/target/classes/logback-spring.xml b/dynamic-thread-pool-test/target/classes/logback-spring.xml
deleted file mode 100644
--- a/dynamic-thread-pool-test/target/classes/logback-spring.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,113 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
-<configuration scan="true" scanPeriod="10 seconds">
-
-    <contextName>logback</contextName>
-    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
-    <springProperty scope="context" name="log.path" source="logging.path"/>
-    <!-- 日志格式 -->
-    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
-    <conversionRule conversionWord="wex"
-                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
-    <conversionRule conversionWord="wEx"
-                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
-
-    <!-- 输出到控制台 -->
-    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
-        <!-- 此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息 -->
-        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
-            <level>info</level>
-        </filter>
-        <encoder>
-            <pattern>%d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0}%X{ServiceId} -%X{trace-id} %m%n</pattern>
-            <charset>UTF-8</charset>
-        </encoder>
-    </appender>
-
-    <!--输出到文件-->
-    <!-- 时间滚动输出 level为 INFO 日志 -->
-    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
-        <!-- 正在记录的日志文件的路径及文件名 -->
-        <file>./data/log/log_info.log</file>
-        <!--日志文件输出格式-->
-        <encoder>
-            <pattern>%d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0}%X{ServiceId} -%X{trace-id} %m%n</pattern>
-            <charset>UTF-8</charset>
-        </encoder>
-        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
-        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
-            <!-- 每天日志归档路径以及格式 -->
-            <fileNamePattern>./data/log/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
-            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
-                <maxFileSize>100MB</maxFileSize>
-            </timeBasedFileNamingAndTriggeringPolicy>
-            <!--日志文件保留天数-->
-            <maxHistory>15</maxHistory>
-            <totalSizeCap>10GB</totalSizeCap>
-        </rollingPolicy>
-    </appender>
-
-    <!-- 时间滚动输出 level为 ERROR 日志 -->
-    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
-        <!-- 正在记录的日志文件的路径及文件名 -->
-        <file>./data/log/log_error.log</file>
-        <!--日志文件输出格式-->
-        <encoder>
-            <pattern>%d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0}%X{ServiceId} -%X{trace-id} %m%n</pattern>
-            <charset>UTF-8</charset>
-        </encoder>
-        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
-        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
-            <fileNamePattern>./data/log/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
-            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
-                <maxFileSize>100MB</maxFileSize>
-            </timeBasedFileNamingAndTriggeringPolicy>
-            <!-- 日志文件保留天数【根据服务器预留，可自行调整】 -->
-            <maxHistory>7</maxHistory>
-            <totalSizeCap>5GB</totalSizeCap>
-        </rollingPolicy>
-        <!-- WARN 级别及以上 -->
-        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
-            <level>WARN</level>
-        </filter>
-    </appender>
-
-    <!-- 异步输出 -->
-    <appender name="ASYNC_FILE_INFO" class="ch.qos.logback.classic.AsyncAppender">
-        <!-- 队列剩余容量小于discardingThreshold,则会丢弃TRACT、DEBUG、INFO级别的日志;默认值-1,为queueSize的20%;0不丢失日志 -->
-        <discardingThreshold>0</discardingThreshold>
-        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
-        <queueSize>8192</queueSize>
-        <!-- neverBlock:true 会丢失日志,但业务性能不受影响 -->
-        <neverBlock>true</neverBlock>
-        <!--是否提取调用者数据-->
-        <includeCallerData>false</includeCallerData>
-        <appender-ref ref="INFO_FILE"/>
-    </appender>
-
-    <appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">
-        <!-- 队列剩余容量小于discardingThreshold,则会丢弃TRACT、DEBUG、INFO级别的日志;默认值-1,为queueSize的20%;0不丢失日志 -->
-        <discardingThreshold>0</discardingThreshold>
-        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
-        <queueSize>1024</queueSize>
-        <!-- neverBlock:true 会丢失日志,但业务性能不受影响 -->
-        <neverBlock>true</neverBlock>
-        <!--是否提取调用者数据-->
-        <includeCallerData>false</includeCallerData>
-        <appender-ref ref="ERROR_FILE"/>
-    </appender>
-
-    <!-- 开发环境：控制台打印 -->
-    <springProfile name="dev">
-        <logger name="com.nmys.view" level="debug"/>
-    </springProfile>
-
-    <root level="info">
-        <appender-ref ref="CONSOLE"/>
-        <!-- 异步日志-INFO -->
-        <appender-ref ref="ASYNC_FILE_INFO"/>
-        <!-- 异步日志-ERROR -->
-        <appender-ref ref="ASYNC_FILE_ERROR"/>
-    </root>
-
-</configuration>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IDynamicThreadPoolService.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IDynamicThreadPoolService.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IDynamicThreadPoolService.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IDynamicThreadPoolService.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,35 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.service;
-
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-
-import java.util.List;
-
-/**
- * 动态线程池服务接口
- */
-public interface IDynamicThreadPoolService {
-
-    /**
-     * 查询所有线程池
-     * @return 线程池列表
-     */
-    List<ThreadPoolConfigEntity> queryThreadPoolList();
-
-    /**
-     * 根据线程池名称查询线程池
-     * @param threadPoolName 线程池名称
-     * @return 线程池
-     */
-    ThreadPoolConfigEntity queryThreadPoolByName(String threadPoolName);
-
-    /**
-     * 更新线程池配置
-     * @param updateThreadPoolConfigDTO 更新线程池传输对象
-     * @return 是否更新成功
-     */
-    Boolean updateThreadPoolConfig(UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO);
-
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,27 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.exception;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.enums.ResponseEnum;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.ResponseVO;
-import lombok.extern.slf4j.Slf4j;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.bind.annotation.ResponseBody;
-
-@Slf4j
-@ControllerAdvice
-public class DynamicThreadPoolWebGlobalExceptionHandler {
-
-    @ExceptionHandler(BusinessException.class)
-    @ResponseBody
-    public ResponseVO<?> processBusinessException(BusinessException e) {
-        log.warn("动态线程池Web, 出现业务异常", e);
-        return ResponseVO.failed(e.getResponseEnum(), e.getDescription());
-    }
-
-    @ExceptionHandler(RuntimeException.class)
-    public ResponseVO<?> processRuntimeException(RuntimeException e) {
-        log.error("动态线程池Web, 出现系统异常: {}", e.toString());
-        return ResponseVO.failed(ResponseEnum.SYSTEM_ERROR, e.toString());
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/FeiShuAlarmStrategy.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/FeiShuAlarmStrategy.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/FeiShuAlarmStrategy.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/FeiShuAlarmStrategy.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,22 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.strategy.alarm;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums.AlarmStrategyEnum;
-import com.taobao.api.ApiException;
-import lombok.extern.slf4j.Slf4j;
-import org.springframework.stereotype.Component;
-
-@Slf4j
-@Component
-public class FeiShuAlarmStrategy extends AbstractAlarmStrategy{
-    @Override
-    public String getStrategyName() {
-        return AlarmStrategyEnum.FEI_SHU.getValue();
-    }
-
-    @Override
-    public void send(AlarmMessageDTO message) throws ApiException {
-        log.info("飞书告警未实现，仅用于测试策略模式, message: {}", message);
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/ResizableCapacityLinkedBlockingQueue.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/ResizableCapacityLinkedBlockingQueue.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/ResizableCapacityLinkedBlockingQueue.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/ResizableCapacityLinkedBlockingQueue.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,1171 +0,0 @@
-/**
- * 对LinkedBlockingQueue进行修改，使之支持动态修改阻塞队列长度
- */
-
-/*
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.  Oracle designates this
- * particular file as subject to the "Classpath" exception as provided
- * by Oracle in the LICENSE file that accompanied this code.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-
-/*
- * This file is available under and governed by the GNU General Public
- * License version 2 only, as published by the Free Software Foundation.
- * However, the following notice accompanied the original version of this
- * file:
- *
- * Written by Doug Lea with assistance from members of JCP JSR-166
- * Expert Group and released to the public domain, as explained at
- * http://creativecommons.org/publicdomain/zero/1.0/
- */
-
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.hook;
-
-import java.util.*;
-import java.util.concurrent.BlockingQueue;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.concurrent.locks.Condition;
-import java.util.concurrent.locks.ReentrantLock;
-import java.util.function.Consumer;
-import java.util.function.Predicate;
-
-/**
- * An optionally-bounded {@linkplain BlockingQueue blocking queue} based on
- * linked nodes.
- * This queue orders elements FIFO (first-in-first-out).
- * The <em>head</em> of the queue is that element that has been on the
- * queue the longest time.
- * The <em>tail</em> of the queue is that element that has been on the
- * queue the shortest time. New elements
- * are inserted at the tail of the queue, and the queue retrieval
- * operations obtain elements at the head of the queue.
- * Linked queues typically have higher throughput than array-based queues but
- * less predictable performance in most concurrent applications.
- *
- * <p>The optional capacity bound constructor argument serves as a
- * way to prevent excessive queue expansion. The capacity, if unspecified,
- * is equal to {@link Integer#MAX_VALUE}.  Linked nodes are
- * dynamically created upon each insertion unless this would bring the
- * queue above capacity.
- *
- * <p>This class and its iterator implement all of the <em>optional</em>
- * methods of the {@link Collection} and {@link Iterator} interfaces.
- *
- * <p>This class is a member of the
- * <a href="{@docRoot}/java.base/java/util/package-summary.html#CollectionsFramework">
- * Java Collections Framework</a>.
- *
- * @since 1.5
- * @author Doug Lea
- * @param <E> the type of elements held in this queue
- */
-public class ResizableCapacityLinkedBlockingQueue<E> extends AbstractQueue<E>
-        implements BlockingQueue<E>, java.io.Serializable {
-    private static final long serialVersionUID = -6903933977591709194L;
-
-    /*
-     * A variant of the "two lock queue" algorithm.  The putLock gates
-     * entry to put (and offer), and has an associated condition for
-     * waiting puts.  Similarly for the takeLock.  The "count" field
-     * that they both rely on is maintained as an atomic to avoid
-     * needing to get both locks in most cases. Also, to minimize need
-     * for puts to get takeLock and vice-versa, cascading notifies are
-     * used. When a put notices that it has enabled at least one take,
-     * it signals taker. That taker in turn signals others if more
-     * items have been entered since the signal. And symmetrically for
-     * takes signalling puts. Operations such as remove(Object) and
-     * iterators acquire both locks.
-     *
-     * Visibility between writers and readers is provided as follows:
-     *
-     * Whenever an element is enqueued, the putLock is acquired and
-     * count updated.  A subsequent reader guarantees visibility to the
-     * enqueued Node by either acquiring the putLock (via fullyLock)
-     * or by acquiring the takeLock, and then reading n = count.get();
-     * this gives visibility to the first n items.
-     *
-     * To implement weakly consistent iterators, it appears we need to
-     * keep all Nodes GC-reachable from a predecessor dequeued Node.
-     * That would cause two problems:
-     * - allow a rogue Iterator to cause unbounded memory retention
-     * - cause cross-generational linking of old Nodes to new Nodes if
-     *   a Node was tenured while live, which generational GCs have a
-     *   hard time dealing with, causing repeated major collections.
-     * However, only non-deleted Nodes need to be reachable from
-     * dequeued Nodes, and reachability does not necessarily have to
-     * be of the kind understood by the GC.  We use the trick of
-     * linking a Node that has just been dequeued to itself.  Such a
-     * self-link implicitly means to advance to head.next.
-     */
-
-    /**
-     * Linked list node class.
-     */
-    static class Node<E> {
-        E item;
-
-        /**
-         * One of:
-         * - the real successor Node
-         * - this Node, meaning the successor is head.next
-         * - null, meaning there is no successor (this is the last node)
-         */
-        Node<E> next;
-
-        Node(E x) { item = x; }
-    }
-
-    /** The capacity bound, or Integer.MAX_VALUE if none */
-    private int capacity;
-
-    /** Current number of elements */
-    private final AtomicInteger count = new AtomicInteger();
-
-    /**
-     * Head of linked list.
-     * Invariant: head.item == null
-     */
-    transient Node<E> head;
-
-    /**
-     * Tail of linked list.
-     * Invariant: last.next == null
-     */
-    private transient Node<E> last;
-
-    /** Lock held by take, poll, etc */
-    private final ReentrantLock takeLock = new ReentrantLock();
-
-    /** Wait queue for waiting takes */
-    @SuppressWarnings("serial") // Classes implementing Condition may be serializable.
-    private final Condition notEmpty = takeLock.newCondition();
-
-    /** Lock held by put, offer, etc */
-    private final ReentrantLock putLock = new ReentrantLock();
-
-    /** Wait queue for waiting puts */
-    @SuppressWarnings("serial") // Classes implementing Condition may be serializable.
-    private final Condition notFull = putLock.newCondition();
-
-    /**
-     * Signals a waiting take. Called only from put/offer (which do not
-     * otherwise ordinarily lock takeLock.)
-     */
-    private void signalNotEmpty() {
-        final ReentrantLock takeLock = this.takeLock;
-        takeLock.lock();
-        try {
-            notEmpty.signal();
-        } finally {
-            takeLock.unlock();
-        }
-    }
-
-    /**
-     * Signals a waiting put. Called only from take/poll.
-     */
-    private void signalNotFull() {
-        final ReentrantLock putLock = this.putLock;
-        putLock.lock();
-        try {
-            notFull.signal();
-        } finally {
-            putLock.unlock();
-        }
-    }
-
-    /**
-     * Links node at end of queue.
-     *
-     * @param node the node
-     */
-    private void enqueue(Node<E> node) {
-        // assert putLock.isHeldByCurrentThread();
-        // assert last.next == null;
-        last = last.next = node;
-    }
-
-    /**
-     * Removes a node from head of queue.
-     *
-     * @return the node
-     */
-    private E dequeue() {
-        // assert takeLock.isHeldByCurrentThread();
-        // assert head.item == null;
-        Node<E> h = head;
-        Node<E> first = h.next;
-        h.next = h; // help GC
-        head = first;
-        E x = first.item;
-        first.item = null;
-        return x;
-    }
-
-    /**
-     * Locks to prevent both puts and takes.
-     */
-    void fullyLock() {
-        putLock.lock();
-        takeLock.lock();
-    }
-
-    /**
-     * Unlocks to allow both puts and takes.
-     */
-    void fullyUnlock() {
-        takeLock.unlock();
-        putLock.unlock();
-    }
-
-    /**
-     * Creates a {@code LinkedBlockingQueue} with a capacity of
-     * {@link Integer#MAX_VALUE}.
-     */
-    public ResizableCapacityLinkedBlockingQueue() {
-        this(Integer.MAX_VALUE);
-    }
-
-    /**
-     * Creates a {@code LinkedBlockingQueue} with the given (fixed) capacity.
-     *
-     * @param capacity the capacity of this queue
-     * @throws IllegalArgumentException if {@code capacity} is not greater
-     *         than zero
-     */
-    public ResizableCapacityLinkedBlockingQueue(int capacity) {
-        if (capacity <= 0) throw new IllegalArgumentException();
-        this.capacity = capacity;
-        last = head = new Node<E>(null);
-    }
-
-    /**
-     * Creates a {@code LinkedBlockingQueue} with a capacity of
-     * {@link Integer#MAX_VALUE}, initially containing the elements of the
-     * given collection,
-     * added in traversal order of the collection's iterator.
-     *
-     * @param c the collection of elements to initially contain
-     * @throws NullPointerException if the specified collection or any
-     *         of its elements are null
-     */
-    public ResizableCapacityLinkedBlockingQueue(Collection<? extends E> c) {
-        this(Integer.MAX_VALUE);
-        final ReentrantLock putLock = this.putLock;
-        putLock.lock(); // Never contended, but necessary for visibility
-        try {
-            int n = 0;
-            for (E e : c) {
-                if (e == null)
-                    throw new NullPointerException();
-                if (n == capacity)
-                    throw new IllegalStateException("Queue full");
-                enqueue(new Node<E>(e));
-                ++n;
-            }
-            count.set(n);
-        } finally {
-            putLock.unlock();
-        }
-    }
-
-    // this doc comment is overridden to remove the reference to collections
-    // greater in size than Integer.MAX_VALUE
-    /**
-     * Returns the number of elements in this queue.
-     *
-     * @return the number of elements in this queue
-     */
-    public int size() {
-        return count.get();
-    }
-
-    // this doc comment is a modified copy of the inherited doc comment,
-    // without the reference to unlimited queues.
-    /**
-     * Returns the number of additional elements that this queue can ideally
-     * (in the absence of memory or resource constraints) accept without
-     * blocking. This is always equal to the initial capacity of this queue
-     * less the current {@code size} of this queue.
-     *
-     * <p>Note that you <em>cannot</em> always tell if an attempt to insert
-     * an element will succeed by inspecting {@code remainingCapacity}
-     * because it may be the case that another thread is about to
-     * insert or remove an element.
-     */
-    public int remainingCapacity() {
-        return capacity - count.get();
-    }
-
-    /**
-     * Inserts the specified element at the tail of this queue, waiting if
-     * necessary for space to become available.
-     *
-     * @throws InterruptedException {@inheritDoc}
-     * @throws NullPointerException {@inheritDoc}
-     */
-    public void put(E e) throws InterruptedException {
-        if (e == null) throw new NullPointerException();
-        final int c;
-        final Node<E> node = new Node<E>(e);
-        final ReentrantLock putLock = this.putLock;
-        final AtomicInteger count = this.count;
-        putLock.lockInterruptibly();
-        try {
-            /*
-             * Note that count is used in wait guard even though it is
-             * not protected by lock. This works because count can
-             * only decrease at this point (all other puts are shut
-             * out by lock), and we (or some other waiting put) are
-             * signalled if it ever changes from capacity. Similarly
-             * for all other uses of count in other wait guards.
-             */
-            while (count.get() == capacity) {
-                notFull.await();
-            }
-            enqueue(node);
-            c = count.getAndIncrement();
-            if (c + 1 < capacity)
-                notFull.signal();
-        } finally {
-            putLock.unlock();
-        }
-        if (c == 0)
-            signalNotEmpty();
-    }
-
-    /**
-     * Inserts the specified element at the tail of this queue, waiting if
-     * necessary up to the specified wait time for space to become available.
-     *
-     * @return {@code true} if successful, or {@code false} if
-     *         the specified waiting time elapses before space is available
-     * @throws InterruptedException {@inheritDoc}
-     * @throws NullPointerException {@inheritDoc}
-     */
-    public boolean offer(E e, long timeout, TimeUnit unit)
-            throws InterruptedException {
-
-        if (e == null) throw new NullPointerException();
-        long nanos = unit.toNanos(timeout);
-        final int c;
-        final ReentrantLock putLock = this.putLock;
-        final AtomicInteger count = this.count;
-        putLock.lockInterruptibly();
-        try {
-            while (count.get() == capacity) {
-                if (nanos <= 0L)
-                    return false;
-                nanos = notFull.awaitNanos(nanos);
-            }
-            enqueue(new Node<E>(e));
-            c = count.getAndIncrement();
-            if (c + 1 < capacity)
-                notFull.signal();
-        } finally {
-            putLock.unlock();
-        }
-        if (c == 0)
-            signalNotEmpty();
-        return true;
-    }
-
-    /**
-     * Inserts the specified element at the tail of this queue if it is
-     * possible to do so immediately without exceeding the queue's capacity,
-     * returning {@code true} upon success and {@code false} if this queue
-     * is full.
-     * When using a capacity-restricted queue, this method is generally
-     * preferable to method {@link BlockingQueue#add add}, which can fail to
-     * insert an element only by throwing an exception.
-     *
-     * @throws NullPointerException if the specified element is null
-     */
-    public boolean offer(E e) {
-        if (e == null) throw new NullPointerException();
-        final AtomicInteger count = this.count;
-        if (count.get() == capacity)
-            return false;
-        final int c;
-        final Node<E> node = new Node<E>(e);
-        final ReentrantLock putLock = this.putLock;
-        putLock.lock();
-        try {
-            if (count.get() == capacity)
-                return false;
-            enqueue(node);
-            c = count.getAndIncrement();
-            if (c + 1 < capacity)
-                notFull.signal();
-        } finally {
-            putLock.unlock();
-        }
-        if (c == 0)
-            signalNotEmpty();
-        return true;
-    }
-
-    public E take() throws InterruptedException {
-        final E x;
-        final int c;
-        final AtomicInteger count = this.count;
-        final ReentrantLock takeLock = this.takeLock;
-        takeLock.lockInterruptibly();
-        try {
-            while (count.get() == 0) {
-                notEmpty.await();
-            }
-            x = dequeue();
-            c = count.getAndDecrement();
-            if (c > 1)
-                notEmpty.signal();
-        } finally {
-            takeLock.unlock();
-        }
-        if (c == capacity)
-            signalNotFull();
-        return x;
-    }
-
-    public E poll(long timeout, TimeUnit unit) throws InterruptedException {
-        final E x;
-        final int c;
-        long nanos = unit.toNanos(timeout);
-        final AtomicInteger count = this.count;
-        final ReentrantLock takeLock = this.takeLock;
-        takeLock.lockInterruptibly();
-        try {
-            while (count.get() == 0) {
-                if (nanos <= 0L)
-                    return null;
-                nanos = notEmpty.awaitNanos(nanos);
-            }
-            x = dequeue();
-            c = count.getAndDecrement();
-            if (c > 1)
-                notEmpty.signal();
-        } finally {
-            takeLock.unlock();
-        }
-        if (c == capacity)
-            signalNotFull();
-        return x;
-    }
-
-    public E poll() {
-        final AtomicInteger count = this.count;
-        if (count.get() == 0)
-            return null;
-        final E x;
-        final int c;
-        final ReentrantLock takeLock = this.takeLock;
-        takeLock.lock();
-        try {
-            if (count.get() == 0)
-                return null;
-            x = dequeue();
-            c = count.getAndDecrement();
-            if (c > 1)
-                notEmpty.signal();
-        } finally {
-            takeLock.unlock();
-        }
-        if (c == capacity)
-            signalNotFull();
-        return x;
-    }
-
-    public E peek() {
-        final AtomicInteger count = this.count;
-        if (count.get() == 0)
-            return null;
-        final ReentrantLock takeLock = this.takeLock;
-        takeLock.lock();
-        try {
-            return (count.get() > 0) ? head.next.item : null;
-        } finally {
-            takeLock.unlock();
-        }
-    }
-
-    /**
-     * Unlinks interior Node p with predecessor pred.
-     */
-    void unlink(Node<E> p, Node<E> pred) {
-        // assert putLock.isHeldByCurrentThread();
-        // assert takeLock.isHeldByCurrentThread();
-        // p.next is not changed, to allow iterators that are
-        // traversing p to maintain their weak-consistency guarantee.
-        p.item = null;
-        pred.next = p.next;
-        if (last == p)
-            last = pred;
-        if (count.getAndDecrement() == capacity)
-            notFull.signal();
-    }
-
-    /**
-     * Removes a single instance of the specified element from this queue,
-     * if it is present.  More formally, removes an element {@code e} such
-     * that {@code o.equals(e)}, if this queue contains one or more such
-     * elements.
-     * Returns {@code true} if this queue contained the specified element
-     * (or equivalently, if this queue changed as a result of the call).
-     *
-     * @param o element to be removed from this queue, if present
-     * @return {@code true} if this queue changed as a result of the call
-     */
-    public boolean remove(Object o) {
-        if (o == null) return false;
-        fullyLock();
-        try {
-            for (Node<E> pred = head, p = pred.next;
-                 p != null;
-                 pred = p, p = p.next) {
-                if (o.equals(p.item)) {
-                    unlink(p, pred);
-                    return true;
-                }
-            }
-            return false;
-        } finally {
-            fullyUnlock();
-        }
-    }
-
-    /**
-     * Returns {@code true} if this queue contains the specified element.
-     * More formally, returns {@code true} if and only if this queue contains
-     * at least one element {@code e} such that {@code o.equals(e)}.
-     *
-     * @param o object to be checked for containment in this queue
-     * @return {@code true} if this queue contains the specified element
-     */
-    public boolean contains(Object o) {
-        if (o == null) return false;
-        fullyLock();
-        try {
-            for (Node<E> p = head.next; p != null; p = p.next)
-                if (o.equals(p.item))
-                    return true;
-            return false;
-        } finally {
-            fullyUnlock();
-        }
-    }
-
-    /**
-     * Returns an array containing all of the elements in this queue, in
-     * proper sequence.
-     *
-     * <p>The returned array will be "safe" in that no references to it are
-     * maintained by this queue.  (In other words, this method must allocate
-     * a new array).  The caller is thus free to modify the returned array.
-     *
-     * <p>This method acts as bridge between array-based and collection-based
-     * APIs.
-     *
-     * @return an array containing all of the elements in this queue
-     */
-    public Object[] toArray() {
-        fullyLock();
-        try {
-            int size = count.get();
-            Object[] a = new Object[size];
-            int k = 0;
-            for (Node<E> p = head.next; p != null; p = p.next)
-                a[k++] = p.item;
-            return a;
-        } finally {
-            fullyUnlock();
-        }
-    }
-
-    /**
-     * Returns an array containing all of the elements in this queue, in
-     * proper sequence; the runtime type of the returned array is that of
-     * the specified array.  If the queue fits in the specified array, it
-     * is returned therein.  Otherwise, a new array is allocated with the
-     * runtime type of the specified array and the size of this queue.
-     *
-     * <p>If this queue fits in the specified array with room to spare
-     * (i.e., the array has more elements than this queue), the element in
-     * the array immediately following the end of the queue is set to
-     * {@code null}.
-     *
-     * <p>Like the {@link #toArray()} method, this method acts as bridge between
-     * array-based and collection-based APIs.  Further, this method allows
-     * precise control over the runtime type of the output array, and may,
-     * under certain circumstances, be used to save allocation costs.
-     *
-     * <p>Suppose {@code x} is a queue known to contain only strings.
-     * The following code can be used to dump the queue into a newly
-     * allocated array of {@code String}:
-     *
-     * <pre> {@code String[] y = x.toArray(new String[0]);}</pre>
-     *
-     * Note that {@code toArray(new Object[0])} is identical in function to
-     * {@code toArray()}.
-     *
-     * @param a the array into which the elements of the queue are to
-     *          be stored, if it is big enough; otherwise, a new array of the
-     *          same runtime type is allocated for this purpose
-     * @return an array containing all of the elements in this queue
-     * @throws ArrayStoreException if the runtime type of the specified array
-     *         is not a supertype of the runtime type of every element in
-     *         this queue
-     * @throws NullPointerException if the specified array is null
-     */
-    @SuppressWarnings("unchecked")
-    public <T> T[] toArray(T[] a) {
-        fullyLock();
-        try {
-            int size = count.get();
-            if (a.length < size)
-                a = (T[])java.lang.reflect.Array.newInstance
-                        (a.getClass().getComponentType(), size);
-
-            int k = 0;
-            for (Node<E> p = head.next; p != null; p = p.next)
-                a[k++] = (T)p.item;
-            if (a.length > k)
-                a[k] = null;
-            return a;
-        } finally {
-            fullyUnlock();
-        }
-    }
-
-    public String toString() {
-        return Helpers.collectionToString(this);
-    }
-
-    /**
-     * Atomically removes all of the elements from this queue.
-     * The queue will be empty after this call returns.
-     */
-    public void clear() {
-        fullyLock();
-        try {
-            for (Node<E> p, h = head; (p = h.next) != null; h = p) {
-                h.next = h;
-                p.item = null;
-            }
-            head = last;
-            // assert head.item == null && head.next == null;
-            if (count.getAndSet(0) == capacity)
-                notFull.signal();
-        } finally {
-            fullyUnlock();
-        }
-    }
-
-    /**
-     * @throws UnsupportedOperationException {@inheritDoc}
-     * @throws ClassCastException            {@inheritDoc}
-     * @throws NullPointerException          {@inheritDoc}
-     * @throws IllegalArgumentException      {@inheritDoc}
-     */
-    public int drainTo(Collection<? super E> c) {
-        return drainTo(c, Integer.MAX_VALUE);
-    }
-
-    /**
-     * @throws UnsupportedOperationException {@inheritDoc}
-     * @throws ClassCastException            {@inheritDoc}
-     * @throws NullPointerException          {@inheritDoc}
-     * @throws IllegalArgumentException      {@inheritDoc}
-     */
-    public int drainTo(Collection<? super E> c, int maxElements) {
-        Objects.requireNonNull(c);
-        if (c == this)
-            throw new IllegalArgumentException();
-        if (maxElements <= 0)
-            return 0;
-        boolean signalNotFull = false;
-        final ReentrantLock takeLock = this.takeLock;
-        takeLock.lock();
-        try {
-            int n = Math.min(maxElements, count.get());
-            // count.get provides visibility to first n Nodes
-            Node<E> h = head;
-            int i = 0;
-            try {
-                while (i < n) {
-                    Node<E> p = h.next;
-                    c.add(p.item);
-                    p.item = null;
-                    h.next = h;
-                    h = p;
-                    ++i;
-                }
-                return n;
-            } finally {
-                // Restore invariants even if c.add() threw
-                if (i > 0) {
-                    // assert h.item == null;
-                    head = h;
-                    signalNotFull = (count.getAndAdd(-i) == capacity);
-                }
-            }
-        } finally {
-            takeLock.unlock();
-            if (signalNotFull)
-                signalNotFull();
-        }
-    }
-
-    /**
-     * Used for any element traversal that is not entirely under lock.
-     * Such traversals must handle both:
-     * - dequeued nodes (p.next == p)
-     * - (possibly multiple) interior removed nodes (p.item == null)
-     */
-    Node<E> succ(Node<E> p) {
-        if (p == (p = p.next))
-            p = head.next;
-        return p;
-    }
-
-    /**
-     * Returns an iterator over the elements in this queue in proper sequence.
-     * The elements will be returned in order from first (head) to last (tail).
-     *
-     * <p>The returned iterator is
-     * <a href="package-summary.html#Weakly"><i>weakly consistent</i></a>.
-     *
-     * @return an iterator over the elements in this queue in proper sequence
-     */
-    public Iterator<E> iterator() {
-        return new Itr();
-    }
-
-    /**
-     * Weakly-consistent iterator.
-     *
-     * Lazily updated ancestor field provides expected O(1) remove(),
-     * but still O(n) in the worst case, whenever the saved ancestor
-     * is concurrently deleted.
-     */
-    private class Itr implements Iterator<E> {
-        private Node<E> next;           // Node holding nextItem
-        private E nextItem;             // next item to hand out
-        private Node<E> lastRet;
-        private Node<E> ancestor;       // Helps unlink lastRet on remove()
-
-        Itr() {
-            fullyLock();
-            try {
-                if ((next = head.next) != null)
-                    nextItem = next.item;
-            } finally {
-                fullyUnlock();
-            }
-        }
-
-        public boolean hasNext() {
-            return next != null;
-        }
-
-        public E next() {
-            Node<E> p;
-            if ((p = next) == null)
-                throw new NoSuchElementException();
-            lastRet = p;
-            E x = nextItem;
-            fullyLock();
-            try {
-                E e = null;
-                for (p = p.next; p != null && (e = p.item) == null; )
-                    p = succ(p);
-                next = p;
-                nextItem = e;
-            } finally {
-                fullyUnlock();
-            }
-            return x;
-        }
-
-        public void forEachRemaining(Consumer<? super E> action) {
-            // A variant of forEachFrom
-            Objects.requireNonNull(action);
-            Node<E> p;
-            if ((p = next) == null) return;
-            lastRet = p;
-            next = null;
-            final int batchSize = 64;
-            Object[] es = null;
-            int n, len = 1;
-            do {
-                fullyLock();
-                try {
-                    if (es == null) {
-                        p = p.next;
-                        for (Node<E> q = p; q != null; q = succ(q))
-                            if (q.item != null && ++len == batchSize)
-                                break;
-                        es = new Object[len];
-                        es[0] = nextItem;
-                        nextItem = null;
-                        n = 1;
-                    } else
-                        n = 0;
-                    for (; p != null && n < len; p = succ(p))
-                        if ((es[n] = p.item) != null) {
-                            lastRet = p;
-                            n++;
-                        }
-                } finally {
-                    fullyUnlock();
-                }
-                for (int i = 0; i < n; i++) {
-                    @SuppressWarnings("unchecked") E e = (E) es[i];
-                    action.accept(e);
-                }
-            } while (n > 0 && p != null);
-        }
-
-        public void remove() {
-            Node<E> p = lastRet;
-            if (p == null)
-                throw new IllegalStateException();
-            lastRet = null;
-            fullyLock();
-            try {
-                if (p.item != null) {
-                    if (ancestor == null)
-                        ancestor = head;
-                    ancestor = findPred(p, ancestor);
-                    unlink(p, ancestor);
-                }
-            } finally {
-                fullyUnlock();
-            }
-        }
-    }
-
-    /**
-     * A customized variant of Spliterators.IteratorSpliterator.
-     * Keep this class in sync with (very similar) LBDSpliterator.
-     */
-    private final class LBQSpliterator implements Spliterator<E> {
-        static final int MAX_BATCH = 1 << 25;  // max batch array size;
-        Node<E> current;    // current node; null until initialized
-        int batch;          // batch size for splits
-        boolean exhausted;  // true when no more nodes
-        long est = size();  // size estimate
-
-        LBQSpliterator() {}
-
-        public long estimateSize() { return est; }
-
-        public Spliterator<E> trySplit() {
-            Node<E> h;
-            if (!exhausted &&
-                    ((h = current) != null || (h = head.next) != null)
-                    && h.next != null) {
-                int n = batch = Math.min(batch + 1, MAX_BATCH);
-                Object[] a = new Object[n];
-                int i = 0;
-                Node<E> p = current;
-                fullyLock();
-                try {
-                    if (p != null || (p = head.next) != null)
-                        for (; p != null && i < n; p = succ(p))
-                            if ((a[i] = p.item) != null)
-                                i++;
-                } finally {
-                    fullyUnlock();
-                }
-                if ((current = p) == null) {
-                    est = 0L;
-                    exhausted = true;
-                }
-                else if ((est -= i) < 0L)
-                    est = 0L;
-                if (i > 0)
-                    return Spliterators.spliterator
-                            (a, 0, i, (Spliterator.ORDERED |
-                                    Spliterator.NONNULL |
-                                    Spliterator.CONCURRENT));
-            }
-            return null;
-        }
-
-        public boolean tryAdvance(Consumer<? super E> action) {
-            Objects.requireNonNull(action);
-            if (!exhausted) {
-                E e = null;
-                fullyLock();
-                try {
-                    Node<E> p;
-                    if ((p = current) != null || (p = head.next) != null)
-                        do {
-                            e = p.item;
-                            p = succ(p);
-                        } while (e == null && p != null);
-                    if ((current = p) == null)
-                        exhausted = true;
-                } finally {
-                    fullyUnlock();
-                }
-                if (e != null) {
-                    action.accept(e);
-                    return true;
-                }
-            }
-            return false;
-        }
-
-        public void forEachRemaining(Consumer<? super E> action) {
-            Objects.requireNonNull(action);
-            if (!exhausted) {
-                exhausted = true;
-                Node<E> p = current;
-                current = null;
-                forEachFrom(action, p);
-            }
-        }
-
-        public int characteristics() {
-            return (Spliterator.ORDERED |
-                    Spliterator.NONNULL |
-                    Spliterator.CONCURRENT);
-        }
-    }
-
-    /**
-     * Returns a {@link Spliterator} over the elements in this queue.
-     *
-     * <p>The returned spliterator is
-     * <a href="package-summary.html#Weakly"><i>weakly consistent</i></a>.
-     *
-     * <p>The {@code Spliterator} reports {@link Spliterator#CONCURRENT},
-     * {@link Spliterator#ORDERED}, and {@link Spliterator#NONNULL}.
-     *
-     * @implNote
-     * The {@code Spliterator} implements {@code trySplit} to permit limited
-     * parallelism.
-     *
-     * @return a {@code Spliterator} over the elements in this queue
-     * @since 1.8
-     */
-    public Spliterator<E> spliterator() {
-        return new LBQSpliterator();
-    }
-
-    /**
-     * @throws NullPointerException {@inheritDoc}
-     */
-    public void forEach(Consumer<? super E> action) {
-        Objects.requireNonNull(action);
-        forEachFrom(action, null);
-    }
-
-    /**
-     * Runs action on each element found during a traversal starting at p.
-     * If p is null, traversal starts at head.
-     */
-    void forEachFrom(Consumer<? super E> action, Node<E> p) {
-        // Extract batches of elements while holding the lock; then
-        // run the action on the elements while not
-        final int batchSize = 64;       // max number of elements per batch
-        Object[] es = null;             // container for batch of elements
-        int n, len = 0;
-        do {
-            fullyLock();
-            try {
-                if (es == null) {
-                    if (p == null) p = head.next;
-                    for (Node<E> q = p; q != null; q = succ(q))
-                        if (q.item != null && ++len == batchSize)
-                            break;
-                    es = new Object[len];
-                }
-                for (n = 0; p != null && n < len; p = succ(p))
-                    if ((es[n] = p.item) != null)
-                        n++;
-            } finally {
-                fullyUnlock();
-            }
-            for (int i = 0; i < n; i++) {
-                @SuppressWarnings("unchecked") E e = (E) es[i];
-                action.accept(e);
-            }
-        } while (n > 0 && p != null);
-    }
-
-    /**
-     * @throws NullPointerException {@inheritDoc}
-     */
-    public boolean removeIf(Predicate<? super E> filter) {
-        Objects.requireNonNull(filter);
-        return bulkRemove(filter);
-    }
-
-    /**
-     * @throws NullPointerException {@inheritDoc}
-     */
-    public boolean removeAll(Collection<?> c) {
-        Objects.requireNonNull(c);
-        return bulkRemove(e -> c.contains(e));
-    }
-
-    /**
-     * @throws NullPointerException {@inheritDoc}
-     */
-    public boolean retainAll(Collection<?> c) {
-        Objects.requireNonNull(c);
-        return bulkRemove(e -> !c.contains(e));
-    }
-
-    /**
-     * Returns the predecessor of live node p, given a node that was
-     * once a live ancestor of p (or head); allows unlinking of p.
-     */
-    Node<E> findPred(Node<E> p, Node<E> ancestor) {
-        // assert p.item != null;
-        if (ancestor.item == null)
-            ancestor = head;
-        // Fails with NPE if precondition not satisfied
-        for (Node<E> q; (q = ancestor.next) != p; )
-            ancestor = q;
-        return ancestor;
-    }
-
-    /** Implementation of bulk remove methods. */
-    @SuppressWarnings("unchecked")
-    private boolean bulkRemove(Predicate<? super E> filter) {
-        boolean removed = false;
-        Node<E> p = null, ancestor = head;
-        Node<E>[] nodes = null;
-        int n, len = 0;
-        do {
-            // 1. Extract batch of up to 64 elements while holding the lock.
-            fullyLock();
-            try {
-                if (nodes == null) {  // first batch; initialize
-                    p = head.next;
-                    for (Node<E> q = p; q != null; q = succ(q))
-                        if (q.item != null && ++len == 64)
-                            break;
-                    nodes = (Node<E>[]) new Node<?>[len];
-                }
-                for (n = 0; p != null && n < len; p = succ(p))
-                    nodes[n++] = p;
-            } finally {
-                fullyUnlock();
-            }
-
-            // 2. Run the filter on the elements while lock is free.
-            long deathRow = 0L;       // "bitset" of size 64
-            for (int i = 0; i < n; i++) {
-                final E e;
-                if ((e = nodes[i].item) != null && filter.test(e))
-                    deathRow |= 1L << i;
-            }
-
-            // 3. Remove any filtered elements while holding the lock.
-            if (deathRow != 0) {
-                fullyLock();
-                try {
-                    for (int i = 0; i < n; i++) {
-                        final Node<E> q;
-                        if ((deathRow & (1L << i)) != 0L
-                                && (q = nodes[i]).item != null) {
-                            ancestor = findPred(q, ancestor);
-                            unlink(q, ancestor);
-                            removed = true;
-                        }
-                        nodes[i] = null; // help GC
-                    }
-                } finally {
-                    fullyUnlock();
-                }
-            }
-        } while (n > 0 && p != null);
-        return removed;
-    }
-
-    /**
-     * Saves this queue to a stream (that is, serializes it).
-     *
-     * @param s the stream
-     * @throws java.io.IOException if an I/O error occurs
-     * @serialData The capacity is emitted (int), followed by all of
-     * its elements (each an {@code Object}) in the proper order,
-     * followed by a null
-     */
-    private void writeObject(java.io.ObjectOutputStream s)
-            throws java.io.IOException {
-
-        fullyLock();
-        try {
-            // Write out any hidden stuff, plus capacity
-            s.defaultWriteObject();
-
-            // Write out all elements in the proper order.
-            for (Node<E> p = head.next; p != null; p = p.next)
-                s.writeObject(p.item);
-
-            // Use trailing null as sentinel
-            s.writeObject(null);
-        } finally {
-            fullyUnlock();
-        }
-    }
-
-    /**
-     * Reconstitutes this queue from a stream (that is, deserializes it).
-     * @param s the stream
-     * @throws ClassNotFoundException if the class of a serialized object
-     *         could not be found
-     * @throws java.io.IOException if an I/O error occurs
-     */
-    private void readObject(java.io.ObjectInputStream s)
-            throws java.io.IOException, ClassNotFoundException {
-        // Read in capacity, and any hidden stuff
-        s.defaultReadObject();
-
-        count.set(0);
-        last = head = new Node<E>(null);
-
-        // Read in all elements and place in queue
-        for (;;) {
-            @SuppressWarnings("unchecked")
-            E item = (E)s.readObject();
-            if (item == null)
-                break;
-            add(item);
-        }
-    }
-
-    public void setCapacity(int capacity) {
-        int originalCapacity = this.capacity;
-        this.capacity = capacity;
-        int queueSize = count.get();
-        // 容量扩大且存在等待唤醒的元素
-        if (capacity > queueSize && queueSize > originalCapacity) {
-            signalNotFull();
-        }
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAlarmAutoConfig.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAlarmAutoConfig.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAlarmAutoConfig.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAlarmAutoConfig.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,22 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.config;
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IAlarmService;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.impl.AlarmServiceImpl;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.ComponentScan;
-import org.springframework.context.annotation.Configuration;
-
-@Configuration
-@ConditionalOnProperty(prefix = "dynamic-thread-pool.alarm", name = "enabled", havingValue = "true")
-@EnableConfigurationProperties(DynamicThreadPoolAlarmAutoProperties.class)
-@ComponentScan("cn.bread.middleware.dynamic.thread.pool.sdk.domain.strategy")
-public class DynamicThreadPoolAlarmAutoConfig {
-
-    @Bean
-    public IAlarmService alarmService() {
-        return new AlarmServiceImpl();
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/redis/RedisRegistry.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/redis/RedisRegistry.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/redis/RedisRegistry.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/redis/RedisRegistry.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,131 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.redis;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums.RegistryEnum;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IAlarmService;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.impl.AlarmServiceImpl;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.RedisUtils;
-import lombok.AllArgsConstructor;
-import lombok.extern.slf4j.Slf4j;
-import org.redisson.api.RList;
-import org.redisson.api.RLock;
-import org.redisson.api.RedissonClient;
-
-import java.util.List;
-import java.util.Objects;
-import java.util.concurrent.TimeUnit;
-
-/**
- * Redis 实现注册中心
- */
-
-@Slf4j
-@AllArgsConstructor
-public class RedisRegistry implements IRegistry {
-
-    private RedissonClient redissonClient;
-
-    private IAlarmService alarmService;
-
-    @Override
-    public void reportThreadPool(List<ThreadPoolConfigEntity> threadPoolConfigEntityList) {
-        if (threadPoolConfigEntityList == null || threadPoolConfigEntityList.isEmpty()) {
-            return;
-        }
-
-        if (AlarmServiceImpl.canSendForThreadPoolDanger()) {
-            alarmService.sendIfThreadPoolHasDanger(threadPoolConfigEntityList);
-        }
-
-
-        RList<ThreadPoolConfigEntity> list = RedisUtils.getPoolConfigRList(redissonClient);
-        if (list.isEmpty()) {
-            list.addAll(threadPoolConfigEntityList);
-            return;
-        }
-
-        RLock lock = redissonClient.getLock(RegistryEnum.REPORT_THREAD_POOL_CONFIG_LIST_REDIS_LOCK_KEY.getKey());
-
-        try {
-            boolean canHasLock = lock.tryLock(3000, 3000, TimeUnit.MILLISECONDS);
-
-            if (canHasLock) {
-                reportThreadPoolRealProcess(threadPoolConfigEntityList, list);
-            }
-        } catch (Exception e) {
-            alarmService.send(
-                    AlarmMessageDTO
-                            .buildAlarmMessageDTO("上报线程池列表出错")
-                            .appendParameter("错误原因", e.toString())
-            );
-            log.error("动态线程池, 上报线程池列表时出现错误: {}", e.toString());
-        } finally {
-            lock.unlock();
-        }
-    }
-
-    @Override
-    public void reportUpdateThreadPoolConfigParameter(UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO) {
-        RedisUtils.setUpdateThreadPoolConfigDTO(
-                redissonClient,
-                updateThreadPoolConfigDTO
-        );
-
-    }
-
-    private void reportThreadPoolRealProcess(
-            List<ThreadPoolConfigEntity> threadPoolConfigEntityList,
-            RList<ThreadPoolConfigEntity> list ) {
-        int index = 0;
-        String applicationName = threadPoolConfigEntityList.get(0).getApplicationName();
-
-        int listSize = list.size();
-        // 获取本应用线程池的开始索引
-        for (int i = 0; i < listSize; i++) {
-            ThreadPoolConfigEntity originalPoolConfig = list.get(i);
-            // 当前应用位置
-            if (Objects.equals(originalPoolConfig.getApplicationName(), applicationName)) {
-                index = i;
-                break;
-            }
-        }
-
-        // 更新线程池
-        for (int i = 0; i < threadPoolConfigEntityList.size(); i++, index++) {
-            ThreadPoolConfigEntity newPoolConfig = threadPoolConfigEntityList.get(i);
-            // list已遍历完
-            if (index >= listSize) {
-                list.add(newPoolConfig);
-                continue;
-            }
-
-            ThreadPoolConfigEntity originalPoolConfig = list.get(index);
-            // list已遍历到下一个应用
-            if (!Objects.equals(originalPoolConfig.getApplicationName(), applicationName)) {
-                list.add(index + 1, newPoolConfig);
-                continue;
-            }
-
-            // 当前应用某线程池发生了修改
-            if (!Objects.equals(originalPoolConfig.toString(), newPoolConfig.toString())) {
-                list.fastRemove(index);
-                list.add(index, newPoolConfig);
-            }
-        }
-
-        // 线程池已不存在，但缓存还在, 从缓存中删除
-        while (index < listSize) {
-            ThreadPoolConfigEntity originalPoolConfig = list.get(index);
-            // 遍历到下一个应用
-            if (!Objects.equals(originalPoolConfig.getApplicationName(), applicationName)) {
-                break;
-            }
-            list.fastRemove(index);
-            index++;
-        }
-    }
-}
Index: dynamic-thread-pool-test/target/classes/application-dev.yml
===================================================================
diff --git a/dynamic-thread-pool-test/target/classes/application-dev.yml b/dynamic-thread-pool-test/target/classes/application-dev.yml
deleted file mode 100644
--- a/dynamic-thread-pool-test/target/classes/application-dev.yml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,35 +0,0 @@
-server:
-  port: 8091
-
-# 线程池配置
-thread:
-  pool:
-    executor:
-      config:
-        core-pool-size: 20
-        max-pool-size: 50
-        keep-alive-time: 5000
-        block-queue-size: 5000
-        policy: CallerRunsPolicy
-
-# 动态线程池配置
-dynamic-thread-pool:
-  registry:
-    redis:
-      host: localhost
-      port: 6379
-    report-cron: "0/10 * * * * ?"
-  web:
-    auth:
-      enable: true
-      username: dtp
-      password: dtp
-    context-path: /dtp
-    enabled: true
-    grafana-dashboard-url: http://localhost:3000/d/fe4p8gg186ccgf/e58aa8-e68081-e7babf-e7a88b-e6b1a0-e79b91-e68ea7?orgId=1&from=2024-11-22T03:28:04.267Z&to=2024-11-22T09:28:04.267Z&timezone=browser&var-applicationName=&var-poolName=&refresh=5s
-  alarm:
-    enabled: true
-    access-token:
-      ding-ding: xxx
-    use-platform:
-      - "DingDing"
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/target/classes/META-INF/spring-configuration-metadata.json
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/target/classes/META-INF/spring-configuration-metadata.json b/dynamic-thread-pool-spring-boot-starter/target/classes/META-INF/spring-configuration-metadata.json
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/target/classes/META-INF/spring-configuration-metadata.json	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,161 +0,0 @@
-{
-  "groups": [
-    {
-      "name": "dynamic-thread-pool.alarm",
-      "type": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.alarm.access-token",
-      "type": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties$AccessToken",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry",
-      "type": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryAutoProperties",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis",
-      "type": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.web",
-      "type": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.web.auth",
-      "type": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties$Auth",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties"
-    }
-  ],
-  "properties": [
-    {
-      "name": "dynamic-thread-pool.alarm.access-token.ding-ding",
-      "type": "java.lang.String",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties$AccessToken"
-    },
-    {
-      "name": "dynamic-thread-pool.alarm.enabled",
-      "type": "java.lang.Boolean",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.alarm.use-platform",
-      "type": "java.util.List<java.lang.String>",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.connect-timeout",
-      "type": "java.lang.Integer",
-      "description": "设置连接超时时间（单位：毫秒），默认为10000",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.connection-minimum-idle-size",
-      "type": "java.lang.Integer",
-      "description": "设置连接池的最小空闲连接数，默认为10",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.connection-pool-size",
-      "type": "java.lang.Integer",
-      "description": "设置连接池的大小，默认为64",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.database",
-      "type": "java.lang.Integer",
-      "description": "Redis数据库，默认是0",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.host",
-      "type": "java.lang.String",
-      "description": "Redis地址",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.idle-connection-timeout",
-      "type": "java.lang.Integer",
-      "description": "设置连接的最大空闲时间（单位：毫秒），超过该时间的空闲连接将被关闭，默认为10000",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.keep-alive",
-      "type": "java.lang.Boolean",
-      "description": "设置是否保持长连接，默认为true",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.password",
-      "type": "java.lang.String",
-      "description": "Redis 密码",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.ping-interval",
-      "type": "java.lang.Integer",
-      "description": "设置定期检查连接是否可用的时间间隔（单位：毫秒），默认为0，表示不进行定期检查",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.port",
-      "type": "java.lang.Integer",
-      "description": "Redis端口，默认6379",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.retry-attempts",
-      "type": "java.lang.Integer",
-      "description": "设置连接重试次数，默认为3",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.redis.retry-interval",
-      "type": "java.lang.Integer",
-      "description": "设置连接重试的间隔时间（单位：毫秒），默认为1000",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryRedisAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.registry.report-cron",
-      "type": "java.lang.String",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.web.auth.enable",
-      "type": "java.lang.Boolean",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties$Auth"
-    },
-    {
-      "name": "dynamic-thread-pool.web.auth.password",
-      "type": "java.lang.String",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties$Auth"
-    },
-    {
-      "name": "dynamic-thread-pool.web.auth.username",
-      "type": "java.lang.String",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties$Auth"
-    },
-    {
-      "name": "dynamic-thread-pool.web.context-path",
-      "type": "java.lang.String",
-      "description": "WEB根路径",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.web.enabled",
-      "type": "java.lang.Boolean",
-      "description": "是否开启Web管理界面, 默认关闭",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties"
-    },
-    {
-      "name": "dynamic-thread-pool.web.grafana-dashboard-url",
-      "type": "java.lang.String",
-      "sourceType": "cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties"
-    }
-  ],
-  "hints": []
-}
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/SettingsController.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/SettingsController.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/SettingsController.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/SettingsController.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,26 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.ResponseVO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.SettingsVO;
-import org.springframework.web.bind.annotation.CrossOrigin;
-import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.RestController;
-
-import javax.annotation.Resource;
-@RestController
-@CrossOrigin(allowCredentials = "true", origins = {"http://localhost*", "http://127.0.0.1*"})
-public class SettingsController {
-
-    @Resource
-    private DynamicThreadPoolWebAutoProperties webAutoProperties;
-
-    @GetMapping("/settingsLZQGJPUFNS")
-    public ResponseVO<SettingsVO> settings() {
-        return ResponseVO.success(new SettingsVO(
-                webAutoProperties.getContextPath(),
-                webAutoProperties.getGrafanaDashboardUrl()
-        ));
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/DingDingAlarmStrategy.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/DingDingAlarmStrategy.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/DingDingAlarmStrategy.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/DingDingAlarmStrategy.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,57 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.strategy.alarm;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums.AlarmStrategyEnum;
-import com.dingtalk.api.DefaultDingTalkClient;
-import com.dingtalk.api.DingTalkClient;
-import com.dingtalk.api.request.OapiRobotSendRequest;
-import com.dingtalk.api.response.OapiRobotSendResponse;
-import com.taobao.api.ApiException;
-import lombok.extern.slf4j.Slf4j;
-import org.springframework.stereotype.Component;
-
-import javax.annotation.Resource;
-
-@Slf4j
-@Component
-public class DingDingAlarmStrategy extends AbstractAlarmStrategy{
-
-    @Resource
-    private DynamicThreadPoolAlarmAutoProperties config;
-
-    @Override
-    public String getStrategyName() {
-        return AlarmStrategyEnum.DING_DING.getValue();
-    }
-
-    @Override
-    public void send(AlarmMessageDTO message) throws ApiException {
-
-        String token = config.getAccessToken().getDingDing();
-
-        DingTalkClient client = new DefaultDingTalkClient("https://oapi.dingtalk.com/robot/send");
-        OapiRobotSendRequest req = new OapiRobotSendRequest();
-
-        //定义文本内容
-        OapiRobotSendRequest.Text text = new OapiRobotSendRequest.Text();
-        text.setContent(buildMessageContent(message));
-
-        //定义 @ 对象
-        OapiRobotSendRequest.At at = new OapiRobotSendRequest.At();
-        at.setIsAtAll(true);
-
-        //设置消息类型
-        req.setMsgtype("text");
-        req.setText(text);
-        req.setAt(at);
-        OapiRobotSendResponse rsp = client.execute(req, token);
-
-        if (rsp.isSuccess()) {
-            return;
-        }
-
-        throw new ApiException(rsp.getErrcode().toString(), rsp.getErrmsg());
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/BusinessException.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/BusinessException.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/BusinessException.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/exception/BusinessException.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,23 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.exception;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.enums.ResponseEnum;
-import lombok.Getter;
-
-@Getter
-public class BusinessException extends RuntimeException {
-
-    private final ResponseEnum responseEnum;
-    private final String description;
-
-
-    public BusinessException(ResponseEnum responseEnum) {
-        this(responseEnum, "");
-    }
-
-    public BusinessException(ResponseEnum responseEnum, String description) {
-        super(responseEnum.getMessage());
-        this.responseEnum = responseEnum;
-        this.description = description;
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/RegistryEnum.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/RegistryEnum.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/RegistryEnum.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/RegistryEnum.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,22 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums;
-
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-
-/**
- * 注册中心枚举值对象
- */
-
-@Getter
-@AllArgsConstructor
-public enum RegistryEnum {
-
-    THREAD_POOL_CONFIG_LIST_KEY("THREAD_POOL_CONFIG_LIST_KEY", "线程池配置列表"),
-    THREAD_POOL_CONFIG_PARAMETER_LIST_KEY("THREAD_POOL_CONFIG_PARAMETER_LIST_KEY", "线程池配置参数列表"),
-    DYNAMIC_THREAD_POOL_ADJUST_REDIS_TOPIC_KEY("DYNAMIC_THREAD_POOL_ADJUST_REDIS_TOPIC_KEY", "动态线程池REDIS主题配置"),
-    DYNAMIC_THREAD_POOL_REFRESH_REDIS_TOPIC_KEY("DYNAMIC_THREAD_POOL_REFRESH_REDIS_TOPIC_KEY", "动态线程池REDIS主题配置"),
-    REPORT_THREAD_POOL_CONFIG_LIST_REDIS_LOCK_KEY("REPORT_THREAD_POOL_CONFIG_LIST_REDIS_LOCK_KEY", "锁");
-
-    private final String key;
-    private final String description;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigRefreshListener.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigRefreshListener.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigRefreshListener.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigRefreshListener.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,36 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener;
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.RefreshThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;
-import lombok.AllArgsConstructor;
-import lombok.extern.slf4j.Slf4j;
-import org.redisson.api.listener.MessageListener;
-
-import java.util.List;
-
-@Slf4j
-@AllArgsConstructor
-public class ThreadPoolConfigRefreshListener implements MessageListener<RefreshThreadPoolConfigDTO> {
-
-    private IDynamicThreadPoolService dynamicThreadPoolService;
-
-    private IRegistry registry;
-
-    @Override
-    public void onMessage(CharSequence channel, RefreshThreadPoolConfigDTO refreshThreadPoolConfigDTO) {
-        List<ThreadPoolConfigEntity> threadPoolConfigEntities = dynamicThreadPoolService.queryThreadPoolList();
-        registry.reportThreadPool(threadPoolConfigEntities);
-        log.info("动态线程池, 上报线程池信息: {}", threadPoolConfigEntities);
-
-        threadPoolConfigEntities.forEach(threadPoolConfigEntity -> {
-            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO = UpdateThreadPoolConfigDTO.buildUpdateThreadPoolConfigDTO(
-                    dynamicThreadPoolService.queryThreadPoolByName(threadPoolConfigEntity.getThreadPoolName())
-            );
-            registry.reportUpdateThreadPoolConfigParameter(updateThreadPoolConfigDTO);
-            log.info("动态线程池, 上报配置参数: {}", updateThreadPoolConfigDTO);
-        });
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IAlarmService.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IAlarmService.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IAlarmService.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/IAlarmService.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,18 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.service;
-
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-
-import java.util.List;
-
-/**
- * 告警服务类
- */
-public interface IAlarmService {
-
-    void send(AlarmMessageDTO message);
-
-    void sendIfThreadPoolHasDanger(List<ThreadPoolConfigEntity> pools);
-}
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/target/maven-archiver/pom.properties
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/target/maven-archiver/pom.properties b/dynamic-thread-pool-spring-boot-starter/target/maven-archiver/pom.properties
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/target/maven-archiver/pom.properties	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,4 +0,0 @@
-#Created by Apache Maven 3.9.9
-artifactId=dynamic-thread-pool-spring-boot-starter
-groupId=org.example
-version=1.0
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/ThreadPoolController.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/ThreadPoolController.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/ThreadPoolController.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/ThreadPoolController.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,79 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller;
-
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.RefreshThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.RedisUtils;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.exception.BusinessException;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.enums.ResponseEnum;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.ResponseVO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.utils.AuthUtils;
-import org.redisson.api.RTopic;
-import org.redisson.api.RedissonClient;
-import org.springframework.web.bind.annotation.*;
-
-import javax.annotation.Resource;
-import javax.servlet.http.HttpServletRequest;
-import java.util.List;
-@RestController
-@RequestMapping(value = "${dynamic-thread-pool.web.context-path}/pool")
-@CrossOrigin(allowCredentials = "true", origins = {"http://localhost*", "http://127.0.0.1*"})
-public class ThreadPoolController {
-
-    @Resource
-    private RTopic dynamicThreadPoolAdjustRedisTopic;
-
-    @Resource
-    private RedissonClient redissonClient;
-
-    @Resource
-    private RTopic dynamicThreadPoolRefreshRedisTopic;
-
-    @GetMapping("/list")
-    public ResponseVO<List<ThreadPoolConfigEntity>> getThreadPoolConfigList(HttpServletRequest request) {
-        if (!AuthUtils.hashAuth(request)) {
-            throw new BusinessException(ResponseEnum.NO_AUTH);
-        }
-
-        return ResponseVO.success(RedisUtils.getPoolConfigRList(redissonClient));
-    }
-
-    @GetMapping("/get")
-    public ResponseVO<ThreadPoolConfigEntity> getThreadPoolUpdateConfig(
-            HttpServletRequest request,
-            String poolName) {
-        if (!AuthUtils.hashAuth(request)) {
-            throw new BusinessException(ResponseEnum.NO_AUTH);
-        }
-
-        ThreadPoolConfigEntity poolConfig = RedisUtils.getPoolConfigByPoolName(redissonClient, poolName);
-        if (poolConfig == null) {
-            throw new BusinessException(ResponseEnum.NOT_FOUNT, "未找到该线程池");
-        }
-
-        return ResponseVO.success(poolConfig);
-    }
-
-    @PostMapping("/update")
-    public ResponseVO<Boolean > updateThreadPoolConfig(
-            HttpServletRequest request,
-            @RequestBody UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO ) {
-        if (!AuthUtils.hashAuth(request)) {
-            throw new BusinessException(ResponseEnum.NO_AUTH);
-        }
-
-        dynamicThreadPoolAdjustRedisTopic.publish(updateThreadPoolConfigDTO);
-        return ResponseVO.success(true, "成功发布线程池变更消息");
-    }
-
-    @GetMapping("/refresh")
-    public ResponseVO<Void> refreshThreadPoolConfigList(HttpServletRequest request) {
-        if (!AuthUtils.hashAuth(request)) {
-            throw new BusinessException(ResponseEnum.NO_AUTH);
-        }
-        dynamicThreadPoolRefreshRedisTopic.publish(new RefreshThreadPoolConfigDTO());
-        return ResponseVO.success(null);
-    }
-}
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]1/shelved.patch	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,201 +0,0 @@
-Index: .idea/encodings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/resources\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/encodings.xml b/.idea/encodings.xml
---- a/.idea/encodings.xml	(revision a02bfae2ea34322eb74e0a9b81fd08f5c8edb79e)
-+++ b/.idea/encodings.xml	(date 1732351685846)
-@@ -7,5 +7,8 @@
-     <file url="file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/resources" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/resources" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/src/assembly/resources" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"dynamic-thread-pool-test\" />\r\n        <module name=\"dynamic-thread-pool-spring-boot-starter\" />\r\n        <module name=\"dynamic-thread-pool-admin\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel target=\"8\">\r\n      <module name=\"dynamic-thread-pool\" target=\"1.8\" />\r\n      <module name=\"dynamic-thread-pool-admin\" target=\"1.8\" />\r\n      <module name=\"dynamic-thread-pool-spring-boot-starter\" target=\"8\" />\r\n      <module name=\"dynamic-thread-pool-test\" target=\"1.8\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"dynamic-thread-pool-admin\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-spring-boot-starter\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-test\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
---- a/.idea/compiler.xml	(revision 776d1916f6af7d6b6518cc7de58c4803f02d57e5)
-+++ b/.idea/compiler.xml	(date 1732351685845)
-@@ -9,18 +9,15 @@
-         <outputRelativeToContentRoot value="true" />
-         <module name="dynamic-thread-pool-test" />
-         <module name="dynamic-thread-pool-spring-boot-starter" />
--        <module name="dynamic-thread-pool-admin" />
-       </profile>
-     </annotationProcessing>
-     <bytecodeTargetLevel target="8">
--      <module name="dynamic-thread-pool" target="1.8" />
-       <module name="dynamic-thread-pool-admin" target="1.8" />
--      <module name="dynamic-thread-pool-spring-boot-starter" target="8" />
--      <module name="dynamic-thread-pool-test" target="1.8" />
-     </bytecodeTargetLevel>
-   </component>
-   <component name="JavacSettings">
-     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
-+      <module name="dynamic-thread-pool" options="-parameters" />
-       <module name="dynamic-thread-pool-admin" options="-parameters" />
-       <module name="dynamic-thread-pool-spring-boot-starter" options="-parameters" />
-       <module name="dynamic-thread-pool-test" options="-parameters" />
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4e729a25-7db1-4184-80c0-9444b5f5b868\" name=\"Default Changelist\" comment=\"订阅发布消息，提供接口\">\r\n      <change afterPath=\"$PROJECT_DIR$/data/log/log-error-2024-06-06.0.log\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/data/log/log-info-2024-06-06.0.log\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/docs/dev-ops/docker-compose.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/docs/dev-ops/redis/redis.conf\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/docs/front/index.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/log/log-error-2024-05-30.0.log\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\">\r\n    <execution />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package-info\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitToolBoxStore\">\r\n    <option name=\"projectConfigVersion\" value=\"2\" />\r\n    <option name=\"recentBranches\">\r\n      <RecentBranches>\r\n        <option name=\"branchesForRepo\">\r\n          <list>\r\n            <RecentBranchesForRepo>\r\n              <option name=\"branches\">\r\n                <list>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"master\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1717080534\" />\r\n                  </RecentBranch>\r\n                </list>\r\n              </option>\r\n              <option name=\"repositoryRootUrl\" value=\"file://$PROJECT_DIR$\" />\r\n            </RecentBranchesForRepo>\r\n          </list>\r\n        </option>\r\n      </RecentBranches>\r\n    </option>\r\n  </component>\r\n  <component name=\"MavenRunner\">\r\n    <option name=\"delegateBuildToMaven\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2h0GUxVpaT6wQkg9hp0Kt2zpnR7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RequestMappingsPanelOrder0\" value=\"0\" />\r\n    <property name=\"RequestMappingsPanelOrder1\" value=\"1\" />\r\n    <property name=\"RequestMappingsPanelWidth0\" value=\"75\" />\r\n    <property name=\"RequestMappingsPanelWidth1\" value=\"75\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SONARLINT_PRECOMMIT_ANALYSIS\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15625\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.maven.runner\" />\r\n  </component>\r\n  <component name=\"ReactorSettings\">\r\n    <option name=\"notificationShown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.test.types\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.test.sdk.domain.model.entity\" />\r\n      <recent name=\"test\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-admin\\src\\main\\java\\cn\\bread\\middleware\\dynamic\\thread\\pool\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-admin\\src\\main\\resources\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-test\\src\\main\\resources\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-test\\src\\main\\java\\cn\\bread\\config\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.Application\">\r\n    <configuration name=\"ApiTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"cn.bread.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.test.ApiTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ApiTest.test_dynamicThreadPoolRedisTopic\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"cn.bread.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.test.ApiTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"test_dynamicThreadPoolRedisTopic\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Application (1)\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-admin\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.middleware.dynamic.thread.pool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.middleware.dynamic.thread.pool.Application\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Application\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.Application\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Spring Boot.Application (1)\" />\r\n        <item itemvalue=\"JUnit.ApiTest.test_dynamicThreadPoolRedisTopic\" />\r\n        <item itemvalue=\"JUnit.ApiTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpringBootOptions\">\r\n    <option name=\"showAdditionalConfigNotification\" value=\"false\" />\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4e729a25-7db1-4184-80c0-9444b5f5b868\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1716723600294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716723600294</updated>\r\n      <workItem from=\"1716723603796\" duration=\"15940000\" />\r\n      <workItem from=\"1717066837383\" duration=\"3956000\" />\r\n      <workItem from=\"1717114908921\" duration=\"1182000\" />\r\n      <workItem from=\"1717399322456\" duration=\"13244000\" />\r\n      <workItem from=\"1717493633112\" duration=\"10775000\" />\r\n      <workItem from=\"1717570209620\" duration=\"7861000\" />\r\n      <workItem from=\"1717724978032\" duration=\"2268000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"搭建组件工程\">\r\n      <created>1716725336721</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716725336721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"redis搭建注册中心\">\r\n      <created>1717420956765</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717420956765</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"订阅发布消息，提供接口\">\r\n      <created>1717726274982</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717726274982</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"搭建组件工程\" />\r\n    <MESSAGE value=\"redis搭建注册中心\" />\r\n    <MESSAGE value=\"订阅发布消息，提供接口\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"订阅发布消息，提供接口\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"3076\" y=\"623\" key=\"#Inspections\" timestamp=\"1717414056714\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3076\" y=\"623\" key=\"#Inspections/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717414056714\" />\r\n    <state x=\"2764\" y=\"405\" key=\"#Project_Structure\" timestamp=\"1717680043879\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"2764\" y=\"405\" key=\"#Project_Structure/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717680043879\" />\r\n    <state x=\"3278\" y=\"559\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1717494744616\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3278\" y=\"559\" key=\"#com.intellij.ide.util.MemberChooser/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717494744616\" />\r\n    <state x=\"3296\" y=\"831\" key=\"#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog\" timestamp=\"1717681832146\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3296\" y=\"831\" key=\"#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717681832146\" />\r\n    <state x=\"3098\" y=\"780\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.packages\" timestamp=\"1717681843742\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3098\" y=\"780\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.packages/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717681843742\" />\r\n    <state x=\"3251\" y=\"646\" key=\"FileChooserDialogImpl\" timestamp=\"1716892548491\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3251\" y=\"646\" key=\"FileChooserDialogImpl/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716892548491\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.bottom/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.bottom/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.center\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.center/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.center/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.left\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.left/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.left/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.right\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.right/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.right/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.bottom/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.bottom/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826680\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.center\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.center/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.center/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826680\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.left\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.left/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.left/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826679\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.right\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.right/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.right/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826680\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.bottom\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.bottom/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.bottom/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.center\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.center/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.center/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.left\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.left/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.left/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.right\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.right/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.right/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state x=\"2824\" y=\"502\" key=\"Maven.ArtifactSearchDialog\" timestamp=\"1716896876394\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"2824\" y=\"502\" key=\"Maven.ArtifactSearchDialog/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716896876394\" />\r\n    <state x=\"2748\" y=\"467\" key=\"SettingsEditor\" timestamp=\"1717066753362\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"2748\" y=\"467\" key=\"SettingsEditor/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717066753362\" />\r\n    <state x=\"3016\" y=\"618\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1717726280023\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3016\" y=\"618\" key=\"Vcs.Push.Dialog.v2/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726280023\" />\r\n    <state x=\"3108\" y=\"559\" width=\"1097\" height=\"722\" key=\"find.popup\" timestamp=\"1717418259427\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3108\" y=\"559\" width=\"1097\" height=\"722\" key=\"find.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717418259427\" />\r\n    <state x=\"61\" y=\"187\" key=\"new project wizard\" timestamp=\"1716778401281\">\r\n      <screen x=\"0\" y=\"0\" width=\"1707\" height=\"1019\" />\r\n    </state>\r\n    <state x=\"2722\" y=\"533\" key=\"new project wizard/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716723663866\" />\r\n    <state x=\"61\" y=\"187\" key=\"new project wizard/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1716778401281\" />\r\n    <state x=\"3092\" y=\"437\" width=\"840\" height=\"1034\" key=\"run.anything.popup\" timestamp=\"1717420597651\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3092\" y=\"437\" width=\"840\" height=\"1034\" key=\"run.anything.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717420597651\" />\r\n    <state x=\"3103\" y=\"404\" width=\"840\" height=\"1034\" key=\"search.everywhere.popup\" timestamp=\"1716724388330\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3103\" y=\"404\" width=\"840\" height=\"1034\" key=\"search.everywhere.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716724388330\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/dynamic_thread_pool$Application.ic\" NAME=\"Application Coverage Results\" MODIFIED=\"1717504710925\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/dynamic_thread_pool$ApiTest_test_dynamicThreadPoolRedisTopic.ic\" NAME=\"ApiTest.test_dynamicThreadPoolRedisTopic Coverage Results\" MODIFIED=\"1717502748220\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>cn.bread.test.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision a02bfae2ea34322eb74e0a9b81fd08f5c8edb79e)
-+++ b/.idea/workspace.xml	(date 1732351685848)
-@@ -1,21 +1,14 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="AutoImportSettings">
-+    <option name="autoReloadType" value="SELECTIVE" />
-+  </component>
-   <component name="BranchesTreeState">
-     <expand />
-     <select />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="4e729a25-7db1-4184-80c0-9444b5f5b868" name="Default Changelist" comment="订阅发布消息，提供接口">
--      <change afterPath="$PROJECT_DIR$/data/log/log-error-2024-06-06.0.log" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/data/log/log-info-2024-06-06.0.log" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/docs/dev-ops/docker-compose.yml" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/docs/dev-ops/redis/redis.conf" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/docs/front/index.html" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/data/log/log-error-2024-05-30.0.log" beforeDir="false" />
--      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java" beforeDir="false" afterPath="$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java" beforeDir="false" afterPath="$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java" afterDir="false" />
--    </list>
-+    <list default="true" id="4e729a25-7db1-4184-80c0-9444b5f5b868" name="Default Changelist" comment="订阅发布消息，提供接口" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -34,6 +27,11 @@
-     </option>
-   </component>
-   <component name="Git.Settings">
-+    <option name="RECENT_BRANCH_BY_REPOSITORY">
-+      <map>
-+        <entry key="$PROJECT_DIR$" value="24-11-22-bread-web" />
-+      </map>
-+    </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
-   <component name="GitToolBoxStore">
-@@ -69,31 +67,11 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">
--    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
--    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
--    <property name="RequestMappingsPanelOrder0" value="0" />
--    <property name="RequestMappingsPanelOrder1" value="1" />
--    <property name="RequestMappingsPanelWidth0" value="75" />
--    <property name="RequestMappingsPanelWidth1" value="75" />
--    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
--    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
--    <property name="SONARLINT_PRECOMMIT_ANALYSIS" value="true" />
--    <property name="WebServerToolWindowFactoryState" value="false" />
--    <property name="aspect.path.notification.shown" value="true" />
--    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
--    <property name="node.js.detected.package.eslint" value="true" />
--    <property name="node.js.detected.package.tslint" value="true" />
--    <property name="node.js.path.for.package.eslint" value="project" />
--    <property name="node.js.path.for.package.tslint" value="project" />
--    <property name="node.js.selected.package.eslint" value="(autodetect)" />
--    <property name="node.js.selected.package.tslint" value="(autodetect)" />
--    <property name="nodejs_package_manager_path" value="npm" />
--    <property name="project.structure.last.edited" value="Modules" />
--    <property name="project.structure.proportion" value="0.15625" />
--    <property name="project.structure.side.proportion" value="0.2" />
--    <property name="settings.editor.selected.configurable" value="reference.settings.project.maven.runner" />
--  </component>
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "git-widget-placeholder": "master2"
-+  }
-+}]]></component>
-   <component name="ReactorSettings">
-     <option name="notificationShown" value="true" />
-   </component>
-@@ -149,13 +127,13 @@
-     </configuration>
-     <configuration name="Application (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
-       <module name="dynamic-thread-pool-admin" />
-+      <option name="SPRING_BOOT_MAIN_CLASS" value="cn.bread.middleware.dynamic.thread.pool.Application" />
-       <extension name="coverage">
-         <pattern>
-           <option name="PATTERN" value="cn.bread.middleware.dynamic.thread.pool.*" />
-           <option name="ENABLED" value="true" />
-         </pattern>
-       </extension>
--      <option name="SPRING_BOOT_MAIN_CLASS" value="cn.bread.middleware.dynamic.thread.pool.Application" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-@@ -167,16 +145,21 @@
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
-+    <list>
-+      <item itemvalue="JUnit.ApiTest" />
-+      <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
-+      <item itemvalue="Spring Boot.Application" />
-+      <item itemvalue="Spring Boot.Application (1)" />
-+    </list>
-     <recent_temporary>
-       <list>
-         <item itemvalue="Spring Boot.Application (1)" />
-         <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
-         <item itemvalue="JUnit.ApiTest" />
-+        <item itemvalue="Spring Boot.Application (1)" />
-+        <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
-       </list>
-     </recent_temporary>
--  </component>
--  <component name="SpringBootOptions">
--    <option name="showAdditionalConfigNotification" value="false" />
-   </component>
-   <component name="SvnConfiguration">
-     <configuration />
-@@ -233,7 +216,6 @@
-         </entry>
-       </map>
-     </option>
--    <option name="oldMeFiltersMigrated" value="true" />
-   </component>
-   <component name="VcsManagerConfiguration">
-     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-@@ -356,17 +338,6 @@
-       <screen x="2560" y="405" width="1920" height="1032" />
-     </state>
-     <state x="3103" y="404" width="840" height="1034" key="search.everywhere.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032" timestamp="1716724388330" />
--  </component>
--  <component name="XDebuggerManager">
--    <breakpoint-manager>
--      <breakpoints>
--        <line-breakpoint enabled="true" type="java-line">
--          <url>file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java</url>
--          <line>33</line>
--          <option name="timeStamp" value="6" />
--        </line-breakpoint>
--      </breakpoints>
--    </breakpoint-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-     <SUITE FILE_PATH="coverage/dynamic_thread_pool$Application.ic" NAME="Application Coverage Results" MODIFIED="1717504710925" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/UpdateThreadPoolConfigDTO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/UpdateThreadPoolConfigDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/UpdateThreadPoolConfigDTO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/UpdateThreadPoolConfigDTO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,29 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-@Data
-@NoArgsConstructor
-@AllArgsConstructor
-public class UpdateThreadPoolConfigDTO {
-    private String applicationName;
-    private String threadPoolName;
-    private Integer corePoolSize;
-    private Integer maximumPoolSize;
-    private Integer queueCapacity;
-
-    public static UpdateThreadPoolConfigDTO buildUpdateThreadPoolConfigDTO(
-            ThreadPoolConfigEntity threadPoolConfigEntity ) {
-        return new UpdateThreadPoolConfigDTO(
-                threadPoolConfigEntity.getApplicationName(),
-                threadPoolConfigEntity.getThreadPoolName(),
-                threadPoolConfigEntity.getCorePoolSize(),
-                threadPoolConfigEntity.getMaximumPoolSize(),
-                threadPoolConfigEntity.getQueueSize() + threadPoolConfigEntity.getRemainingCapacity()
-        );
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/Helpers.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/Helpers.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/Helpers.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/hook/Helpers.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,118 +0,0 @@
-/*
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.  Oracle designates this
- * particular file as subject to the "Classpath" exception as provided
- * by Oracle in the LICENSE file that accompanied this code.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-
-/*
- * This file is available under and governed by the GNU General Public
- * License version 2 only, as published by the Free Software Foundation.
- * However, the following notice accompanied the original version of this
- * file:
- *
- * Written by Martin Buchholz with assistance from members of JCP
- * JSR-166 Expert Group and released to the public domain, as
- * explained at http://creativecommons.org/publicdomain/zero/1.0/
- */
-
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.hook;
-
-import java.util.Collection;
-
-/** Shared implementation code for java.util.concurrent. */
-class Helpers {
-    private Helpers() {}                // non-instantiable
-
-    /**
-     * An implementation of Collection.toString() suitable for classes
-     * with locks.  Instead of holding a lock for the entire duration of
-     * toString(), or acquiring a lock for each call to Iterator.next(),
-     * we hold the lock only during the call to toArray() (less
-     * disruptive to other threads accessing the collection) and follows
-     * the maxim "Never call foreign code while holding a lock".
-     */
-    static String collectionToString(Collection<?> c) {
-        final Object[] a = c.toArray();
-        final int size = a.length;
-        if (size == 0)
-            return "[]";
-        int charLength = 0;
-
-        // Replace every array element with its string representation
-        for (int i = 0; i < size; i++) {
-            Object e = a[i];
-            // Extreme compatibility with AbstractCollection.toString()
-            String s = (e == c) ? "(this Collection)" : objectToString(e);
-            a[i] = s;
-            charLength += s.length();
-        }
-
-        return toString(a, size, charLength);
-    }
-
-    /**
-     * Like Arrays.toString(), but caller guarantees that size > 0,
-     * each element with index 0 <= i < size is a non-null String,
-     * and charLength is the sum of the lengths of the input Strings.
-     */
-    static String toString(Object[] a, int size, int charLength) {
-        // assert a != null;
-        // assert size > 0;
-
-        // Copy each string into a perfectly sized char[]
-        // Length of [ , , , ] == 2 * size
-        final char[] chars = new char[charLength + 2 * size];
-        chars[0] = '[';
-        int j = 1;
-        for (int i = 0; i < size; i++) {
-            if (i > 0) {
-                chars[j++] = ',';
-                chars[j++] = ' ';
-            }
-            String s = (String) a[i];
-            int len = s.length();
-            s.getChars(0, len, chars, j);
-            j += len;
-        }
-        chars[j] = ']';
-        // assert j == chars.length - 1;
-        return new String(chars);
-    }
-
-    /** Optimized form of: key + "=" + val */
-    static String mapEntryToString(Object key, Object val) {
-        final String k, v;
-        final int klen, vlen;
-        final char[] chars =
-            new char[(klen = (k = objectToString(key)).length()) +
-                     (vlen = (v = objectToString(val)).length()) + 1];
-        k.getChars(0, klen, chars, 0);
-        chars[klen] = '=';
-        v.getChars(0, vlen, chars, klen + 1);
-        return new String(chars);
-    }
-
-    private static String objectToString(Object x) {
-        // Extreme compatibility with StringBuilder.append(null)
-        String s;
-        return (x == null || (s = x.toString()) == null) ? "null" : s;
-    }
-}
Index: dynamic-thread-pool-test/target/classes/application.yml
===================================================================
diff --git a/dynamic-thread-pool-test/target/classes/application.yml b/dynamic-thread-pool-test/target/classes/application.yml
deleted file mode 100644
--- a/dynamic-thread-pool-test/target/classes/application.yml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,10 +0,0 @@
-spring:
-  application:
-    name: dynamic-thread-pool-test
-  profiles:
-    active: dev
-  main:
-    allow-bean-definition-overriding: true  # 允许覆盖重复定义的Bean
-
-server:
-  port: 8080
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]/shelved.patch	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,201 +0,0 @@
-Index: .idea/encodings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/resources\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/encodings.xml b/.idea/encodings.xml
---- a/.idea/encodings.xml	(revision a02bfae2ea34322eb74e0a9b81fd08f5c8edb79e)
-+++ b/.idea/encodings.xml	(date 1732351675594)
-@@ -7,5 +7,8 @@
-     <file url="file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/resources" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java" charset="UTF-8" />
-     <file url="file://$PROJECT_DIR$/dynamic-thread-pool-test/src/main/resources" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/src/assembly/resources" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
-+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"dynamic-thread-pool-test\" />\r\n        <module name=\"dynamic-thread-pool-spring-boot-starter\" />\r\n        <module name=\"dynamic-thread-pool-admin\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel target=\"8\">\r\n      <module name=\"dynamic-thread-pool\" target=\"1.8\" />\r\n      <module name=\"dynamic-thread-pool-admin\" target=\"1.8\" />\r\n      <module name=\"dynamic-thread-pool-spring-boot-starter\" target=\"8\" />\r\n      <module name=\"dynamic-thread-pool-test\" target=\"1.8\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"dynamic-thread-pool-admin\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-spring-boot-starter\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-test\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
---- a/.idea/compiler.xml	(revision 776d1916f6af7d6b6518cc7de58c4803f02d57e5)
-+++ b/.idea/compiler.xml	(date 1732351675592)
-@@ -9,18 +9,15 @@
-         <outputRelativeToContentRoot value="true" />
-         <module name="dynamic-thread-pool-test" />
-         <module name="dynamic-thread-pool-spring-boot-starter" />
--        <module name="dynamic-thread-pool-admin" />
-       </profile>
-     </annotationProcessing>
-     <bytecodeTargetLevel target="8">
--      <module name="dynamic-thread-pool" target="1.8" />
-       <module name="dynamic-thread-pool-admin" target="1.8" />
--      <module name="dynamic-thread-pool-spring-boot-starter" target="8" />
--      <module name="dynamic-thread-pool-test" target="1.8" />
-     </bytecodeTargetLevel>
-   </component>
-   <component name="JavacSettings">
-     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
-+      <module name="dynamic-thread-pool" options="-parameters" />
-       <module name="dynamic-thread-pool-admin" options="-parameters" />
-       <module name="dynamic-thread-pool-spring-boot-starter" options="-parameters" />
-       <module name="dynamic-thread-pool-test" options="-parameters" />
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4e729a25-7db1-4184-80c0-9444b5f5b868\" name=\"Default Changelist\" comment=\"订阅发布消息，提供接口\">\r\n      <change afterPath=\"$PROJECT_DIR$/data/log/log-error-2024-06-06.0.log\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/data/log/log-info-2024-06-06.0.log\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/docs/dev-ops/docker-compose.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/docs/dev-ops/redis/redis.conf\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/docs/front/index.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/log/log-error-2024-05-30.0.log\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\">\r\n    <execution />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package-info\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitToolBoxStore\">\r\n    <option name=\"projectConfigVersion\" value=\"2\" />\r\n    <option name=\"recentBranches\">\r\n      <RecentBranches>\r\n        <option name=\"branchesForRepo\">\r\n          <list>\r\n            <RecentBranchesForRepo>\r\n              <option name=\"branches\">\r\n                <list>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"master\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1717080534\" />\r\n                  </RecentBranch>\r\n                </list>\r\n              </option>\r\n              <option name=\"repositoryRootUrl\" value=\"file://$PROJECT_DIR$\" />\r\n            </RecentBranchesForRepo>\r\n          </list>\r\n        </option>\r\n      </RecentBranches>\r\n    </option>\r\n  </component>\r\n  <component name=\"MavenRunner\">\r\n    <option name=\"delegateBuildToMaven\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2h0GUxVpaT6wQkg9hp0Kt2zpnR7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RequestMappingsPanelOrder0\" value=\"0\" />\r\n    <property name=\"RequestMappingsPanelOrder1\" value=\"1\" />\r\n    <property name=\"RequestMappingsPanelWidth0\" value=\"75\" />\r\n    <property name=\"RequestMappingsPanelWidth1\" value=\"75\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SONARLINT_PRECOMMIT_ANALYSIS\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15625\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.maven.runner\" />\r\n  </component>\r\n  <component name=\"ReactorSettings\">\r\n    <option name=\"notificationShown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.test.types\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.test.sdk.domain.model.entity\" />\r\n      <recent name=\"test\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-admin\\src\\main\\java\\cn\\bread\\middleware\\dynamic\\thread\\pool\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-admin\\src\\main\\resources\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-test\\src\\main\\resources\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-test\\src\\main\\java\\cn\\bread\\config\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.Application\">\r\n    <configuration name=\"ApiTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"cn.bread.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.test.ApiTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ApiTest.test_dynamicThreadPoolRedisTopic\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"cn.bread.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.test.ApiTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"test_dynamicThreadPoolRedisTopic\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Application (1)\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-admin\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.middleware.dynamic.thread.pool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.middleware.dynamic.thread.pool.Application\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Application\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.Application\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Spring Boot.Application (1)\" />\r\n        <item itemvalue=\"JUnit.ApiTest.test_dynamicThreadPoolRedisTopic\" />\r\n        <item itemvalue=\"JUnit.ApiTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpringBootOptions\">\r\n    <option name=\"showAdditionalConfigNotification\" value=\"false\" />\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4e729a25-7db1-4184-80c0-9444b5f5b868\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1716723600294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716723600294</updated>\r\n      <workItem from=\"1716723603796\" duration=\"15940000\" />\r\n      <workItem from=\"1717066837383\" duration=\"3956000\" />\r\n      <workItem from=\"1717114908921\" duration=\"1182000\" />\r\n      <workItem from=\"1717399322456\" duration=\"13244000\" />\r\n      <workItem from=\"1717493633112\" duration=\"10775000\" />\r\n      <workItem from=\"1717570209620\" duration=\"7861000\" />\r\n      <workItem from=\"1717724978032\" duration=\"2268000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"搭建组件工程\">\r\n      <created>1716725336721</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716725336721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"redis搭建注册中心\">\r\n      <created>1717420956765</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717420956765</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"订阅发布消息，提供接口\">\r\n      <created>1717726274982</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717726274982</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"搭建组件工程\" />\r\n    <MESSAGE value=\"redis搭建注册中心\" />\r\n    <MESSAGE value=\"订阅发布消息，提供接口\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"订阅发布消息，提供接口\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"3076\" y=\"623\" key=\"#Inspections\" timestamp=\"1717414056714\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3076\" y=\"623\" key=\"#Inspections/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717414056714\" />\r\n    <state x=\"2764\" y=\"405\" key=\"#Project_Structure\" timestamp=\"1717680043879\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"2764\" y=\"405\" key=\"#Project_Structure/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717680043879\" />\r\n    <state x=\"3278\" y=\"559\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1717494744616\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3278\" y=\"559\" key=\"#com.intellij.ide.util.MemberChooser/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717494744616\" />\r\n    <state x=\"3296\" y=\"831\" key=\"#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog\" timestamp=\"1717681832146\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3296\" y=\"831\" key=\"#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717681832146\" />\r\n    <state x=\"3098\" y=\"780\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.packages\" timestamp=\"1717681843742\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3098\" y=\"780\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.packages/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717681843742\" />\r\n    <state x=\"3251\" y=\"646\" key=\"FileChooserDialogImpl\" timestamp=\"1716892548491\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3251\" y=\"646\" key=\"FileChooserDialogImpl/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716892548491\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.bottom/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.bottom/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.center\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.center/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.center/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.left\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.left/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.left/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.right\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.0.right/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.0.right/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826827\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.bottom/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.bottom/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826680\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.center\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.center/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.center/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826680\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.left\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.left/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.left/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826679\" />\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.right\" timestamp=\"1717726529628\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"274\" key=\"GridCell.Tab.1.right/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726529628\" />\r\n    <state width=\"1653\" height=\"346\" key=\"GridCell.Tab.1.right/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717506826680\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.bottom\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.bottom/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.bottom/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.center\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.center/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.center/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.left\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.left/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.left/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.right\" timestamp=\"1717683113987\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state width=\"1867\" height=\"307\" key=\"GridCell.Tab.2.right/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717683113987\" />\r\n    <state width=\"1653\" height=\"353\" key=\"GridCell.Tab.2.right/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1717505378790\" />\r\n    <state x=\"2824\" y=\"502\" key=\"Maven.ArtifactSearchDialog\" timestamp=\"1716896876394\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"2824\" y=\"502\" key=\"Maven.ArtifactSearchDialog/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716896876394\" />\r\n    <state x=\"2748\" y=\"467\" key=\"SettingsEditor\" timestamp=\"1717066753362\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"2748\" y=\"467\" key=\"SettingsEditor/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717066753362\" />\r\n    <state x=\"3016\" y=\"618\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1717726280023\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3016\" y=\"618\" key=\"Vcs.Push.Dialog.v2/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717726280023\" />\r\n    <state x=\"3108\" y=\"559\" width=\"1097\" height=\"722\" key=\"find.popup\" timestamp=\"1717418259427\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3108\" y=\"559\" width=\"1097\" height=\"722\" key=\"find.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717418259427\" />\r\n    <state x=\"61\" y=\"187\" key=\"new project wizard\" timestamp=\"1716778401281\">\r\n      <screen x=\"0\" y=\"0\" width=\"1707\" height=\"1019\" />\r\n    </state>\r\n    <state x=\"2722\" y=\"533\" key=\"new project wizard/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716723663866\" />\r\n    <state x=\"61\" y=\"187\" key=\"new project wizard/0.0.1707.1019@0.0.1707.1019\" timestamp=\"1716778401281\" />\r\n    <state x=\"3092\" y=\"437\" width=\"840\" height=\"1034\" key=\"run.anything.popup\" timestamp=\"1717420597651\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3092\" y=\"437\" width=\"840\" height=\"1034\" key=\"run.anything.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1717420597651\" />\r\n    <state x=\"3103\" y=\"404\" width=\"840\" height=\"1034\" key=\"search.everywhere.popup\" timestamp=\"1716724388330\">\r\n      <screen x=\"2560\" y=\"405\" width=\"1920\" height=\"1032\" />\r\n    </state>\r\n    <state x=\"3103\" y=\"404\" width=\"840\" height=\"1034\" key=\"search.everywhere.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032\" timestamp=\"1716724388330\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/dynamic_thread_pool$Application.ic\" NAME=\"Application Coverage Results\" MODIFIED=\"1717504710925\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/dynamic_thread_pool$ApiTest_test_dynamicThreadPoolRedisTopic.ic\" NAME=\"ApiTest.test_dynamicThreadPoolRedisTopic Coverage Results\" MODIFIED=\"1717502748220\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>cn.bread.test.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision a02bfae2ea34322eb74e0a9b81fd08f5c8edb79e)
-+++ b/.idea/workspace.xml	(date 1732351675597)
-@@ -1,21 +1,14 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="AutoImportSettings">
-+    <option name="autoReloadType" value="SELECTIVE" />
-+  </component>
-   <component name="BranchesTreeState">
-     <expand />
-     <select />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="4e729a25-7db1-4184-80c0-9444b5f5b868" name="Default Changelist" comment="订阅发布消息，提供接口">
--      <change afterPath="$PROJECT_DIR$/data/log/log-error-2024-06-06.0.log" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/data/log/log-info-2024-06-06.0.log" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/docs/dev-ops/docker-compose.yml" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/docs/dev-ops/redis/redis.conf" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/docs/front/index.html" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/data/log/log-error-2024-05-30.0.log" beforeDir="false" />
--      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java" beforeDir="false" afterPath="$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java" beforeDir="false" afterPath="$PROJECT_DIR$/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java" afterDir="false" />
--    </list>
-+    <list default="true" id="4e729a25-7db1-4184-80c0-9444b5f5b868" name="Default Changelist" comment="订阅发布消息，提供接口" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -34,6 +27,11 @@
-     </option>
-   </component>
-   <component name="Git.Settings">
-+    <option name="RECENT_BRANCH_BY_REPOSITORY">
-+      <map>
-+        <entry key="$PROJECT_DIR$" value="24-11-22-bread-web" />
-+      </map>
-+    </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
-   <component name="GitToolBoxStore">
-@@ -69,31 +67,11 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">
--    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
--    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
--    <property name="RequestMappingsPanelOrder0" value="0" />
--    <property name="RequestMappingsPanelOrder1" value="1" />
--    <property name="RequestMappingsPanelWidth0" value="75" />
--    <property name="RequestMappingsPanelWidth1" value="75" />
--    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
--    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
--    <property name="SONARLINT_PRECOMMIT_ANALYSIS" value="true" />
--    <property name="WebServerToolWindowFactoryState" value="false" />
--    <property name="aspect.path.notification.shown" value="true" />
--    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
--    <property name="node.js.detected.package.eslint" value="true" />
--    <property name="node.js.detected.package.tslint" value="true" />
--    <property name="node.js.path.for.package.eslint" value="project" />
--    <property name="node.js.path.for.package.tslint" value="project" />
--    <property name="node.js.selected.package.eslint" value="(autodetect)" />
--    <property name="node.js.selected.package.tslint" value="(autodetect)" />
--    <property name="nodejs_package_manager_path" value="npm" />
--    <property name="project.structure.last.edited" value="Modules" />
--    <property name="project.structure.proportion" value="0.15625" />
--    <property name="project.structure.side.proportion" value="0.2" />
--    <property name="settings.editor.selected.configurable" value="reference.settings.project.maven.runner" />
--  </component>
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "git-widget-placeholder": "master2"
-+  }
-+}]]></component>
-   <component name="ReactorSettings">
-     <option name="notificationShown" value="true" />
-   </component>
-@@ -149,13 +127,13 @@
-     </configuration>
-     <configuration name="Application (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
-       <module name="dynamic-thread-pool-admin" />
-+      <option name="SPRING_BOOT_MAIN_CLASS" value="cn.bread.middleware.dynamic.thread.pool.Application" />
-       <extension name="coverage">
-         <pattern>
-           <option name="PATTERN" value="cn.bread.middleware.dynamic.thread.pool.*" />
-           <option name="ENABLED" value="true" />
-         </pattern>
-       </extension>
--      <option name="SPRING_BOOT_MAIN_CLASS" value="cn.bread.middleware.dynamic.thread.pool.Application" />
-       <method v="2">
-         <option name="Make" enabled="true" />
-       </method>
-@@ -167,16 +145,21 @@
-         <option name="Make" enabled="true" />
-       </method>
-     </configuration>
-+    <list>
-+      <item itemvalue="JUnit.ApiTest" />
-+      <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
-+      <item itemvalue="Spring Boot.Application" />
-+      <item itemvalue="Spring Boot.Application (1)" />
-+    </list>
-     <recent_temporary>
-       <list>
-         <item itemvalue="Spring Boot.Application (1)" />
-         <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
-         <item itemvalue="JUnit.ApiTest" />
-+        <item itemvalue="Spring Boot.Application (1)" />
-+        <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
-       </list>
-     </recent_temporary>
--  </component>
--  <component name="SpringBootOptions">
--    <option name="showAdditionalConfigNotification" value="false" />
-   </component>
-   <component name="SvnConfiguration">
-     <configuration />
-@@ -233,7 +216,6 @@
-         </entry>
-       </map>
-     </option>
--    <option name="oldMeFiltersMigrated" value="true" />
-   </component>
-   <component name="VcsManagerConfiguration">
-     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-@@ -356,17 +338,6 @@
-       <screen x="2560" y="405" width="1920" height="1032" />
-     </state>
-     <state x="3103" y="404" width="840" height="1034" key="search.everywhere.popup/0.0.1707.1019/2560.405.1920.1032@2560.405.1920.1032" timestamp="1716724388330" />
--  </component>
--  <component name="XDebuggerManager">
--    <breakpoint-manager>
--      <breakpoints>
--        <line-breakpoint enabled="true" type="java-line">
--          <url>file://$PROJECT_DIR$/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java</url>
--          <line>33</line>
--          <option name="timeStamp" value="6" />
--        </line-breakpoint>
--      </breakpoints>
--    </breakpoint-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-     <SUITE FILE_PATH="coverage/dynamic_thread_pool$Application.ic" NAME="Application Coverage Results" MODIFIED="1717504710925" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
Index: dynamic-thread-pool.iml
===================================================================
diff --git a/dynamic-thread-pool.iml b/dynamic-thread-pool.iml
deleted file mode 100644
--- a/dynamic-thread-pool.iml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,2 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/PrometheusConfigRunner.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/PrometheusConfigRunner.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/PrometheusConfigRunner.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/PrometheusConfigRunner.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,57 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.config;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils.ApplicationUtils;
-import io.micrometer.core.instrument.ImmutableTag;
-import io.micrometer.core.instrument.Metrics;
-import io.micrometer.core.instrument.Tag;
-import lombok.AllArgsConstructor;
-import lombok.NoArgsConstructor;
-import org.springframework.boot.ApplicationArguments;
-import org.springframework.boot.ApplicationRunner;
-import org.springframework.context.ApplicationContext;
-
-import java.util.Arrays;
-import java.util.List;
-import java.util.concurrent.ThreadPoolExecutor;
-
-@NoArgsConstructor
-@AllArgsConstructor
-public class PrometheusConfigRunner implements ApplicationRunner {
-
-    private ApplicationContext applicationContext;
-
-    @Override
-    public void run(ApplicationArguments args) throws Exception {
-        String[] beanNamesForType = applicationContext.getBeanNamesForType(ThreadPoolExecutor.class);
-        for (String beanName : beanNamesForType) {
-            ThreadPoolExecutor executor = (ThreadPoolExecutor) applicationContext.getBean(beanName);
-            registerThreadPool(
-                    ApplicationUtils.getApplicationName(applicationContext),
-                    beanName,
-                    executor
-            );
-        }
-    }
-
-    private void registerThreadPool(
-            String applicationName,
-            String poolName,
-            ThreadPoolExecutor executor
-    ) {
-        List<Tag> tags = Arrays.asList(
-                new ImmutableTag("applicationName", applicationName),
-                new ImmutableTag("poolName", poolName)
-        );
-        Metrics.gauge("thread_pool_core_size", tags, executor, ThreadPoolExecutor::getCorePoolSize);
-        Metrics.gauge("thread_pool_max_size", tags, executor, ThreadPoolExecutor::getMaximumPoolSize);
-        Metrics.gauge("thread_pool_active_thread_count", tags, executor, ThreadPoolExecutor::getActiveCount);
-        Metrics.gauge("thread_pool_size", tags, executor, ThreadPoolExecutor::getPoolSize);
-        Metrics.gauge("thread_pool_queue_size", tags, executor,
-                (threadPoolExecutor) -> threadPoolExecutor.getQueue().size()
-        );
-        Metrics.gauge("thread_pool_queue_remaining_capacity", tags, executor,
-                (threadPoolExecutor) -> threadPoolExecutor.getQueue().remainingCapacity()
-        );
-    }
-}
Index: dynamic-thread-pool-test/src/main/java/cn/bread/controller/TestController.java
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/controller/TestController.java b/dynamic-thread-pool-test/src/main/java/cn/bread/controller/TestController.java
deleted file mode 100644
--- a/dynamic-thread-pool-test/src/main/java/cn/bread/controller/TestController.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,29 +0,0 @@
-package cn.bread.controller;
-
-import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.RestController;
-
-import javax.annotation.Resource;
-import java.util.concurrent.ThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-
-@RestController
-public class TestController {
-
-    @Resource
-    private ThreadPoolExecutor threadPoolExecutor02;
-
-    @GetMapping("/dos")
-    public void submitLogsOfThreads() {
-        new Thread(() -> {
-            for (int i = 0; i < 100; i++) {
-                threadPoolExecutor02.submit(() -> {
-                    try {
-                        TimeUnit.SECONDS.sleep(60 * 2);
-                    } catch (Exception ignored) {
-                    }
-                });
-            }
-        }).start();
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/RedisUtils.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/RedisUtils.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/RedisUtils.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/RedisUtils.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,81 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums.RegistryEnum;
-
-import org.redisson.api.RBucket;
-import org.redisson.api.RList;
-import org.redisson.api.RedissonClient;
-
-import java.time.Duration;
-import java.util.Objects;
-
-/**
- * Redis操作工具类
- */
-public class RedisUtils {
-    public static UpdateThreadPoolConfigDTO getUpdateThreadPoolConfigDTO(
-            RedissonClient redissonClient,
-            String applicationName,
-            String poolName ) {
-        return getUpdateThreadPoolConfigDTOBucket(
-                redissonClient,
-                applicationName,
-                poolName
-        ).get();
-    }
-
-    public static void setUpdateThreadPoolConfigDTO(
-            RedissonClient redissonClient,
-            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO ) {
-        RBucket<UpdateThreadPoolConfigDTO> updateThreadPoolConfigDTOBucket = getUpdateThreadPoolConfigDTOBucket(
-                redissonClient,
-                updateThreadPoolConfigDTO.getApplicationName(),
-                updateThreadPoolConfigDTO.getThreadPoolName()
-        );
-
-        updateThreadPoolConfigDTOBucket.set(
-                updateThreadPoolConfigDTO,
-                Duration.ofDays(30)
-        );
-    }
-
-    public static RList<ThreadPoolConfigEntity> getPoolConfigRList(RedissonClient redissonClient) {
-        return redissonClient.getList(RegistryEnum.THREAD_POOL_CONFIG_LIST_KEY.getKey());
-    }
-
-    public static ThreadPoolConfigEntity getPoolConfigByPoolName(RedissonClient redissonClient, String poolName) {
-        RList<ThreadPoolConfigEntity> threadPoolConfigEntities = redissonClient.getList(
-                RegistryEnum.THREAD_POOL_CONFIG_LIST_KEY.getKey()
-        );
-        for (ThreadPoolConfigEntity threadPoolConfigEntity : threadPoolConfigEntities) {
-            if (Objects.equals(threadPoolConfigEntity.getThreadPoolName(), poolName)) {
-                return threadPoolConfigEntity;
-            }
-        }
-        return null;
-    }
-
-    private static RBucket<UpdateThreadPoolConfigDTO> getUpdateThreadPoolConfigDTOBucket(
-            RedissonClient redissonClient,
-            String applicationName,
-            String poolName) {
-        return redissonClient.getBucket(
-                buildRedisKey(
-                        applicationName,
-                        poolName
-                )
-        );
-    }
-
-    private static String buildRedisKey(String applicationName, String poolName) {
-        return String.format(
-                "%s_%s_%s",
-                RegistryEnum.THREAD_POOL_CONFIG_PARAMETER_LIST_KEY.getKey(),
-                applicationName,
-                poolName
-        );
-    }
-}
Index: dynamic-thread-pool-test/src/main/java/cn/bread/DynamicThreadPoolTestApplication.java
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/DynamicThreadPoolTestApplication.java b/dynamic-thread-pool-test/src/main/java/cn/bread/DynamicThreadPoolTestApplication.java
deleted file mode 100644
--- a/dynamic-thread-pool-test/src/main/java/cn/bread/DynamicThreadPoolTestApplication.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,13 +0,0 @@
-package cn.bread;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-
-@SpringBootApplication
-public class DynamicThreadPoolTestApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(DynamicThreadPoolTestApplication.class, args);
-    }
-
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/ApplicationUtils.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/ApplicationUtils.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/ApplicationUtils.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/utils/ApplicationUtils.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,9 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.utils;
-
-import org.springframework.context.ApplicationContext;
-
-public class ApplicationUtils {
-    public static String getApplicationName(ApplicationContext applicationContext) {
-        return applicationContext.getEnvironment().getProperty("spring.application.name");
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/config/FrontendConfig.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/config/FrontendConfig.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/config/FrontendConfig.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/config/FrontendConfig.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,40 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.config;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
-import lombok.AllArgsConstructor;
-import lombok.NoArgsConstructor;
-
-import org.springframework.context.annotation.Configuration;
-import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
-import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
-import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
-
-import javax.annotation.Resource;
-
-@Configuration
-@NoArgsConstructor
-@AllArgsConstructor
-public class FrontendConfig implements WebMvcConfigurer {
-
-    @Resource
-    private DynamicThreadPoolWebAutoProperties config;
-
-    @Override
-    public void addResourceHandlers(ResourceHandlerRegistry registry) {
-        registry
-                .addResourceHandler(config.getContextPath() + "/**")
-                .addResourceLocations("classpath:/web/");
-        registry
-                .addResourceHandler("/f8e5c81e18c8522/**")
-                .addResourceLocations("classpath:/web/");
-    }
-
-    @Override
-    public void addViewControllers(ViewControllerRegistry registry) {
-        registry.addRedirectViewController(
-                config.getContextPath(),
-                config.getContextPath() + "/index.html"
-        );
-    }
-}
Index: dynamic-thread-pool-test/target/classes/application-prod.yml
===================================================================
diff --git a/dynamic-thread-pool-test/target/classes/application-prod.yml b/dynamic-thread-pool-test/target/classes/application-prod.yml
deleted file mode 100644
--- a/dynamic-thread-pool-test/target/classes/application-prod.yml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,19 +0,0 @@
-server:
-  port: 8091
-
-# 线程池配置
-thread:
-  pool:
-    executor:
-      config:
-        core-pool-size: 20
-        max-pool-size: 50
-        keep-alive-time: 5000
-        block-queue-size: 5000
-        policy: CallerRunsPolicy
-
-# 日志
-logging:
-  level:
-    root: info
-  config: classpath:logback-spring.xml
\ No newline at end of file
Index: dynamic-thread-pool-test/target/classes/application-test.yml
===================================================================
diff --git a/dynamic-thread-pool-test/target/classes/application-test.yml b/dynamic-thread-pool-test/target/classes/application-test.yml
deleted file mode 100644
--- a/dynamic-thread-pool-test/target/classes/application-test.yml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,41 +0,0 @@
-server:
-  port: 8091
-
-# 线程池配置
-thread:
-  pool:
-    executor:
-      config:
-        core-pool-size: 20
-        max-pool-size: 50
-        keep-alive-time: 5000
-        block-queue-size: 5000
-        policy: CallerRunsPolicy
-
-# 数据库配置
-#spring:
-#  datasource:
-#    username: root
-#    password: 123456
-#    url: jdbc:mysql://127.0.0.1:3306/xfg_frame_archetype?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
-#    driver-class-name: com.mysql.cj.jdbc.Driver
-#  hikari:
-#    pool-name: Retail_HikariCP
-#    minimum-idle: 15 #最小空闲连接数量
-#    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
-#    maximum-pool-size: 25 #连接池最大连接数，默认是10
-#    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
-#    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
-#    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
-#    connection-test-query: SELECT 1
-#  type: com.zaxxer.hikari.HikariDataSource
-
-#mybatis:
-#  mapper-locations: classpath:/mybatis/mapper/*.xml
-#  config-location:  classpath:/mybatis/config/mybatis-config.xml
-
-# 日志
-logging:
-  level:
-    root: info
-  config: classpath:logback-spring.xml
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/enums/ResponseEnum.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/enums/ResponseEnum.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/enums/ResponseEnum.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/enums/ResponseEnum.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,17 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.enums;
-
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-
-@Getter
-@AllArgsConstructor
-public enum ResponseEnum {
-    SUCCESS(200, "操作成功"),
-    FAILED(400, "操作失败"),
-    NO_AUTH(401, "无权限"),
-    NOT_FOUNT(404, "未找到"),
-    SYSTEM_ERROR(500, "系统错误");
-
-    private final Integer status;
-    private final String message;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/SettingsVO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/SettingsVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/SettingsVO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/SettingsVO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,16 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo;
-
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.io.Serializable;
-
-@Data
-@NoArgsConstructor
-@AllArgsConstructor
-public class SettingsVO implements Serializable {
-
-    private String apiContextPath;
-    private String grafanaDashboardUrl;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/AlarmServiceImpl.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/AlarmServiceImpl.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/AlarmServiceImpl.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/service/impl/AlarmServiceImpl.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,102 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.impl;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolAlarmAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IAlarmService;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.strategy.alarm.AbstractAlarmStrategy;
-import cn.bread.middleware.dynamic.thread.pool.sdk.trigger.job.AlarmCanSendStateChangeJob;
-import com.taobao.api.ApiException;
-import lombok.extern.slf4j.Slf4j;
-import org.springframework.scheduling.annotation.Async;
-import org.springframework.scheduling.annotation.EnableAsync;
-
-import javax.annotation.Resource;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Objects;
-
-@Slf4j
-@EnableAsync
-public class AlarmServiceImpl implements IAlarmService {
-
-    private static Boolean canSendForThreadPoolDanger = true;
-
-    @Resource
-    private DynamicThreadPoolAlarmAutoProperties config;
-
-    @Override
-    @Async
-    public void send(AlarmMessageDTO message) {
-        log.info("告警推送: {}", message);
-
-        Boolean enable = config.getEnabled();
-        if (!enable) {
-            log.info("告警推送未开启");
-            return;
-        }
-
-        List<AbstractAlarmStrategy> strategies = AbstractAlarmStrategy.selectStrategy(config.getUsePlatform());
-
-        strategies.forEach(strategy -> {
-            try {
-                strategy.send(message);
-            } catch (ApiException e) {
-                log.error("推送告警时发生错误: {} | {}", e.getErrCode(), e.getErrMsg());
-            }
-        });
-    }
-
-    @Override
-    @Async
-    public void sendIfThreadPoolHasDanger(List<ThreadPoolConfigEntity> pools) {
-        List<ThreadPoolConfigEntity> dangerPools = new ArrayList<>();
-        for (ThreadPoolConfigEntity pool : pools) {
-            // 活跃线程数达到最大 且 阻塞队列已满
-            if (Objects.equals(pool.getActiveThreadCount(), pool.getMaximumPoolSize())
-                    && pool.getRemainingCapacity() == 0) {
-                dangerPools.add(pool);
-            }
-        }
-
-        if (dangerPools.isEmpty()) {
-            return;
-        }
-
-        AlarmMessageDTO alarmMessageDTO = AlarmMessageDTO
-                .buildAlarmMessageDTO("超出线程池处理能力")
-                .appendParameter("告警线程池数", dangerPools.size());
-        dangerPools.forEach(pool -> alarmMessageDTO
-                .appendParameter("======", "======")
-                .appendParameter("应用名称", pool.getApplicationName())
-                .appendParameter("线程池名称", pool.getThreadPoolName())
-                .appendParameter("池中线程数", pool.getPoolSize())
-                .appendParameter("核心线程数", pool.getCorePoolSize())
-                .appendParameter("最大线程数", pool.getMaximumPoolSize())
-                .appendParameter("活跃线程数", pool.getActiveThreadCount())
-                .appendParameter("队列类型", pool.getQueueType())
-                .appendParameter("队列中任务数", pool.getQueueSize())
-                .appendParameter("队列剩余容量", pool.getRemainingCapacity())
-        );
-        send(alarmMessageDTO);
-
-        AlarmServiceImpl.canSendForThreadPoolDanger = false;
-
-        // 启动一个定时任务, 10分钟后自动将 canSendForThreadPoolDanger 改为true
-        AlarmCanSendStateChangeJob job = new AlarmCanSendStateChangeJob(
-                () -> AlarmServiceImpl.setCanSendForThreadPoolDanger(true)
-        );
-        job.run(60 * 10);
-    }
-
-
-
-    public static synchronized Boolean canSendForThreadPoolDanger() {
-        return canSendForThreadPoolDanger;
-    }
-
-    public static synchronized void setCanSendForThreadPoolDanger(Boolean canSendForThreadPoolDanger) {
-        AlarmServiceImpl.canSendForThreadPoolDanger = canSendForThreadPoolDanger;
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/AlarmStrategyEnum.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/AlarmStrategyEnum.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/AlarmStrategyEnum.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/enums/AlarmStrategyEnum.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,17 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.enums;
-
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-import lombok.NoArgsConstructor;
-
-@AllArgsConstructor
-@NoArgsConstructor
-@Getter
-public enum AlarmStrategyEnum {
-
-    DING_DING("DingDing", "钉钉"),
-    FEI_SHU("FeiShu", "飞书");
-
-    private String value;
-    private String description;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/dto/LoginDTO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/dto/LoginDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/dto/LoginDTO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/dto/LoginDTO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,12 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.dto;
-
-import lombok.Data;
-
-import java.io.Serializable;
-
-@Data
-public class LoginDTO implements Serializable {
-
-    private String username;
-    private String password;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/AlarmMessageDTO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/AlarmMessageDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/AlarmMessageDTO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/AlarmMessageDTO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,57 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto;
-
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.util.LinkedHashMap;
-
-@Data
-@NoArgsConstructor
-@AllArgsConstructor
-public class AlarmMessageDTO {
-    private String message;
-    private LinkedHashMap<String, String> parameters;
-    private String remarks;
-
-    public static AlarmMessageDTO buildAlarmMessageDTO(
-            String message,
-            LinkedHashMap<String, String > parameters,
-            String remarks
-    ) {
-        return new AlarmMessageDTO(
-                message,
-                parameters,
-                remarks
-        );
-    }
-
-    public static AlarmMessageDTO buildAlarmMessageDTO(
-            String message,
-            String remarks
-    ) {
-        return AlarmMessageDTO.buildAlarmMessageDTO(
-                message,
-                new LinkedHashMap<>(),
-                remarks
-        );
-    }
-
-    public static AlarmMessageDTO buildAlarmMessageDTO(
-            String message
-    ) {
-        return AlarmMessageDTO.buildAlarmMessageDTO(
-                message,
-                new LinkedHashMap<>(),
-                null
-        );
-    }
-
-    public <T> AlarmMessageDTO appendParameter(String k, T v) {
-        parameters.put(
-                k,
-                v.toString()
-        );
-        return this;
-    }
-}
Index: dynamic-thread-pool-test/src/main/java/cn/bread/runner/ThreadPoolRunner.java
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/runner/ThreadPoolRunner.java b/dynamic-thread-pool-test/src/main/java/cn/bread/runner/ThreadPoolRunner.java
deleted file mode 100644
--- a/dynamic-thread-pool-test/src/main/java/cn/bread/runner/ThreadPoolRunner.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,59 +0,0 @@
-package cn.bread.runner;
-
-import org.springframework.boot.ApplicationArguments;
-import org.springframework.boot.ApplicationRunner;
-import org.springframework.stereotype.Component;
-
-import javax.annotation.Resource;
-import java.util.Random;
-import java.util.concurrent.ThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-
-@Component
-public class ThreadPoolRunner implements ApplicationRunner {
-
-    @Resource
-    private ThreadPoolExecutor threadPoolExecutor01;
-
-    @Override
-    public void run(ApplicationArguments args) throws Exception {
-        Thread t = new Thread(() -> {
-            try {
-                while (true) {
-                    Random random = new Random();
-                    int startDuration = random.nextInt(5) + 1;
-                    int runDuration = random.nextInt(10) + 1;
-
-                    threadPoolExecutor01.submit(() -> {
-                        try {
-                            TimeUnit.SECONDS.sleep(startDuration);
-                            System.out.printf("启动花费时间: %ds\n", startDuration);
-
-                            TimeUnit.SECONDS.sleep(runDuration);
-                            System.out.printf("运行花费时间: %ds\n", runDuration);
-
-//                    List<ThreadPoolConfigEntity> threadPoolConfigEntities = dynamicThreadPoolService.queryThreadPoolList();
-//                    System.out.println(threadPoolConfigEntities);
-//
-//                    if (startDuration == 3) {
-//                        dynamicThreadPoolService.updateThreadPoolConfig(
-//                                new UpdateThreadPoolConfigDTO(
-//                                        "dynamic-thread-pool-test",
-//                                        "threadPoolExecutor01",
-//                                        88,
-//                                        666
-//                                )
-//                        );
-//                    }
-                        } catch (InterruptedException e) {
-                            throw new RuntimeException(e);
-                        }
-                    });
-
-                    Thread.sleep((random.nextInt(10) + 1) * 1000);
-                }
-            } catch (Exception e) {}
-        });
-        t.start();
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/AuthController.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/AuthController.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/AuthController.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/controller/AuthController.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,45 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.exception.BusinessException;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.dto.LoginDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.enums.ResponseEnum;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.CheckAuthVO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.LoginVO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo.ResponseVO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.utils.AuthUtils;
-import org.springframework.web.bind.annotation.*;
-
-import javax.annotation.Resource;
-import javax.servlet.http.HttpServletRequest;
-import java.util.Objects;
-@RestController
-@RequestMapping(value = "${dynamic-thread-pool.web.context-path}/auth")
-@CrossOrigin(allowCredentials = "true", origins = {"http://localhost*", "http://127.0.0.1*"})
-public class AuthController {
-    @Resource
-    private DynamicThreadPoolWebAutoProperties dynamicThreadPoolWebAutoProperties;
-
-    @PostMapping("/login")
-    public ResponseVO<LoginVO> login(@RequestBody LoginDTO loginDTO, HttpServletRequest request) {
-        DynamicThreadPoolWebAutoProperties.Auth authConfig = dynamicThreadPoolWebAutoProperties.getAuth();
-
-        String username = loginDTO.getUsername();
-        String password = loginDTO.getPassword();
-
-        if (!Objects.equals(username, authConfig.getUsername()) ||
-                !Objects.equals(password, authConfig.getPassword())) {
-            throw new BusinessException(ResponseEnum.FAILED, "用户名或密码错误");
-        }
-
-        String token = AuthUtils.generateToken();
-        request.getSession().setAttribute(AuthUtils.SESSION_AUTH_KEY, token);
-        return ResponseVO.success(new LoginVO(token));
-    }
-
-    @GetMapping("/check")
-    public ResponseVO<CheckAuthVO> checkAuth(HttpServletRequest request) {
-        return ResponseVO.success(new CheckAuthVO(AuthUtils.hashAuth(request)));
-    }
-}
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
deleted file mode 100644
--- a/.idea/jarRepositories.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Central Repository" />
-      <option name="url" value="https://repo.maven.apache.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/AlarmCanSendStateChangeJob.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/AlarmCanSendStateChangeJob.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/AlarmCanSendStateChangeJob.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/AlarmCanSendStateChangeJob.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,42 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.trigger.job;
-
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.util.concurrent.TimeUnit;
-
-@Data
-@NoArgsConstructor
-public class AlarmCanSendStateChangeJob {
-
-    private Runnable task;
-
-    private Thread thread;
-
-    public AlarmCanSendStateChangeJob(Runnable task) {
-        this.task = task;
-    }
-
-    public void run(int delay) {
-        if (thread == null) {
-            start(delay);
-            return;
-        }
-
-        if (thread.isAlive()) {
-            thread.interrupt();
-        }
-
-        start(delay);
-    }
-
-    private void start(int delay) {
-        thread = new Thread(() -> {
-            try {
-                TimeUnit.SECONDS.sleep(delay);
-                task.run();
-            } catch (Exception ignored) {}
-        });
-        thread.start();
-    }
-}
Index: dynamic-thread-pool-test/target/classes/META-INF/spring-configuration-metadata.json
===================================================================
diff --git a/dynamic-thread-pool-test/target/classes/META-INF/spring-configuration-metadata.json b/dynamic-thread-pool-test/target/classes/META-INF/spring-configuration-metadata.json
deleted file mode 100644
--- a/dynamic-thread-pool-test/target/classes/META-INF/spring-configuration-metadata.json	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,37 +0,0 @@
-{
-  "groups": [
-    {
-      "name": "thread.pool.executor.config",
-      "type": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties",
-      "sourceType": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties"
-    }
-  ],
-  "properties": [
-    {
-      "name": "thread.pool.executor.config.block-queue-size",
-      "type": "java.lang.Integer",
-      "sourceType": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties"
-    },
-    {
-      "name": "thread.pool.executor.config.core-pool-size",
-      "type": "java.lang.Integer",
-      "sourceType": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties"
-    },
-    {
-      "name": "thread.pool.executor.config.keep-alive-time",
-      "type": "java.lang.Integer",
-      "sourceType": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties"
-    },
-    {
-      "name": "thread.pool.executor.config.max-pool-size",
-      "type": "java.lang.Integer",
-      "sourceType": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties"
-    },
-    {
-      "name": "thread.pool.executor.config.policy",
-      "type": "java.lang.String",
-      "sourceType": "cn.bread.config.propertis.ThreadPoolConfigAutoProperties"
-    }
-  ],
-  "hints": []
-}
\ No newline at end of file
Index: .idea/git_toolbox_blame.xml
===================================================================
diff --git a/.idea/git_toolbox_blame.xml b/.idea/git_toolbox_blame.xml
deleted file mode 100644
--- a/.idea/git_toolbox_blame.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="GitToolBoxBlameSettings">
-    <option name="version" value="2" />
-  </component>
-</project>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/RefreshThreadPoolConfigDTO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/RefreshThreadPoolConfigDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/RefreshThreadPoolConfigDTO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/dto/RefreshThreadPoolConfigDTO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,4 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto;
-
-public class RefreshThreadPoolConfigDTO {
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/ResponseVO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/ResponseVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/ResponseVO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/ResponseVO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,46 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.enums.ResponseEnum;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.io.Serializable;
-
-@Data
-@NoArgsConstructor
-@AllArgsConstructor
-public class ResponseVO <T> implements Serializable {
-
-    private Integer status;
-    private String message;
-    private String description;
-    private T data;
-
-    public static <T> ResponseVO<T> success(T data) {
-        return ResponseVO.success(data, "");
-    }
-
-    public static <T> ResponseVO<T> success(T data, String description) {
-        return new ResponseVO<>(
-                ResponseEnum.SUCCESS.getStatus(),
-                ResponseEnum.SUCCESS.getMessage(),
-                description,
-                data
-        );
-    }
-
-    public static <T> ResponseVO<T> failed(ResponseEnum responseEnum) {
-        return ResponseVO.failed(responseEnum, "");
-    }
-
-    public static <T> ResponseVO<T> failed(ResponseEnum responseEnum, String description) {
-        return new ResponseVO<>(
-                responseEnum.getStatus(),
-                responseEnum.getMessage(),
-                description,
-                null
-        );
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/AbstractAlarmStrategy.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/AbstractAlarmStrategy.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/AbstractAlarmStrategy.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/strategy/alarm/AbstractAlarmStrategy.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,57 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.strategy.alarm;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.AlarmMessageDTO;
-import com.taobao.api.ApiException;
-import lombok.Data;
-import org.springframework.stereotype.Component;
-
-import javax.annotation.PostConstruct;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-
-@Data
-@Component
-public abstract class AbstractAlarmStrategy implements IAlarmStrategy {
-
-    private static HashMap<String, AbstractAlarmStrategy> strategiesMap = new HashMap<>();
-
-    public abstract String getStrategyName();
-
-    @PostConstruct
-    private void initStrategy() {
-        strategiesMap.put(getStrategyName(), this);
-    }
-
-    public static List<AbstractAlarmStrategy> selectStrategy(List<String > strategies) {
-        ArrayList<AbstractAlarmStrategy> abstractAlarmStrategies = new ArrayList<>();
-        strategies.forEach(strategy -> {
-            abstractAlarmStrategies.add(strategiesMap.get(strategy));
-        });
-        return abstractAlarmStrategies;
-    }
-
-    public static List<AbstractAlarmStrategy> selectStrategy(String strategies) {
-        return selectStrategy(Collections.singletonList(strategies));
-    }
-
-    @Override
-    public abstract void send(AlarmMessageDTO message) throws ApiException;
-
-    protected String buildMessageContent(AlarmMessageDTO message) {
-        StringBuilder content = new StringBuilder();
-        HashMap<String, String> parameters = message.getParameters();
-        String remarks = message.getRemarks();
-
-        content.append("【监控告警】 ").append(message.getMessage()).append("\n");
-        parameters.forEach((k, v) -> {
-            content.append(" ").append(k).append(": ").append(v).append("\n");
-        });
-        if (remarks != null) {
-            content.append(" ").append(remarks).append("\n");
-        }
-        return content.toString();
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/CheckAuthVO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/CheckAuthVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/CheckAuthVO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/CheckAuthVO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,12 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo;
-
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-import java.io.Serializable;
-
-@Data
-@AllArgsConstructor
-public class CheckAuthVO implements Serializable {
-    Boolean isLogin;
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/LoginVO.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/LoginVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/LoginVO.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/model/vo/LoginVO.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,12 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.model.vo;
-
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-import java.io.Serializable;
-
-@Data
-@AllArgsConstructor
-public class LoginVO implements Serializable {
-    private String authToken;
-}
Index: dynamic-thread-pool-test/src/main/java/cn/bread/config/propertis/ThreadPoolConfigAutoProperties.java
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/config/propertis/ThreadPoolConfigAutoProperties.java b/dynamic-thread-pool-test/src/main/java/cn/bread/config/propertis/ThreadPoolConfigAutoProperties.java
deleted file mode 100644
--- a/dynamic-thread-pool-test/src/main/java/cn/bread/config/propertis/ThreadPoolConfigAutoProperties.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,18 +0,0 @@
-package cn.bread.config.propertis;
-
-import lombok.Data;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-/**
- * 线程池配置
- */
-
-@ConfigurationProperties(prefix = "thread.pool.executor.config", ignoreInvalidFields = true)
-@Data
-public class ThreadPoolConfigAutoProperties {
-    private Integer corePoolSize;
-    private Integer maxPoolSize;
-    private Integer keepAliveTime;
-    private Integer blockQueueSize;
-    private String policy;
-}
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_1.xml b/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_1.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]1" date="1732351687966" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Merge at 2024-11-23 16:48 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48__Default_Changelist_.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]" date="1732351686973" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_2024-11-23_16_48_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Merge at 2024-11-23 16:48 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/IRegistry.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/IRegistry.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/IRegistry.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/registry/IRegistry.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,27 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry;
-
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-
-import java.util.List;
-
-/**
- * 注册中心接口
- */
-
-public interface IRegistry {
-
-    /**
-     * 上报全部线程池配置信息
-     * @param threadPoolConfigEntityList 线程池列表
-     */
-    void reportThreadPool(List<ThreadPoolConfigEntity> threadPoolConfigEntityList);
-
-
-    /**
-     * 上报更新线程池配置参数
-     * @param updateThreadPoolConfigDTO 更新线程池配置传输对象
-     */
-    void reportUpdateThreadPoolConfigParameter(UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO);
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/utils/AuthUtils.java
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/utils/AuthUtils.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/utils/AuthUtils.java
deleted file mode 100644
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/web/utils/AuthUtils.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ /dev/null	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
@@ -1,38 +0,0 @@
-package cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.utils;
-
-import javax.servlet.http.HttpServletRequest;
-import java.util.Objects;
-import java.util.Random;
-
-public class AuthUtils {
-
-    public static String SESSION_AUTH_KEY = "auth";
-    public static String AUTH_HEADER = "Auth-Token";
-
-    public static String generateToken() {
-        StringBuilder token = new StringBuilder();
-        for (int i = 0; i < 32; i++) {
-            token.append((char) (new Random(
-                    new Random().nextInt(100) * new Random().nextInt(100)
-            ).nextInt('Z' - 'A' + 1) + 'A'));
-        }
-        return token.toString();
-    }
-
-    public static Boolean hashAuth(HttpServletRequest request) {
-        Object sessionAuthToken = request.getSession().getAttribute(SESSION_AUTH_KEY);
-        if (sessionAuthToken == null) {
-            return false;
-        }
-
-        String headerAuthToken = request.getHeader(AUTH_HEADER);
-        if (headerAuthToken == null) {
-            return false;
-        }
-
-        return Objects.equals(
-                sessionAuthToken,
-                headerAuthToken
-        );
-    }
-}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/utils/AuthUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/utils/AuthUtils.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/utils/AuthUtils.java
new file mode 100644
--- /dev/null	(date 1732353890785)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/utils/AuthUtils.java	(date 1732353890785)
@@ -0,0 +1,38 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.utils;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.Objects;
+import java.util.Random;
+
+public class AuthUtils {
+
+    public static String SESSION_AUTH_KEY = "auth";
+    public static String AUTH_HEADER = "Auth-Token";
+
+    public static String generateToken() {
+        StringBuilder token = new StringBuilder();
+        for (int i = 0; i < 32; i++) {
+            token.append((char) (new Random(
+                    new Random().nextInt(100) * new Random().nextInt(100)
+            ).nextInt('Z' - 'A' + 1) + 'A'));
+        }
+        return token.toString();
+    }
+
+    public static Boolean hashAuth(HttpServletRequest request) {
+        Object sessionAuthToken = request.getSession().getAttribute(SESSION_AUTH_KEY);
+        if (sessionAuthToken == null) {
+            return false;
+        }
+
+        String headerAuthToken = request.getHeader(AUTH_HEADER);
+        if (headerAuthToken == null) {
+            return false;
+        }
+
+        return Objects.equals(
+                sessionAuthToken,
+                headerAuthToken
+        );
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/config/FrontendConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/config/FrontendConfig.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/config/FrontendConfig.java
new file mode 100644
--- /dev/null	(date 1732353890726)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/config/FrontendConfig.java	(date 1732353890726)
@@ -0,0 +1,36 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.config;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
+import lombok.AllArgsConstructor;
+import lombok.NoArgsConstructor;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
+import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+@Configuration
+@NoArgsConstructor
+@AllArgsConstructor
+public class FrontendConfig implements WebMvcConfigurer {
+
+    private DynamicThreadPoolWebAutoProperties config;
+
+    @Override
+    public void addResourceHandlers(ResourceHandlerRegistry registry) {
+        registry
+                .addResourceHandler(config.getContextPath() + "/**")
+                .addResourceLocations("classpath:/web/");
+        registry
+                .addResourceHandler("/f8e5c81e18c8522/**")
+                .addResourceLocations("classpath:/web/");
+    }
+
+    @Override
+    public void addViewControllers(ViewControllerRegistry registry) {
+        registry.addRedirectViewController(
+                config.getContextPath(),
+                config.getContextPath() + "/index.html"
+        );
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/BusinessException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/BusinessException.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/BusinessException.java
new file mode 100644
--- /dev/null	(date 1732353890767)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/BusinessException.java	(date 1732353890767)
@@ -0,0 +1,23 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.exception;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.enums.ResponseEnum;
+import lombok.Getter;
+
+@Getter
+public class BusinessException extends RuntimeException {
+
+    private final ResponseEnum responseEnum;
+    private final String description;
+
+
+    public BusinessException(ResponseEnum responseEnum) {
+        this(responseEnum, "");
+    }
+
+    public BusinessException(ResponseEnum responseEnum, String description) {
+        super(responseEnum.getMessage());
+        this.responseEnum = responseEnum;
+        this.description = description;
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java
new file mode 100644
--- /dev/null	(date 1732353890769)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/exception/DynamicThreadPoolWebGlobalExceptionHandler.java	(date 1732353890769)
@@ -0,0 +1,27 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.exception;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.enums.ResponseEnum;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.ResponseVO;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.web.bind.annotation.ControllerAdvice;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+@Slf4j
+@ControllerAdvice
+public class DynamicThreadPoolWebGlobalExceptionHandler {
+
+    @ExceptionHandler(BusinessException.class)
+    @ResponseBody
+    public ResponseVO<?> processBusinessException(BusinessException e) {
+        log.warn("动态线程池Web, 出现业务异常", e);
+        return ResponseVO.failed(e.getResponseEnum(), e.getDescription());
+    }
+
+    @ExceptionHandler(RuntimeException.class)
+    public ResponseVO<?> processRuntimeException(RuntimeException e) {
+        log.error("动态线程池Web, 出现系统异常: {}", e.toString());
+        return ResponseVO.failed(ResponseEnum.SYSTEM_ERROR, e.toString());
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/AuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/AuthController.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/AuthController.java
new file mode 100644
--- /dev/null	(date 1732353890751)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/AuthController.java	(date 1732353890751)
@@ -0,0 +1,46 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.controller;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.exception.BusinessException;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.dto.LoginDTO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.enums.ResponseEnum;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.CheckAuthVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.LoginVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.ResponseVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.utils.AuthUtils;
+import org.springframework.web.bind.annotation.*;
+
+import javax.annotation.Resource;
+import javax.servlet.http.HttpServletRequest;
+import java.util.Objects;
+
+@RestController
+@RequestMapping(value = "${dynamic-thread-pool.web.context-path}/auth")
+@CrossOrigin(allowCredentials = "true", originPatterns = {"http://localhost*", "http://127.0.0.1*"})
+public class AuthController {
+    @Resource
+    private DynamicThreadPoolWebAutoProperties dynamicThreadPoolWebAutoProperties;
+
+    @PostMapping("/login")
+    public ResponseVO<LoginVO> login(@RequestBody LoginDTO loginDTO, HttpServletRequest request) {
+        DynamicThreadPoolWebAutoProperties.Auth authConfig = dynamicThreadPoolWebAutoProperties.getAuth();
+
+        String username = loginDTO.getUsername();
+        String password = loginDTO.getPassword();
+
+        if (!Objects.equals(username, authConfig.getUsername()) ||
+                !Objects.equals(password, authConfig.getPassword())) {
+            throw new BusinessException(ResponseEnum.FAILED, "用户名或密码错误");
+        }
+
+        String token = AuthUtils.generateToken();
+        request.getSession().setAttribute(AuthUtils.SESSION_AUTH_KEY, token);
+        return ResponseVO.success(new LoginVO(token));
+    }
+
+    @GetMapping("/check")
+    public ResponseVO<CheckAuthVO> checkAuth(HttpServletRequest request) {
+        return ResponseVO.success(new CheckAuthVO(AuthUtils.hashAuth(request)));
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/SettingsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/SettingsController.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/SettingsController.java
new file mode 100644
--- /dev/null	(date 1732353890753)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/SettingsController.java	(date 1732353890753)
@@ -0,0 +1,27 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.controller;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.ResponseVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.SettingsVO;
+import org.springframework.web.bind.annotation.CrossOrigin;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import javax.annotation.Resource;
+
+@RestController
+@CrossOrigin(allowCredentials = "true", origins = {"http://localhost*", "http://127.0.0.1*"})
+public class SettingsController {
+
+    @Resource
+    private DynamicThreadPoolWebAutoProperties webAutoProperties;
+
+    @GetMapping("/settingsLZQGJPUFNS")
+    public ResponseVO<SettingsVO> settings() {
+        return ResponseVO.success(new SettingsVO(
+                webAutoProperties.getContextPath(),
+                webAutoProperties.getGrafanaDashboardUrl()
+        ));
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/ThreadPoolController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/ThreadPoolController.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/ThreadPoolController.java
new file mode 100644
--- /dev/null	(date 1732353890763)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/controller/ThreadPoolController.java	(date 1732353890763)
@@ -0,0 +1,79 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.controller;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+import cn.bread.middleware.dynamic.thread.pool.sdk.model.dto.RefreshThreadPoolConfigDTO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.model.dto.UpdateThreadPoolConfigDTO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.utils.RedisUtils;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.exception.BusinessException;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.enums.ResponseEnum;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo.ResponseVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.utils.AuthUtils;
+import org.redisson.api.RTopic;
+import org.redisson.api.RedissonClient;
+import org.springframework.web.bind.annotation.*;
+
+import javax.annotation.Resource;
+import javax.servlet.http.HttpServletRequest;
+import java.util.List;
+
+@RestController
+@RequestMapping(value = "${dynamic-thread-pool.web.context-path}/pool")
+@CrossOrigin(allowCredentials = "true", origins = {"http://localhost*", "http://127.0.0.1*"})
+public class ThreadPoolController {
+
+    @Resource
+    private RTopic dynamicThreadPoolAdjustRedisTopic;
+
+    @Resource
+    private RedissonClient redissonClient;
+
+    @Resource
+    private RTopic dynamicThreadPoolRefreshRedisTopic;
+
+    @GetMapping("/list")
+    public ResponseVO<List<ThreadPoolConfigEntity>> getThreadPoolConfigList(HttpServletRequest request) {
+        if (!AuthUtils.hashAuth(request)) {
+            throw new BusinessException(ResponseEnum.NO_AUTH);
+        }
+
+        return ResponseVO.success(RedisUtils.getPoolConfigRList(redissonClient));
+    }
+
+    @GetMapping("/get")
+    public ResponseVO<ThreadPoolConfigEntity> getThreadPoolUpdateConfig(
+            HttpServletRequest request,
+            String poolName) {
+        if (!AuthUtils.hashAuth(request)) {
+            throw new BusinessException(ResponseEnum.NO_AUTH);
+        }
+
+        ThreadPoolConfigEntity poolConfig = RedisUtils.getPoolConfigByPoolName(redissonClient, poolName);
+        if (poolConfig == null) {
+            throw new BusinessException(ResponseEnum.NOT_FOUNT, "未找到该线程池");
+        }
+
+        return ResponseVO.success(poolConfig);
+    }
+
+    @PostMapping("/update")
+    public ResponseVO<Boolean > updateThreadPoolConfig(
+            HttpServletRequest request,
+            @RequestBody UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO ) {
+        if (!AuthUtils.hashAuth(request)) {
+            throw new BusinessException(ResponseEnum.NO_AUTH);
+        }
+
+        dynamicThreadPoolAdjustRedisTopic.publish(updateThreadPoolConfigDTO);
+        return ResponseVO.success(true, "成功发布线程池变更消息");
+    }
+
+    @GetMapping("/refresh")
+    public ResponseVO<Void> refreshThreadPoolConfigList(HttpServletRequest request) {
+        if (!AuthUtils.hashAuth(request)) {
+            throw new BusinessException(ResponseEnum.NO_AUTH);
+        }
+        dynamicThreadPoolRefreshRedisTopic.publish(new RefreshThreadPoolConfigDTO());
+        return ResponseVO.success(null);
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/CheckAuthVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/CheckAuthVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/CheckAuthVO.java
new file mode 100644
--- /dev/null	(date 1732353890778)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/CheckAuthVO.java	(date 1732353890778)
@@ -0,0 +1,12 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+
+import java.io.Serializable;
+
+@Data
+@AllArgsConstructor
+public class CheckAuthVO implements Serializable {
+    Boolean isLogin;
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/LoginVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/LoginVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/LoginVO.java
new file mode 100644
--- /dev/null	(date 1732353890779)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/LoginVO.java	(date 1732353890779)
@@ -0,0 +1,12 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+
+import java.io.Serializable;
+
+@Data
+@AllArgsConstructor
+public class LoginVO implements Serializable {
+    private String authToken;
+}
Index: dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfigProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfigProperties.java b/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfigProperties.java
new file mode 100644
--- /dev/null	(date 1732353890791)
+++ b/dynamic-thread-pool-test/src/main/java/cn/bread/config/ThreadPoolConfigProperties.java	(date 1732353890791)
@@ -0,0 +1,26 @@
+package cn.bread.config;
+
+import lombok.Data;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+@Data
+@ConfigurationProperties(prefix = "thread.pool.executor.config", ignoreInvalidFields = true)
+public class ThreadPoolConfigProperties {
+
+    /** 核心线程数 */
+    private Integer corePoolSize = 20;
+    /** 最大线程数 */
+    private Integer maxPoolSize = 200;
+    /** 最大等待时间 */
+    private Long keepAliveTime = 10L;
+    /** 最大队列数 */
+    private Integer blockQueueSize = 5000;
+    /*
+     * AbortPolicy：丢弃任务并抛出RejectedExecutionException异常。
+     * DiscardPolicy：直接丢弃任务，但是不会抛出异常
+     * DiscardOldestPolicy：将最早进入队列的任务删除，之后再尝试加入队列的任务被拒绝
+     * CallerRunsPolicy：如果任务添加线程池失败，那么主线程自己执行该任务
+     * */
+    private String policy = "AbortPolicy";
+
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/package-info.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/package-info.java
new file mode 100644
--- /dev/null	(date 1732353890686)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/package-info.java	(date 1732353890686)
@@ -0,0 +1,6 @@
+/**
+ * @Description: 触发器包  job 监听
+ * @Author:bread
+ * @Date: 2024-05-26 20:03
+ */
+package cn.bread.middleware.dynamic.thread.pool.sdk.trigger;
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/valobj/RegistryEnumVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/valobj/RegistryEnumVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/valobj/RegistryEnumVO.java
new file mode 100644
--- /dev/null	(date 1732353890565)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/valobj/RegistryEnumVO.java	(date 1732353890565)
@@ -0,0 +1,31 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj;
+
+/**
+ * @author bread
+ * @description 注册中心枚举值对象 key
+ * @create 2024-05-12 16:26
+ */
+public enum RegistryEnumVO {
+
+    THREAD_POOL_CONFIG_LIST_KEY("THREAD_POOL_CONFIG_LIST_KEY", "池化配置列表"),
+    THREAD_POOL_CONFIG_PARAMETER_LIST_KEY("THREAD_POOL_CONFIG_PARAMETER_LIST_KEY", "池化配置参数"),
+    DYNAMIC_THREAD_POOL_REDIS_TOPIC("DYNAMIC_THREAD_POOL_REDIS_TOPIC", "动态线程池监听主题配置");
+
+    private final String key;
+    private final String desc;
+
+    RegistryEnumVO(String key, String desc) {
+        this.key = key;
+        this.desc = desc;
+    }
+
+    public String getKey() {
+        return key;
+    }
+
+    public String getDesc() {
+        return desc;
+    }
+
+
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/IDynamicThreadPoolService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/IDynamicThreadPoolService.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/IDynamicThreadPoolService.java
new file mode 100644
--- /dev/null	(date 1732353890560)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/IDynamicThreadPoolService.java	(date 1732353890560)
@@ -0,0 +1,23 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.domain;
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+
+import java.util.List;
+
+/**
+ * @Description: 动态线程池服务
+ * @Author:bread
+ * @Date: 2024-06-03 15:39
+ */
+public interface IDynamicThreadPoolService {
+
+    //查询所有线程池的集合
+    List<ThreadPoolConfigEntity> queryThreadPoolList();
+
+    //查询单个线程池by name
+    ThreadPoolConfigEntity queryThreadPoolConfigByName(String threadPoolName);
+
+    //update
+    void updateThreadPoolConfig(ThreadPoolConfigEntity threadPoolConfigEntity);
+
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/package-info.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/package-info.java
new file mode 100644
--- /dev/null	(date 1732353890567)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/package-info.java	(date 1732353890567)
@@ -0,0 +1,4 @@
+/**
+ * 领域功能，动态线程池服务
+ */
+package cn.bread.middleware.dynamic.thread.pool.sdk.domain;
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/DynamicThreadPoolsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/DynamicThreadPoolsService.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/DynamicThreadPoolsService.java
new file mode 100644
--- /dev/null	(date 1732353890559)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/DynamicThreadPoolsService.java	(date 1732353890559)
@@ -0,0 +1,84 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.domain;
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+import com.alibaba.fastjson.JSON;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.concurrent.ThreadPoolExecutor;
+
+/**
+ * @Description:动态线程池服务
+ * @Author:bread
+ * @Date: 2024-06-03 15:46
+ */
+public class DynamicThreadPoolsService implements IDynamicThreadPoolService {
+
+
+    private final Logger logger= LoggerFactory.getLogger(DynamicThreadPoolsService.class);
+
+    private final String applicationName;
+
+    private final Map<String, ThreadPoolExecutor>threadPoolExecutorMap;
+
+    public DynamicThreadPoolsService(String applicationName, Map<String, ThreadPoolExecutor> threadPoolExecutorMap) {
+        this.applicationName = applicationName;
+        this.threadPoolExecutorMap = threadPoolExecutorMap;
+    }
+
+    @Override
+    public List<ThreadPoolConfigEntity> queryThreadPoolList() {
+        Set<String> threadPoolBeanNames = threadPoolExecutorMap.keySet();
+        List<ThreadPoolConfigEntity> threadPoolVOS = new ArrayList<>(threadPoolBeanNames.size());
+        for (String beanName : threadPoolBeanNames) {
+            ThreadPoolExecutor threadPoolExecutor = threadPoolExecutorMap.get(beanName);
+            ThreadPoolConfigEntity threadPoolConfigVO = new ThreadPoolConfigEntity(applicationName, beanName);
+            threadPoolConfigVO.setCorePoolSize(threadPoolExecutor.getCorePoolSize());
+            threadPoolConfigVO.setMaximumPoolSize(threadPoolExecutor.getMaximumPoolSize());
+            threadPoolConfigVO.setActiveCount(threadPoolExecutor.getActiveCount());
+            threadPoolConfigVO.setPoolSize(threadPoolExecutor.getPoolSize());
+            threadPoolConfigVO.setQueueType(threadPoolExecutor.getQueue().getClass().getSimpleName());
+            threadPoolConfigVO.setQueueSize(threadPoolExecutor.getQueue().size());
+            threadPoolConfigVO.setRemainingCapacity(threadPoolExecutor.getQueue().remainingCapacity());
+            threadPoolVOS.add(threadPoolConfigVO);
+        }
+        return threadPoolVOS;
+    }
+
+    @Override
+    public ThreadPoolConfigEntity queryThreadPoolConfigByName(String threadPoolName) {
+        ThreadPoolExecutor threadPoolExecutor = threadPoolExecutorMap.get(threadPoolName);
+        if (null == threadPoolExecutor) return new ThreadPoolConfigEntity(applicationName, threadPoolName);
+
+        // 线程池配置数据
+        ThreadPoolConfigEntity threadPoolConfigVO = new ThreadPoolConfigEntity(applicationName, threadPoolName);
+        threadPoolConfigVO.setCorePoolSize(threadPoolExecutor.getCorePoolSize());
+        threadPoolConfigVO.setMaximumPoolSize(threadPoolExecutor.getMaximumPoolSize());
+        threadPoolConfigVO.setActiveCount(threadPoolExecutor.getActiveCount());
+        threadPoolConfigVO.setPoolSize(threadPoolExecutor.getPoolSize());
+        threadPoolConfigVO.setQueueType(threadPoolExecutor.getQueue().getClass().getSimpleName());
+        threadPoolConfigVO.setQueueSize(threadPoolExecutor.getQueue().size());
+        threadPoolConfigVO.setRemainingCapacity(threadPoolExecutor.getQueue().remainingCapacity());
+
+        if (logger.isDebugEnabled()) {
+            logger.info("动态线程池，配置查询 应用名:{} 线程名:{} 池化配置:{}", applicationName, threadPoolName, JSON.toJSONString(threadPoolConfigVO));
+        }
+
+        return threadPoolConfigVO;
+    }
+
+    @Override
+    public void updateThreadPoolConfig(ThreadPoolConfigEntity threadPoolConfigEntity) {
+        if (null == threadPoolConfigEntity || !applicationName.equals(threadPoolConfigEntity.getAppName())) return;
+        ThreadPoolExecutor threadPoolExecutor = threadPoolExecutorMap.get(threadPoolConfigEntity.getThreadPoolName());
+        if (null == threadPoolExecutor) return;
+
+        // 设置参数 「调整核心线程数和最大线程数」
+        threadPoolExecutor.setCorePoolSize(threadPoolConfigEntity.getCorePoolSize());
+        threadPoolExecutor.setMaximumPoolSize(threadPoolConfigEntity.getMaximumPoolSize());
+    }
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"dynamic-thread-pool-test\" />\r\n        <module name=\"dynamic-thread-pool-spring-boot-starter\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel target=\"8\">\r\n      <module name=\"dynamic-thread-pool-admin\" target=\"1.8\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"dynamic-thread-pool\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-admin\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-spring-boot-starter\" options=\"-parameters\" />\r\n      <module name=\"dynamic-thread-pool-test\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/.idea/compiler.xml	(date 1732353942711)
@@ -7,12 +7,13 @@
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
         <outputRelativeToContentRoot value="true" />
-        <module name="dynamic-thread-pool-test" />
-        <module name="dynamic-thread-pool-spring-boot-starter" />
+        <module name="dynamic-thread-pool-admin" />
       </profile>
     </annotationProcessing>
     <bytecodeTargetLevel target="8">
-      <module name="dynamic-thread-pool-admin" target="1.8" />
+      <module name="dynamic-thread-pool" target="1.8" />
+      <module name="dynamic-thread-pool-spring-boot-starter" target="1.8" />
+      <module name="dynamic-thread-pool-test" target="1.8" />
     </bytecodeTargetLevel>
   </component>
   <component name="JavacSettings">
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </select>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4e729a25-7db1-4184-80c0-9444b5f5b868\" name=\"Default Changelist\" comment=\"feat:后端基本启动完成\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/log/log_error.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/log/log_error.log\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/log/log_info.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/log/log_info.log\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/pom.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/Application.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model2/entity/ThreadPoolConfigEntity.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/trigger/DynamicThreadPoolController.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/types/Response.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application-dev.yml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application-prod.yml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application-test.yml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application.yml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/logback-spring.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dynamic-thread-pool-admin/src/test/java/cn/bread/middleware/dynamic/thread/pool/test/ApiTest.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\">\r\n    <execution />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"package-info\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master2\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mianbaosao&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GitToolBoxStore\">\r\n    <option name=\"projectConfigVersion\" value=\"2\" />\r\n    <option name=\"recentBranches\">\r\n      <RecentBranches>\r\n        <option name=\"branchesForRepo\">\r\n          <list>\r\n            <RecentBranchesForRepo>\r\n              <option name=\"branches\">\r\n                <list>\r\n                  <RecentBranch>\r\n                    <option name=\"branchName\" value=\"24-11-22-bread-web\" />\r\n                    <option name=\"lastUsedInstant\" value=\"1732353711\" />\r\n                  </RecentBranch>\r\n                </list>\r\n              </option>\r\n              <option name=\"repositoryRootUrl\" value=\"file://$PROJECT_DIR$\" />\r\n            </RecentBranchesForRepo>\r\n          </list>\r\n        </option>\r\n      </RecentBranches>\r\n    </option>\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/mianbaosao/dynamic-thread-pool.git&quot;,\r\n    &quot;accountId&quot;: &quot;df11d691-928b-4b2d-8ffd-33c448a17eca&quot;\r\n  }\r\n}</component>\r\n  <component name=\"KubernetesApiPersistence\">{}</component>\r\n  <component name=\"KubernetesApiProvider\">{\r\n  &quot;isMigrated&quot;: true\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2h0GUxVpaT6wQkg9hp0Kt2zpnR7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.DynamicThreadPoolTestApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.DynamicThreadPoolTestApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.dynamic-thread-pool [install,--projects...].executor&quot;: &quot;Run&quot;,\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;24-11-22-bread-web&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;E:/dynamic-thread-pool-master (3)/dynamic-thread-pool/dynamic-thread-pool/dynamic-thread-pool-test/src/main/java/cn/bread&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.runner&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ReactorSettings\">\r\n    <option name=\"notificationShown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\dynamic-thread-pool-master (3)\\dynamic-thread-pool\\dynamic-thread-pool\\dynamic-thread-pool-test\\src\\main\\java\\cn\\bread\" />\r\n      <recent name=\"E:\\dynamic-thread-pool-master (3)\\dynamic-thread-pool\\dynamic-thread-pool\\dynamic-thread-pool-spring-boot-starter\\src\\main\\java\\cn\\bread\\middleware\\dynamic\\thread\\pool\\sdk\" />\r\n      <recent name=\"E:\\dynamic-thread-pool-master (3)\\dynamic-thread-pool\\dynamic-thread-pool\\dynamic-thread-pool-spring-boot-starter\\src\\main\\java\\cn\\bread\\middleware\\dynamic\\thread\\pool\\sdk\\config\\properties\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\" />\r\n      <recent name=\"E:\\Component-peoject\\dynamic-thread-pool\\dynamic-thread-pool-admin\\src\\main\\java\\cn\\bread\\middleware\\dynamic\\thread\\pool\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.sdk.config\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.test.types\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.test.sdk.domain.model.entity\" />\r\n      <recent name=\"test\" />\r\n      <recent name=\"cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"KtorApplicationConfigurationType\" />\r\n        <option value=\"MicronautRunConfigurationType\" />\r\n        <option value=\"QuarkusRunConfigurationType\" />\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.DynamicThreadPoolTestApplication\">\r\n    <configuration name=\"DynamicThreadPoolTestApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.DynamicThreadPoolTestApplication\" />\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ApiTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"cn.bread.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.test.ApiTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ApiTest.test_dynamicThreadPoolRedisTopic\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"cn.bread.test\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cn.bread.test.ApiTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"test_dynamicThreadPoolRedisTopic\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Application (1)\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-admin\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.middleware.dynamic.thread.pool.Application\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"cn.bread.middleware.dynamic.thread.pool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Application\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.Application\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DynamicThreadPoolTestApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"dynamic-thread-pool-test\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"cn.bread.DynamicThreadPoolTestApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.DynamicThreadPoolTestApplication\" />\r\n      <item itemvalue=\"JUnit.ApiTest\" />\r\n      <item itemvalue=\"JUnit.ApiTest.test_dynamicThreadPoolRedisTopic\" />\r\n      <item itemvalue=\"Spring Boot.Application\" />\r\n      <item itemvalue=\"Spring Boot.DynamicThreadPoolTestApplication\" />\r\n      <item itemvalue=\"Spring Boot.Application (1)\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.DynamicThreadPoolTestApplication\" />\r\n        <item itemvalue=\"Spring Boot.Application (1)\" />\r\n        <item itemvalue=\"JUnit.ApiTest.test_dynamicThreadPoolRedisTopic\" />\r\n        <item itemvalue=\"JUnit.ApiTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4e729a25-7db1-4184-80c0-9444b5f5b868\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1716723600294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716723600294</updated>\r\n      <workItem from=\"1716723603796\" duration=\"15940000\" />\r\n      <workItem from=\"1717066837383\" duration=\"3956000\" />\r\n      <workItem from=\"1717114908921\" duration=\"1182000\" />\r\n      <workItem from=\"1717399322456\" duration=\"13244000\" />\r\n      <workItem from=\"1717493633112\" duration=\"10775000\" />\r\n      <workItem from=\"1717570209620\" duration=\"7861000\" />\r\n      <workItem from=\"1717724978032\" duration=\"2268000\" />\r\n      <workItem from=\"1732159001509\" duration=\"5459000\" />\r\n      <workItem from=\"1732191309845\" duration=\"34000\" />\r\n      <workItem from=\"1732198613722\" duration=\"15073000\" />\r\n      <workItem from=\"1732277487793\" duration=\"741000\" />\r\n      <workItem from=\"1732351776515\" duration=\"1658000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"搭建组件工程\">\r\n      <created>1716725336721</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716725336721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"redis搭建注册中心\">\r\n      <created>1717420956765</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717420956765</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"订阅发布消息，提供接口\">\r\n      <created>1717726274982</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717726274982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"feat:修正完毕\">\r\n      <created>1732159118118</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732159118118</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"feat:后端基本启动完成\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732353249460</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732353249460</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"24-11-22-bread-web\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"搭建组件工程\" />\r\n    <MESSAGE value=\"redis搭建注册中心\" />\r\n    <MESSAGE value=\"订阅发布消息，提供接口\" />\r\n    <MESSAGE value=\"feat:修正完毕\" />\r\n    <MESSAGE value=\"feat:后端基本启动完成\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat:后端基本启动完成\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/dynamic_thread_pool$Application.ic\" NAME=\"Application Coverage Results\" MODIFIED=\"1717504710925\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/dynamic_thread_pool$ApiTest_test_dynamicThreadPoolRedisTopic.ic\" NAME=\"ApiTest.test_dynamicThreadPoolRedisTopic Coverage Results\" MODIFIED=\"1717502748220\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>cn.bread.test.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/.idea/workspace.xml	(date 1732353942675)
@@ -18,22 +18,7 @@
     </select>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="4e729a25-7db1-4184-80c0-9444b5f5b868" name="Default Changelist" comment="feat:后端基本启动完成">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/log/log_error.log" beforeDir="false" afterPath="$PROJECT_DIR$/data/log/log_error.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/log/log_info.log" beforeDir="false" afterPath="$PROJECT_DIR$/data/log/log_info.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/pom.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/Application.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model2/entity/ThreadPoolConfigEntity.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/trigger/DynamicThreadPoolController.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/types/Response.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application-dev.yml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application-prod.yml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application-test.yml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/application.yml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/main/resources/logback-spring.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/dynamic-thread-pool-admin/src/test/java/cn/bread/middleware/dynamic/thread/pool/test/ApiTest.java" beforeDir="false" />
-    </list>
+    <list default="true" id="4e729a25-7db1-4184-80c0-9444b5f5b868" name="Default Changelist" comment="fix:修改冲突类" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -58,8 +43,6 @@
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="RESET_MODE" value="MIXED" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
   &quot;lastFilter&quot;: {
@@ -78,7 +61,7 @@
                 <list>
                   <RecentBranch>
                     <option name="branchName" value="24-11-22-bread-web" />
-                    <option name="lastUsedInstant" value="1732353711" />
+                    <option name="lastUsedInstant" value="1732278343" />
                   </RecentBranch>
                 </list>
               </option>
@@ -95,10 +78,16 @@
     &quot;accountId&quot;: &quot;df11d691-928b-4b2d-8ffd-33c448a17eca&quot;
   }
 }</component>
-  <component name="KubernetesApiPersistence">{}</component>
-  <component name="KubernetesApiProvider">{
-  &quot;isMigrated&quot;: true
-}</component>
+  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
+  <component name="KubernetesApiProvider"><![CDATA[{
+  "isMigrated": true
+}]]></component>
+  <component name="MavenRunner">
+    <option name="delegateBuildToMaven" value="true" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
+  </component>
   <component name="ProjectColorInfo">{
   &quot;customColor&quot;: &quot;&quot;,
   &quot;associatedIndex&quot;: 5
@@ -113,27 +102,16 @@
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
-    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;Application.DynamicThreadPoolTestApplication.executor&quot;: &quot;Run&quot;,
-    &quot;Maven.DynamicThreadPoolTestApplication.executor&quot;: &quot;Run&quot;,
-    &quot;Maven.dynamic-thread-pool [install,--projects...].executor&quot;: &quot;Run&quot;,
-    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
-    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
-    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
-    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
     &quot;git-widget-placeholder&quot;: &quot;24-11-22-bread-web&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;E:/dynamic-thread-pool-master (3)/dynamic-thread-pool/dynamic-thread-pool/dynamic-thread-pool-test/src/main/java/cn/bread&quot;,
+    &quot;last_opened_file_path&quot;: &quot;E:/dynamic-thread-pool-master (3)/dynamic-thread-pool/dynamic-thread-pool/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.runner&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
@@ -142,11 +120,11 @@
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
-      <recent name="E:\dynamic-thread-pool-master (3)\dynamic-thread-pool\dynamic-thread-pool\dynamic-thread-pool-test\src\main\java\cn\bread" />
       <recent name="E:\dynamic-thread-pool-master (3)\dynamic-thread-pool\dynamic-thread-pool\dynamic-thread-pool-spring-boot-starter\src\main\java\cn\bread\middleware\dynamic\thread\pool\sdk" />
       <recent name="E:\dynamic-thread-pool-master (3)\dynamic-thread-pool\dynamic-thread-pool\dynamic-thread-pool-spring-boot-starter\src\main\java\cn\bread\middleware\dynamic\thread\pool\sdk\config\properties" />
       <recent name="E:\Component-peoject\dynamic-thread-pool" />
       <recent name="E:\Component-peoject\dynamic-thread-pool\dynamic-thread-pool-admin\src\main\java\cn\bread\middleware\dynamic\thread\pool" />
+      <recent name="E:\Component-peoject\dynamic-thread-pool\dynamic-thread-pool-admin\src\main\resources" />
     </key>
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
       <recent name="cn.bread.middleware.dynamic.thread.pool" />
@@ -159,30 +137,7 @@
       <recent name="cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj" />
     </key>
   </component>
-  <component name="RunDashboard">
-    <option name="configurationTypes">
-      <set>
-        <option value="KtorApplicationConfigurationType" />
-        <option value="MicronautRunConfigurationType" />
-        <option value="QuarkusRunConfigurationType" />
-        <option value="SpringBootApplicationConfigurationType" />
-      </set>
-    </option>
-  </component>
-  <component name="RunManager" selected="Application.DynamicThreadPoolTestApplication">
-    <configuration name="DynamicThreadPoolTestApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="cn.bread.DynamicThreadPoolTestApplication" />
-      <module name="dynamic-thread-pool-test" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="cn.bread.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
+  <component name="RunManager" selected="Spring Boot.Application">
     <configuration name="ApiTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="dynamic-thread-pool-test" />
       <extension name="coverage">
@@ -230,28 +185,18 @@
     <configuration name="Application" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
       <module name="dynamic-thread-pool-test" />
       <option name="SPRING_BOOT_MAIN_CLASS" value="cn.bread.Application" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="DynamicThreadPoolTestApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
-      <module name="dynamic-thread-pool-test" />
-      <option name="SPRING_BOOT_MAIN_CLASS" value="cn.bread.DynamicThreadPoolTestApplication" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
     <list>
-      <item itemvalue="Application.DynamicThreadPoolTestApplication" />
       <item itemvalue="JUnit.ApiTest" />
       <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
       <item itemvalue="Spring Boot.Application" />
-      <item itemvalue="Spring Boot.DynamicThreadPoolTestApplication" />
       <item itemvalue="Spring Boot.Application (1)" />
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.DynamicThreadPoolTestApplication" />
         <item itemvalue="Spring Boot.Application (1)" />
         <item itemvalue="JUnit.ApiTest.test_dynamicThreadPoolRedisTopic" />
         <item itemvalue="JUnit.ApiTest" />
@@ -288,7 +233,6 @@
       <workItem from="1732191309845" duration="34000" />
       <workItem from="1732198613722" duration="15073000" />
       <workItem from="1732277487793" duration="741000" />
-      <workItem from="1732351776515" duration="1658000" />
     </task>
     <task id="LOCAL-00001" summary="搭建组件工程">
       <created>1716725336721</created>
@@ -318,15 +262,7 @@
       <option name="project" value="LOCAL" />
       <updated>1732159118118</updated>
     </task>
-    <task id="LOCAL-00005" summary="feat:后端基本启动完成">
-      <option name="closed" value="true" />
-      <created>1732353249460</created>
-      <option name="number" value="00005" />
-      <option name="presentableId" value="LOCAL-00005" />
-      <option name="project" value="LOCAL" />
-      <updated>1732353249460</updated>
-    </task>
-    <option name="localTasksCounter" value="6" />
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -337,19 +273,7 @@
       <map>
         <entry key="MAIN">
           <value>
-            <State>
-              <option name="FILTERS">
-                <map>
-                  <entry key="branch">
-                    <value>
-                      <list>
-                        <option value="24-11-22-bread-web" />
-                      </list>
-                    </value>
-                  </entry>
-                </map>
-              </option>
-            </State>
+            <State />
           </value>
         </entry>
       </map>
@@ -361,8 +285,7 @@
     <MESSAGE value="redis搭建注册中心" />
     <MESSAGE value="订阅发布消息，提供接口" />
     <MESSAGE value="feat:修正完毕" />
-    <MESSAGE value="feat:后端基本启动完成" />
-    <option name="LAST_COMMIT_MESSAGE" value="feat:后端基本启动完成" />
+    <option name="LAST_COMMIT_MESSAGE" value="feat:修正完毕" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/dynamic_thread_pool$Application.ic" NAME="Application Coverage Results" MODIFIED="1717504710925" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/IRegistry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/IRegistry.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/IRegistry.java
new file mode 100644
--- /dev/null	(date 1732353890641)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/IRegistry.java	(date 1732353890641)
@@ -0,0 +1,21 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.registry;
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+
+import java.util.List;
+
+/**
+ * @Description:  注册中心接口
+ * @Author:bread
+ * @Date: 2024-06-03 19:21
+ */
+public interface IRegistry {
+
+    void reportThreadPool(List<ThreadPoolConfigEntity> threadPoolEntities);
+
+    /**
+     * 上报配置参数
+     * @param threadPoolConfigEntity
+     */
+    void reportThreadPoolConfigParameter(ThreadPoolConfigEntity threadPoolConfigEntity);
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/package-info.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/package-info.java
new file mode 100644
--- /dev/null	(date 1732353890643)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/package-info.java	(date 1732353890643)
@@ -0,0 +1,6 @@
+/**
+ * @Description: 注册中心
+ * @Author:bread
+ * @Date: 2024-05-26 20:02
+ */
+package cn.bread.middleware.dynamic.thread.pool.sdk.registry;
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener;\r\n\r\n\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.redisson.api.listener.MessageListener;\r\n\r\nimport java.util.List;\r\n\r\n@Slf4j\r\n@AllArgsConstructor\r\npublic class ThreadPoolConfigAdjustListener implements MessageListener<UpdateThreadPoolConfigDTO> {\r\n\r\n    private IDynamicThreadPoolService dynamicThreadPoolService;\r\n\r\n    private IRegistry registry;\r\n\r\n    @Override\r\n    public void onMessage(CharSequence charSequence, UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO) {\r\n        Boolean success = dynamicThreadPoolService.updateThreadPoolConfig(updateThreadPoolConfigDTO);\r\n        if (!success) {\r\n            log.warn(\"动态线程池, 配置变更结果: {}, 配置参数: {}\", success, updateThreadPoolConfigDTO);\r\n        }\r\n        log.info(\"动态线程池, 配置变更结果: {}, 配置参数: {}\", success, updateThreadPoolConfigDTO);\r\n\r\n        List<ThreadPoolConfigEntity> threadPoolConfigEntities = dynamicThreadPoolService.queryThreadPoolList();\r\n        registry.reportThreadPool(threadPoolConfigEntities);\r\n        log.info(\"动态线程池, 上报线程池信息: {}\", threadPoolConfigEntities);\r\n\r\n        UpdateThreadPoolConfigDTO updateThreadPoolConfigDTOCurrent = UpdateThreadPoolConfigDTO.buildUpdateThreadPoolConfigDTO(\r\n                dynamicThreadPoolService.queryThreadPoolByName(\r\n                        updateThreadPoolConfigDTO.getThreadPoolName()\r\n                )\r\n        );\r\n        registry.reportUpdateThreadPoolConfigParameter(\r\n                updateThreadPoolConfigDTO\r\n        );\r\n        log.info(\"动态线程池, 上报配置参数: {}\", updateThreadPoolConfigDTOCurrent);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/listener/ThreadPoolConfigAdjustListener.java	(date 1732353890684)
@@ -1,44 +1,48 @@
 package cn.bread.middleware.dynamic.thread.pool.sdk.trigger.listener;
 
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.IDynamicThreadPoolService;
 import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;
-import lombok.AllArgsConstructor;
-import lombok.extern.slf4j.Slf4j;
+import cn.bread.middleware.dynamic.thread.pool.sdk.registry.IRegistry;
+import com.alibaba.fastjson.JSON;
 import org.redisson.api.listener.MessageListener;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.util.List;
 
-@Slf4j
-@AllArgsConstructor
-public class ThreadPoolConfigAdjustListener implements MessageListener<UpdateThreadPoolConfigDTO> {
+
+/**
+ * @Description: 动态线程池变更监听
+ * @Author:bread
+ * @Date: 2024-06-04 17:50
+ */
+public class ThreadPoolConfigAdjustListener implements MessageListener<ThreadPoolConfigEntity> {
 
-    private IDynamicThreadPoolService dynamicThreadPoolService;
+    private Logger logger = LoggerFactory.getLogger(ThreadPoolConfigAdjustListener.class);
 
-    private IRegistry registry;
+    private final IDynamicThreadPoolService dynamicThreadPoolService;
 
+    private final IRegistry registry;
+
+    public ThreadPoolConfigAdjustListener(IDynamicThreadPoolService dynamicThreadPoolService, IRegistry registry) {
+        this.dynamicThreadPoolService = dynamicThreadPoolService;
+        this.registry = registry;
+    }
+
+    //CharSequence 它通常是为了接收和操作字符串或字符序列的一种泛型方式，方便处理多种不同类型的字符数据
     @Override
-    public void onMessage(CharSequence charSequence, UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO) {
-        Boolean success = dynamicThreadPoolService.updateThreadPoolConfig(updateThreadPoolConfigDTO);
-        if (!success) {
-            log.warn("动态线程池, 配置变更结果: {}, 配置参数: {}", success, updateThreadPoolConfigDTO);
-        }
-        log.info("动态线程池, 配置变更结果: {}, 配置参数: {}", success, updateThreadPoolConfigDTO);
+    public void onMessage(CharSequence charSequence, ThreadPoolConfigEntity threadPoolConfigEntity) {
+        logger.info("动态线程池，调整线程池配置。线程池名称:{} 核心线程数:{} 最大线程数:{}",
+                threadPoolConfigEntity.getThreadPoolName(),threadPoolConfigEntity.getPoolSize(), threadPoolConfigEntity.getMaximumPoolSize());
+        dynamicThreadPoolService.updateThreadPoolConfig(threadPoolConfigEntity);
 
+        // 更新后上报最新数据
         List<ThreadPoolConfigEntity> threadPoolConfigEntities = dynamicThreadPoolService.queryThreadPoolList();
         registry.reportThreadPool(threadPoolConfigEntities);
-        log.info("动态线程池, 上报线程池信息: {}", threadPoolConfigEntities);
 
-        UpdateThreadPoolConfigDTO updateThreadPoolConfigDTOCurrent = UpdateThreadPoolConfigDTO.buildUpdateThreadPoolConfigDTO(
-                dynamicThreadPoolService.queryThreadPoolByName(
-                        updateThreadPoolConfigDTO.getThreadPoolName()
-                )
-        );
-        registry.reportUpdateThreadPoolConfigParameter(
-                updateThreadPoolConfigDTO
-        );
-        log.info("动态线程池, 上报配置参数: {}", updateThreadPoolConfigDTOCurrent);
+        ThreadPoolConfigEntity threadPoolConfigEntityCurrent = dynamicThreadPoolService.queryThreadPoolConfigByName(threadPoolConfigEntity.getThreadPoolName());
+        registry.reportThreadPoolConfigParameter(threadPoolConfigEntityCurrent);
+        logger.info("动态线程池，上报线程池配置：{}", JSON.toJSONString(threadPoolConfigEntity));
     }
-}
+
+}
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java
new file mode 100644
--- /dev/null	(date 1732353890646)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/registry/redis/RedisRegistry.java	(date 1732353890646)
@@ -0,0 +1,40 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.registry.redis;
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.valobj.RegistryEnumVO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.registry.IRegistry;
+import org.redisson.api.RBucket;
+import org.redisson.api.RList;
+import org.redisson.api.RedissonClient;
+
+import java.time.Duration;
+import java.util.List;
+
+/**
+ * @Description: Redis 注册中心
+ * @Author:bread
+ * @Date: 2024-06-03 19:23
+ */
+public class RedisRegistry implements IRegistry {
+
+    private final RedissonClient redissonClient;
+
+    public RedisRegistry(RedissonClient redissonClient) {
+        this.redissonClient = redissonClient;
+    }
+
+
+    @Override
+    public void reportThreadPool(List<ThreadPoolConfigEntity> threadPoolEntities) {
+        RList<ThreadPoolConfigEntity> list = redissonClient.getList(RegistryEnumVO.THREAD_POOL_CONFIG_LIST_KEY.getKey());
+        list.delete();
+        list.addAll(threadPoolEntities);
+    }
+
+    @Override
+    public void reportThreadPoolConfigParameter(ThreadPoolConfigEntity threadPoolConfigEntity) {
+        String cacheKey = RegistryEnumVO.THREAD_POOL_CONFIG_PARAMETER_LIST_KEY.getKey() + "_" + threadPoolConfigEntity.getAppName() + "_" + threadPoolConfigEntity.getThreadPoolName();
+        RBucket<ThreadPoolConfigEntity> bucket = redissonClient.getBucket(cacheKey);
+        bucket.set(threadPoolConfigEntity, Duration.ofDays(30));
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/RegistryEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/RegistryEnum.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/RegistryEnum.java
new file mode 100644
--- /dev/null	(date 1732353890614)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/RegistryEnum.java	(date 1732353890614)
@@ -0,0 +1,22 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.enums;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+/**
+ * 注册中心枚举值对象
+ */
+
+@Getter
+@AllArgsConstructor
+public enum RegistryEnum {
+
+    THREAD_POOL_CONFIG_LIST_KEY("THREAD_POOL_CONFIG_LIST_KEY", "线程池配置列表"),
+    THREAD_POOL_CONFIG_PARAMETER_LIST_KEY("THREAD_POOL_CONFIG_PARAMETER_LIST_KEY", "线程池配置参数列表"),
+    DYNAMIC_THREAD_POOL_ADJUST_REDIS_TOPIC_KEY("DYNAMIC_THREAD_POOL_ADJUST_REDIS_TOPIC_KEY", "动态线程池REDIS主题配置"),
+    DYNAMIC_THREAD_POOL_REFRESH_REDIS_TOPIC_KEY("DYNAMIC_THREAD_POOL_REFRESH_REDIS_TOPIC_KEY", "动态线程池REDIS主题配置"),
+    REPORT_THREAD_POOL_CONFIG_LIST_REDIS_LOCK_KEY("REPORT_THREAD_POOL_CONFIG_LIST_REDIS_LOCK_KEY", "锁");
+
+    private final String key;
+    private final String description;
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/entity/ThreadPoolConfigEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/entity/ThreadPoolConfigEntity.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/entity/ThreadPoolConfigEntity.java
new file mode 100644
--- /dev/null	(date 1732353890608)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/entity/ThreadPoolConfigEntity.java	(date 1732353890608)
@@ -0,0 +1,61 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.entity;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.util.concurrent.ThreadPoolExecutor;
+
+/**
+ * 线程池配置对象
+ */
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class ThreadPoolConfigEntity {
+
+    /** 应用名称 */
+    private String applicationName;
+    /** 线程池名称 */
+    private String threadPoolName;
+    /** 核心线程数 */
+    private Integer corePoolSize;
+    /** 最大线程数 */
+    private Integer maximumPoolSize;
+    /** 当前活跃线程数 */
+    private Integer activeThreadCount;
+    /** 池中线程数 */
+    private int poolSize;
+    /** 队列类型 */
+    private String queueType;
+    /** 队列中任务数 */
+    private Integer queueSize;
+    /** 队列剩余的任务数 */
+    private Integer remainingCapacity;
+
+    /**
+     * 建造一个线程池配置对象
+     * @param applicationName 应用名
+     * @param threadPoolName 线程池名
+     * @param executor 线程池执行器对象
+     * @return 线程池配置对象
+     */
+    public static ThreadPoolConfigEntity buildThreadPoolConfigEntity(
+            String applicationName,
+            String threadPoolName,
+            ThreadPoolExecutor executor) {
+
+        return new ThreadPoolConfigEntity(
+                applicationName,
+                threadPoolName,
+                executor.getCorePoolSize(),
+                executor.getMaximumPoolSize(),
+                executor.getActiveCount(),
+                executor.getPoolSize(),
+                executor.getQueue().getClass().getSimpleName(),
+                executor.getQueue().size(),
+                executor.getQueue().remainingCapacity()
+        );
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/package-info.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/package-info.java
new file mode 100644
--- /dev/null	(date 1732353890557)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/package-info.java	(date 1732353890557)
@@ -0,0 +1,6 @@
+/**
+ * @Description: outo config 配置入口
+ * @Author:bread
+ * @Date: 2024-05-26 20:03
+ */
+package cn.bread.middleware.dynamic.thread.pool.sdk.config;
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoProperties.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoProperties.java
new file mode 100644
--- /dev/null	(date 1732353890554)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolAutoProperties.java	(date 1732353890554)
@@ -0,0 +1,43 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.config;
+
+import lombok.Data;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+/**
+ * @Description: 动态线程池的配置
+ * @Author:bread
+ * @Date: 2024-06-03 19:26
+ */
+
+@ConfigurationProperties(prefix = "dynamic.thread.pool.config", ignoreInvalidFields = true)
+@Data
+public class DynamicThreadPoolAutoProperties {
+
+    /** 状态；open = 开启、close 关闭 */
+    private boolean enable;
+    /** redis host */
+    private String host;
+    /** redis port */
+    private int port;
+    /** 账密 */
+    private String password;
+    /** 设置连接池的大小，默认为64 */
+    private int poolSize = 64;
+    /** 设置连接池的最小空闲连接数，默认为10 */
+    private int minIdleSize = 10;
+    /** 设置连接的最大空闲时间（单位：毫秒），超过该时间的空闲连接将被关闭，默认为10000 */
+    private int idleTimeout = 10000;
+    /** 设置连接超时时间（单位：毫秒），默认为10000 */
+    private int connectTimeout = 10000;
+    /** 设置连接重试次数，默认为3 */
+    private int retryAttempts = 3;
+    /** 设置连接重试的间隔时间（单位：毫秒），默认为1000 */
+    private int retryInterval = 1000;
+    /** 设置定期检查连接是否可用的时间间隔（单位：毫秒），默认为0，表示不进行定期检查 */
+    private int pingInterval = 0;
+    /** 设置是否保持长连接，默认为true */
+    private boolean keepAlive = true;
+
+
+}
+
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/.idea/misc.xml	(date 1732353942687)
@@ -1,12 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" default="true" />
 </project>
\ No newline at end of file
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolWebAutoConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.middleware.dynamic.thread.pool.sdk.config;\r\n\r\n\r\n\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.config.FrontendConfig;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller.AuthController;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller.SettingsController;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller.ThreadPoolController;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.exception.DynamicThreadPoolWebGlobalExceptionHandler;\r\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\r\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@ConditionalOnProperty(prefix = \"dynamic-thread-pool.web\", name = \"enabled\", havingValue = \"true\")\r\n@EnableConfigurationProperties(DynamicThreadPoolWebAutoProperties.class)\r\npublic class DynamicThreadPoolWebAutoConfig {\r\n\r\n    @Bean\r\n    public FrontendConfig dynamicThreadPoolStaticConfig(\r\n            DynamicThreadPoolWebAutoProperties dynamicThreadPoolWebAutoProperties\r\n    ) {\r\n        return new FrontendConfig(dynamicThreadPoolWebAutoProperties);\r\n    }\r\n\r\n//    @Bean\r\n    public AuthController dynamicThreadPoolAuthController() {\r\n        return new AuthController();\r\n    }\r\n\r\n//    @Bean\r\n    public ThreadPoolController dynamicThreadPoolThreadPoolController() {\r\n        return new ThreadPoolController();\r\n    }\r\n\r\n//    @Bean\r\n    public SettingsController dynamicThreadPoolSettingsController() {\r\n        return new SettingsController();\r\n    }\r\n\r\n    @Bean\r\n    public DynamicThreadPoolWebGlobalExceptionHandler dynamicThreadPoolWebGlobalExceptionHandler() {\r\n        return new DynamicThreadPoolWebGlobalExceptionHandler();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolWebAutoConfig.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolWebAutoConfig.java
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolWebAutoConfig.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/config/DynamicThreadPoolWebAutoConfig.java	(date 1732353890556)
@@ -3,11 +3,11 @@
 
 
 import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolWebAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.config.FrontendConfig;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller.AuthController;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller.SettingsController;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.controller.ThreadPoolController;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.web.exception.DynamicThreadPoolWebGlobalExceptionHandler;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.config.FrontendConfig;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.controller.AuthController;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.controller.SettingsController;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.controller.ThreadPoolController;
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.exception.DynamicThreadPoolWebGlobalExceptionHandler;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
@@ -23,17 +23,17 @@
         return new FrontendConfig(dynamicThreadPoolWebAutoProperties);
     }
 
-//    @Bean
+    @Bean
     public AuthController dynamicThreadPoolAuthController() {
         return new AuthController();
     }
 
-//    @Bean
+    @Bean
     public ThreadPoolController dynamicThreadPoolThreadPoolController() {
         return new ThreadPoolController();
     }
 
-//    @Bean
+    @Bean
     public SettingsController dynamicThreadPoolSettingsController() {
         return new SettingsController();
     }
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/ResponseVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/ResponseVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/ResponseVO.java
new file mode 100644
--- /dev/null	(date 1732353890781)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/ResponseVO.java	(date 1732353890781)
@@ -0,0 +1,46 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.web.model.enums.ResponseEnum;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.io.Serializable;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class ResponseVO <T> implements Serializable {
+
+    private Integer status;
+    private String message;
+    private String description;
+    private T data;
+
+    public static <T> ResponseVO<T> success(T data) {
+        return ResponseVO.success(data, "");
+    }
+
+    public static <T> ResponseVO<T> success(T data, String description) {
+        return new ResponseVO<>(
+                ResponseEnum.SUCCESS.getStatus(),
+                ResponseEnum.SUCCESS.getMessage(),
+                description,
+                data
+        );
+    }
+
+    public static <T> ResponseVO<T> failed(ResponseEnum responseEnum) {
+        return ResponseVO.failed(responseEnum, "");
+    }
+
+    public static <T> ResponseVO<T> failed(ResponseEnum responseEnum, String description) {
+        return new ResponseVO<>(
+                responseEnum.getStatus(),
+                responseEnum.getMessage(),
+                description,
+                null
+        );
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/SettingsVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/SettingsVO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/SettingsVO.java
new file mode 100644
--- /dev/null	(date 1732353890783)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/vo/SettingsVO.java	(date 1732353890783)
@@ -0,0 +1,16 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.model.vo;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.io.Serializable;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class SettingsVO implements Serializable {
+
+    private String apiContextPath;
+    private String grafanaDashboardUrl;
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/dto/LoginDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/dto/LoginDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/dto/LoginDTO.java
new file mode 100644
--- /dev/null	(date 1732353890773)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/dto/LoginDTO.java	(date 1732353890773)
@@ -0,0 +1,12 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.model.dto;
+
+import lombok.Data;
+
+import java.io.Serializable;
+
+@Data
+public class LoginDTO implements Serializable {
+
+    private String username;
+    private String password;
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/enums/ResponseEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/enums/ResponseEnum.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/enums/ResponseEnum.java
new file mode 100644
--- /dev/null	(date 1732353890775)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/web/model/enums/ResponseEnum.java	(date 1732353890775)
@@ -0,0 +1,17 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.web.model.enums;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+@Getter
+@AllArgsConstructor
+public enum ResponseEnum {
+    SUCCESS(200, "操作成功"),
+    FAILED(400, "操作失败"),
+    NO_AUTH(401, "无权限"),
+    NOT_FOUNT(404, "未找到"),
+    SYSTEM_ERROR(500, "系统错误");
+
+    private final Integer status;
+    private final String message;
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/ApplicationUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/ApplicationUtils.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/ApplicationUtils.java
new file mode 100644
--- /dev/null	(date 1732353890689)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/ApplicationUtils.java	(date 1732353890689)
@@ -0,0 +1,9 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.utils;
+
+import org.springframework.context.ApplicationContext;
+
+public class ApplicationUtils {
+    public static String getApplicationName(ApplicationContext applicationContext) {
+        return applicationContext.getEnvironment().getProperty("spring.application.name");
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/RedisUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/RedisUtils.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/RedisUtils.java
new file mode 100644
--- /dev/null	(date 1732353890703)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/utils/RedisUtils.java	(date 1732353890703)
@@ -0,0 +1,78 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.utils;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+import org.redisson.api.RBucket;
+import org.redisson.api.RList;
+import org.redisson.api.RedissonClient;
+
+import java.time.Duration;
+import java.util.Objects;
+
+/**
+ * Redis操作工具类
+ */
+public class RedisUtils {
+    public static UpdateThreadPoolConfigDTO getUpdateThreadPoolConfigDTO(
+            RedissonClient redissonClient,
+            String applicationName,
+            String poolName ) {
+        return getUpdateThreadPoolConfigDTOBucket(
+                redissonClient,
+                applicationName,
+                poolName
+        ).get();
+    }
+
+    public static void setUpdateThreadPoolConfigDTO(
+            RedissonClient redissonClient,
+            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO ) {
+        RBucket<UpdateThreadPoolConfigDTO> updateThreadPoolConfigDTOBucket = getUpdateThreadPoolConfigDTOBucket(
+                redissonClient,
+                updateThreadPoolConfigDTO.getApplicationName(),
+                updateThreadPoolConfigDTO.getThreadPoolName()
+        );
+
+        updateThreadPoolConfigDTOBucket.set(
+                updateThreadPoolConfigDTO,
+                Duration.ofDays(30)
+        );
+    }
+
+    public static RList<ThreadPoolConfigEntity> getPoolConfigRList(RedissonClient redissonClient) {
+        return redissonClient.getList(RegistryEnum.THREAD_POOL_CONFIG_LIST_KEY.getKey());
+    }
+
+    public static ThreadPoolConfigEntity getPoolConfigByPoolName(RedissonClient redissonClient, String poolName) {
+        RList<ThreadPoolConfigEntity> threadPoolConfigEntities = redissonClient.getList(
+                RegistryEnum.THREAD_POOL_CONFIG_LIST_KEY.getKey()
+        );
+        for (ThreadPoolConfigEntity threadPoolConfigEntity : threadPoolConfigEntities) {
+            if (Objects.equals(threadPoolConfigEntity.getThreadPoolName(), poolName)) {
+                return threadPoolConfigEntity;
+            }
+        }
+        return null;
+    }
+
+    private static RBucket<UpdateThreadPoolConfigDTO> getUpdateThreadPoolConfigDTOBucket(
+            RedissonClient redissonClient,
+            String applicationName,
+            String poolName) {
+        return redissonClient.getBucket(
+                buildRedisKey(
+                        applicationName,
+                        poolName
+                )
+        );
+    }
+
+    private static String buildRedisKey(String applicationName, String poolName) {
+        return String.format(
+                "%s_%s_%s",
+                RegistryEnum.THREAD_POOL_CONFIG_PARAMETER_LIST_KEY.getKey(),
+                applicationName,
+                poolName
+        );
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/AlarmMessageDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/AlarmMessageDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/AlarmMessageDTO.java
new file mode 100644
--- /dev/null	(date 1732353890570)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/AlarmMessageDTO.java	(date 1732353890570)
@@ -0,0 +1,57 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.dto;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.util.LinkedHashMap;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class AlarmMessageDTO {
+    private String message;
+    private LinkedHashMap<String, String> parameters;
+    private String remarks;
+
+    public static AlarmMessageDTO buildAlarmMessageDTO(
+            String message,
+            LinkedHashMap<String, String > parameters,
+            String remarks
+    ) {
+        return new AlarmMessageDTO(
+                message,
+                parameters,
+                remarks
+        );
+    }
+
+    public static AlarmMessageDTO buildAlarmMessageDTO(
+            String message,
+            String remarks
+    ) {
+        return AlarmMessageDTO.buildAlarmMessageDTO(
+                message,
+                new LinkedHashMap<>(),
+                remarks
+        );
+    }
+
+    public static AlarmMessageDTO buildAlarmMessageDTO(
+            String message
+    ) {
+        return AlarmMessageDTO.buildAlarmMessageDTO(
+                message,
+                new LinkedHashMap<>(),
+                null
+        );
+    }
+
+    public <T> AlarmMessageDTO appendParameter(String k, T v) {
+        parameters.put(
+                k,
+                v.toString()
+        );
+        return this;
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/RefreshThreadPoolConfigDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/RefreshThreadPoolConfigDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/RefreshThreadPoolConfigDTO.java
new file mode 100644
--- /dev/null	(date 1732353890571)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/RefreshThreadPoolConfigDTO.java	(date 1732353890571)
@@ -0,0 +1,4 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.dto;
+
+public class RefreshThreadPoolConfigDTO {
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/UpdateThreadPoolConfigDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/UpdateThreadPoolConfigDTO.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/UpdateThreadPoolConfigDTO.java
new file mode 100644
--- /dev/null	(date 1732353890573)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/dto/UpdateThreadPoolConfigDTO.java	(date 1732353890573)
@@ -0,0 +1,29 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.dto;
+
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.model.entity.ThreadPoolConfigEntity;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class UpdateThreadPoolConfigDTO {
+    private String applicationName;
+    private String threadPoolName;
+    private Integer corePoolSize;
+    private Integer maximumPoolSize;
+    private Integer queueCapacity;
+
+    public static UpdateThreadPoolConfigDTO buildUpdateThreadPoolConfigDTO(
+            ThreadPoolConfigEntity threadPoolConfigEntity ) {
+        return new UpdateThreadPoolConfigDTO(
+                threadPoolConfigEntity.getApplicationName(),
+                threadPoolConfigEntity.getThreadPoolName(),
+                threadPoolConfigEntity.getCorePoolSize(),
+                threadPoolConfigEntity.getMaximumPoolSize(),
+                threadPoolConfigEntity.getQueueSize() + threadPoolConfigEntity.getRemainingCapacity()
+        );
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/Helpers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/Helpers.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/Helpers.java
new file mode 100644
--- /dev/null	(date 1732353890617)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/Helpers.java	(date 1732353890617)
@@ -0,0 +1,118 @@
+/*
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.  Oracle designates this
+ * particular file as subject to the "Classpath" exception as provided
+ * by Oracle in the LICENSE file that accompanied this code.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+/*
+ * This file is available under and governed by the GNU General Public
+ * License version 2 only, as published by the Free Software Foundation.
+ * However, the following notice accompanied the original version of this
+ * file:
+ *
+ * Written by Martin Buchholz with assistance from members of JCP
+ * JSR-166 Expert Group and released to the public domain, as
+ * explained at http://creativecommons.org/publicdomain/zero/1.0/
+ */
+
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.hook;
+
+import java.util.Collection;
+
+/** Shared implementation code for java.util.concurrent. */
+class Helpers {
+    private Helpers() {}                // non-instantiable
+
+    /**
+     * An implementation of Collection.toString() suitable for classes
+     * with locks.  Instead of holding a lock for the entire duration of
+     * toString(), or acquiring a lock for each call to Iterator.next(),
+     * we hold the lock only during the call to toArray() (less
+     * disruptive to other threads accessing the collection) and follows
+     * the maxim "Never call foreign code while holding a lock".
+     */
+    static String collectionToString(Collection<?> c) {
+        final Object[] a = c.toArray();
+        final int size = a.length;
+        if (size == 0)
+            return "[]";
+        int charLength = 0;
+
+        // Replace every array element with its string representation
+        for (int i = 0; i < size; i++) {
+            Object e = a[i];
+            // Extreme compatibility with AbstractCollection.toString()
+            String s = (e == c) ? "(this Collection)" : objectToString(e);
+            a[i] = s;
+            charLength += s.length();
+        }
+
+        return toString(a, size, charLength);
+    }
+
+    /**
+     * Like Arrays.toString(), but caller guarantees that size > 0,
+     * each element with index 0 <= i < size is a non-null String,
+     * and charLength is the sum of the lengths of the input Strings.
+     */
+    static String toString(Object[] a, int size, int charLength) {
+        // assert a != null;
+        // assert size > 0;
+
+        // Copy each string into a perfectly sized char[]
+        // Length of [ , , , ] == 2 * size
+        final char[] chars = new char[charLength + 2 * size];
+        chars[0] = '[';
+        int j = 1;
+        for (int i = 0; i < size; i++) {
+            if (i > 0) {
+                chars[j++] = ',';
+                chars[j++] = ' ';
+            }
+            String s = (String) a[i];
+            int len = s.length();
+            s.getChars(0, len, chars, j);
+            j += len;
+        }
+        chars[j] = ']';
+        // assert j == chars.length - 1;
+        return new String(chars);
+    }
+
+    /** Optimized form of: key + "=" + val */
+    static String mapEntryToString(Object key, Object val) {
+        final String k, v;
+        final int klen, vlen;
+        final char[] chars =
+            new char[(klen = (k = objectToString(key)).length()) +
+                     (vlen = (v = objectToString(val)).length()) + 1];
+        k.getChars(0, klen, chars, 0);
+        chars[klen] = '=';
+        v.getChars(0, vlen, chars, klen + 1);
+        return new String(chars);
+    }
+
+    private static String objectToString(Object x) {
+        // Extreme compatibility with StringBuilder.append(null)
+        String s;
+        return (x == null || (s = x.toString()) == null) ? "null" : s;
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/ResizableCapacityLinkedBlockingQueue.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/ResizableCapacityLinkedBlockingQueue.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/ResizableCapacityLinkedBlockingQueue.java
new file mode 100644
--- /dev/null	(date 1732353890638)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/hook/ResizableCapacityLinkedBlockingQueue.java	(date 1732353890638)
@@ -0,0 +1,1171 @@
+/**
+ * 对LinkedBlockingQueue进行修改，使之支持动态修改阻塞队列长度
+ */
+
+/*
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.  Oracle designates this
+ * particular file as subject to the "Classpath" exception as provided
+ * by Oracle in the LICENSE file that accompanied this code.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+/*
+ * This file is available under and governed by the GNU General Public
+ * License version 2 only, as published by the Free Software Foundation.
+ * However, the following notice accompanied the original version of this
+ * file:
+ *
+ * Written by Doug Lea with assistance from members of JCP JSR-166
+ * Expert Group and released to the public domain, as explained at
+ * http://creativecommons.org/publicdomain/zero/1.0/
+ */
+
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.hook;
+
+import java.util.*;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.locks.Condition;
+import java.util.concurrent.locks.ReentrantLock;
+import java.util.function.Consumer;
+import java.util.function.Predicate;
+
+/**
+ * An optionally-bounded {@linkplain BlockingQueue blocking queue} based on
+ * linked nodes.
+ * This queue orders elements FIFO (first-in-first-out).
+ * The <em>head</em> of the queue is that element that has been on the
+ * queue the longest time.
+ * The <em>tail</em> of the queue is that element that has been on the
+ * queue the shortest time. New elements
+ * are inserted at the tail of the queue, and the queue retrieval
+ * operations obtain elements at the head of the queue.
+ * Linked queues typically have higher throughput than array-based queues but
+ * less predictable performance in most concurrent applications.
+ *
+ * <p>The optional capacity bound constructor argument serves as a
+ * way to prevent excessive queue expansion. The capacity, if unspecified,
+ * is equal to {@link Integer#MAX_VALUE}.  Linked nodes are
+ * dynamically created upon each insertion unless this would bring the
+ * queue above capacity.
+ *
+ * <p>This class and its iterator implement all of the <em>optional</em>
+ * methods of the {@link Collection} and {@link Iterator} interfaces.
+ *
+ * <p>This class is a member of the
+ * <a href="{@docRoot}/java.base/java/util/package-summary.html#CollectionsFramework">
+ * Java Collections Framework</a>.
+ *
+ * @since 1.5
+ * @author Doug Lea
+ * @param <E> the type of elements held in this queue
+ */
+public class ResizableCapacityLinkedBlockingQueue<E> extends AbstractQueue<E>
+        implements BlockingQueue<E>, java.io.Serializable {
+    private static final long serialVersionUID = -6903933977591709194L;
+
+    /*
+     * A variant of the "two lock queue" algorithm.  The putLock gates
+     * entry to put (and offer), and has an associated condition for
+     * waiting puts.  Similarly for the takeLock.  The "count" field
+     * that they both rely on is maintained as an atomic to avoid
+     * needing to get both locks in most cases. Also, to minimize need
+     * for puts to get takeLock and vice-versa, cascading notifies are
+     * used. When a put notices that it has enabled at least one take,
+     * it signals taker. That taker in turn signals others if more
+     * items have been entered since the signal. And symmetrically for
+     * takes signalling puts. Operations such as remove(Object) and
+     * iterators acquire both locks.
+     *
+     * Visibility between writers and readers is provided as follows:
+     *
+     * Whenever an element is enqueued, the putLock is acquired and
+     * count updated.  A subsequent reader guarantees visibility to the
+     * enqueued Node by either acquiring the putLock (via fullyLock)
+     * or by acquiring the takeLock, and then reading n = count.get();
+     * this gives visibility to the first n items.
+     *
+     * To implement weakly consistent iterators, it appears we need to
+     * keep all Nodes GC-reachable from a predecessor dequeued Node.
+     * That would cause two problems:
+     * - allow a rogue Iterator to cause unbounded memory retention
+     * - cause cross-generational linking of old Nodes to new Nodes if
+     *   a Node was tenured while live, which generational GCs have a
+     *   hard time dealing with, causing repeated major collections.
+     * However, only non-deleted Nodes need to be reachable from
+     * dequeued Nodes, and reachability does not necessarily have to
+     * be of the kind understood by the GC.  We use the trick of
+     * linking a Node that has just been dequeued to itself.  Such a
+     * self-link implicitly means to advance to head.next.
+     */
+
+    /**
+     * Linked list node class.
+     */
+    static class Node<E> {
+        E item;
+
+        /**
+         * One of:
+         * - the real successor Node
+         * - this Node, meaning the successor is head.next
+         * - null, meaning there is no successor (this is the last node)
+         */
+        Node<E> next;
+
+        Node(E x) { item = x; }
+    }
+
+    /** The capacity bound, or Integer.MAX_VALUE if none */
+    private int capacity;
+
+    /** Current number of elements */
+    private final AtomicInteger count = new AtomicInteger();
+
+    /**
+     * Head of linked list.
+     * Invariant: head.item == null
+     */
+    transient Node<E> head;
+
+    /**
+     * Tail of linked list.
+     * Invariant: last.next == null
+     */
+    private transient Node<E> last;
+
+    /** Lock held by take, poll, etc */
+    private final ReentrantLock takeLock = new ReentrantLock();
+
+    /** Wait queue for waiting takes */
+    @SuppressWarnings("serial") // Classes implementing Condition may be serializable.
+    private final Condition notEmpty = takeLock.newCondition();
+
+    /** Lock held by put, offer, etc */
+    private final ReentrantLock putLock = new ReentrantLock();
+
+    /** Wait queue for waiting puts */
+    @SuppressWarnings("serial") // Classes implementing Condition may be serializable.
+    private final Condition notFull = putLock.newCondition();
+
+    /**
+     * Signals a waiting take. Called only from put/offer (which do not
+     * otherwise ordinarily lock takeLock.)
+     */
+    private void signalNotEmpty() {
+        final ReentrantLock takeLock = this.takeLock;
+        takeLock.lock();
+        try {
+            notEmpty.signal();
+        } finally {
+            takeLock.unlock();
+        }
+    }
+
+    /**
+     * Signals a waiting put. Called only from take/poll.
+     */
+    private void signalNotFull() {
+        final ReentrantLock putLock = this.putLock;
+        putLock.lock();
+        try {
+            notFull.signal();
+        } finally {
+            putLock.unlock();
+        }
+    }
+
+    /**
+     * Links node at end of queue.
+     *
+     * @param node the node
+     */
+    private void enqueue(Node<E> node) {
+        // assert putLock.isHeldByCurrentThread();
+        // assert last.next == null;
+        last = last.next = node;
+    }
+
+    /**
+     * Removes a node from head of queue.
+     *
+     * @return the node
+     */
+    private E dequeue() {
+        // assert takeLock.isHeldByCurrentThread();
+        // assert head.item == null;
+        Node<E> h = head;
+        Node<E> first = h.next;
+        h.next = h; // help GC
+        head = first;
+        E x = first.item;
+        first.item = null;
+        return x;
+    }
+
+    /**
+     * Locks to prevent both puts and takes.
+     */
+    void fullyLock() {
+        putLock.lock();
+        takeLock.lock();
+    }
+
+    /**
+     * Unlocks to allow both puts and takes.
+     */
+    void fullyUnlock() {
+        takeLock.unlock();
+        putLock.unlock();
+    }
+
+    /**
+     * Creates a {@code LinkedBlockingQueue} with a capacity of
+     * {@link Integer#MAX_VALUE}.
+     */
+    public ResizableCapacityLinkedBlockingQueue() {
+        this(Integer.MAX_VALUE);
+    }
+
+    /**
+     * Creates a {@code LinkedBlockingQueue} with the given (fixed) capacity.
+     *
+     * @param capacity the capacity of this queue
+     * @throws IllegalArgumentException if {@code capacity} is not greater
+     *         than zero
+     */
+    public ResizableCapacityLinkedBlockingQueue(int capacity) {
+        if (capacity <= 0) throw new IllegalArgumentException();
+        this.capacity = capacity;
+        last = head = new Node<E>(null);
+    }
+
+    /**
+     * Creates a {@code LinkedBlockingQueue} with a capacity of
+     * {@link Integer#MAX_VALUE}, initially containing the elements of the
+     * given collection,
+     * added in traversal order of the collection's iterator.
+     *
+     * @param c the collection of elements to initially contain
+     * @throws NullPointerException if the specified collection or any
+     *         of its elements are null
+     */
+    public ResizableCapacityLinkedBlockingQueue(Collection<? extends E> c) {
+        this(Integer.MAX_VALUE);
+        final ReentrantLock putLock = this.putLock;
+        putLock.lock(); // Never contended, but necessary for visibility
+        try {
+            int n = 0;
+            for (E e : c) {
+                if (e == null)
+                    throw new NullPointerException();
+                if (n == capacity)
+                    throw new IllegalStateException("Queue full");
+                enqueue(new Node<E>(e));
+                ++n;
+            }
+            count.set(n);
+        } finally {
+            putLock.unlock();
+        }
+    }
+
+    // this doc comment is overridden to remove the reference to collections
+    // greater in size than Integer.MAX_VALUE
+    /**
+     * Returns the number of elements in this queue.
+     *
+     * @return the number of elements in this queue
+     */
+    public int size() {
+        return count.get();
+    }
+
+    // this doc comment is a modified copy of the inherited doc comment,
+    // without the reference to unlimited queues.
+    /**
+     * Returns the number of additional elements that this queue can ideally
+     * (in the absence of memory or resource constraints) accept without
+     * blocking. This is always equal to the initial capacity of this queue
+     * less the current {@code size} of this queue.
+     *
+     * <p>Note that you <em>cannot</em> always tell if an attempt to insert
+     * an element will succeed by inspecting {@code remainingCapacity}
+     * because it may be the case that another thread is about to
+     * insert or remove an element.
+     */
+    public int remainingCapacity() {
+        return capacity - count.get();
+    }
+
+    /**
+     * Inserts the specified element at the tail of this queue, waiting if
+     * necessary for space to become available.
+     *
+     * @throws InterruptedException {@inheritDoc}
+     * @throws NullPointerException {@inheritDoc}
+     */
+    public void put(E e) throws InterruptedException {
+        if (e == null) throw new NullPointerException();
+        final int c;
+        final Node<E> node = new Node<E>(e);
+        final ReentrantLock putLock = this.putLock;
+        final AtomicInteger count = this.count;
+        putLock.lockInterruptibly();
+        try {
+            /*
+             * Note that count is used in wait guard even though it is
+             * not protected by lock. This works because count can
+             * only decrease at this point (all other puts are shut
+             * out by lock), and we (or some other waiting put) are
+             * signalled if it ever changes from capacity. Similarly
+             * for all other uses of count in other wait guards.
+             */
+            while (count.get() == capacity) {
+                notFull.await();
+            }
+            enqueue(node);
+            c = count.getAndIncrement();
+            if (c + 1 < capacity)
+                notFull.signal();
+        } finally {
+            putLock.unlock();
+        }
+        if (c == 0)
+            signalNotEmpty();
+    }
+
+    /**
+     * Inserts the specified element at the tail of this queue, waiting if
+     * necessary up to the specified wait time for space to become available.
+     *
+     * @return {@code true} if successful, or {@code false} if
+     *         the specified waiting time elapses before space is available
+     * @throws InterruptedException {@inheritDoc}
+     * @throws NullPointerException {@inheritDoc}
+     */
+    public boolean offer(E e, long timeout, TimeUnit unit)
+            throws InterruptedException {
+
+        if (e == null) throw new NullPointerException();
+        long nanos = unit.toNanos(timeout);
+        final int c;
+        final ReentrantLock putLock = this.putLock;
+        final AtomicInteger count = this.count;
+        putLock.lockInterruptibly();
+        try {
+            while (count.get() == capacity) {
+                if (nanos <= 0L)
+                    return false;
+                nanos = notFull.awaitNanos(nanos);
+            }
+            enqueue(new Node<E>(e));
+            c = count.getAndIncrement();
+            if (c + 1 < capacity)
+                notFull.signal();
+        } finally {
+            putLock.unlock();
+        }
+        if (c == 0)
+            signalNotEmpty();
+        return true;
+    }
+
+    /**
+     * Inserts the specified element at the tail of this queue if it is
+     * possible to do so immediately without exceeding the queue's capacity,
+     * returning {@code true} upon success and {@code false} if this queue
+     * is full.
+     * When using a capacity-restricted queue, this method is generally
+     * preferable to method {@link BlockingQueue#add add}, which can fail to
+     * insert an element only by throwing an exception.
+     *
+     * @throws NullPointerException if the specified element is null
+     */
+    public boolean offer(E e) {
+        if (e == null) throw new NullPointerException();
+        final AtomicInteger count = this.count;
+        if (count.get() == capacity)
+            return false;
+        final int c;
+        final Node<E> node = new Node<E>(e);
+        final ReentrantLock putLock = this.putLock;
+        putLock.lock();
+        try {
+            if (count.get() == capacity)
+                return false;
+            enqueue(node);
+            c = count.getAndIncrement();
+            if (c + 1 < capacity)
+                notFull.signal();
+        } finally {
+            putLock.unlock();
+        }
+        if (c == 0)
+            signalNotEmpty();
+        return true;
+    }
+
+    public E take() throws InterruptedException {
+        final E x;
+        final int c;
+        final AtomicInteger count = this.count;
+        final ReentrantLock takeLock = this.takeLock;
+        takeLock.lockInterruptibly();
+        try {
+            while (count.get() == 0) {
+                notEmpty.await();
+            }
+            x = dequeue();
+            c = count.getAndDecrement();
+            if (c > 1)
+                notEmpty.signal();
+        } finally {
+            takeLock.unlock();
+        }
+        if (c == capacity)
+            signalNotFull();
+        return x;
+    }
+
+    public E poll(long timeout, TimeUnit unit) throws InterruptedException {
+        final E x;
+        final int c;
+        long nanos = unit.toNanos(timeout);
+        final AtomicInteger count = this.count;
+        final ReentrantLock takeLock = this.takeLock;
+        takeLock.lockInterruptibly();
+        try {
+            while (count.get() == 0) {
+                if (nanos <= 0L)
+                    return null;
+                nanos = notEmpty.awaitNanos(nanos);
+            }
+            x = dequeue();
+            c = count.getAndDecrement();
+            if (c > 1)
+                notEmpty.signal();
+        } finally {
+            takeLock.unlock();
+        }
+        if (c == capacity)
+            signalNotFull();
+        return x;
+    }
+
+    public E poll() {
+        final AtomicInteger count = this.count;
+        if (count.get() == 0)
+            return null;
+        final E x;
+        final int c;
+        final ReentrantLock takeLock = this.takeLock;
+        takeLock.lock();
+        try {
+            if (count.get() == 0)
+                return null;
+            x = dequeue();
+            c = count.getAndDecrement();
+            if (c > 1)
+                notEmpty.signal();
+        } finally {
+            takeLock.unlock();
+        }
+        if (c == capacity)
+            signalNotFull();
+        return x;
+    }
+
+    public E peek() {
+        final AtomicInteger count = this.count;
+        if (count.get() == 0)
+            return null;
+        final ReentrantLock takeLock = this.takeLock;
+        takeLock.lock();
+        try {
+            return (count.get() > 0) ? head.next.item : null;
+        } finally {
+            takeLock.unlock();
+        }
+    }
+
+    /**
+     * Unlinks interior Node p with predecessor pred.
+     */
+    void unlink(Node<E> p, Node<E> pred) {
+        // assert putLock.isHeldByCurrentThread();
+        // assert takeLock.isHeldByCurrentThread();
+        // p.next is not changed, to allow iterators that are
+        // traversing p to maintain their weak-consistency guarantee.
+        p.item = null;
+        pred.next = p.next;
+        if (last == p)
+            last = pred;
+        if (count.getAndDecrement() == capacity)
+            notFull.signal();
+    }
+
+    /**
+     * Removes a single instance of the specified element from this queue,
+     * if it is present.  More formally, removes an element {@code e} such
+     * that {@code o.equals(e)}, if this queue contains one or more such
+     * elements.
+     * Returns {@code true} if this queue contained the specified element
+     * (or equivalently, if this queue changed as a result of the call).
+     *
+     * @param o element to be removed from this queue, if present
+     * @return {@code true} if this queue changed as a result of the call
+     */
+    public boolean remove(Object o) {
+        if (o == null) return false;
+        fullyLock();
+        try {
+            for (Node<E> pred = head, p = pred.next;
+                 p != null;
+                 pred = p, p = p.next) {
+                if (o.equals(p.item)) {
+                    unlink(p, pred);
+                    return true;
+                }
+            }
+            return false;
+        } finally {
+            fullyUnlock();
+        }
+    }
+
+    /**
+     * Returns {@code true} if this queue contains the specified element.
+     * More formally, returns {@code true} if and only if this queue contains
+     * at least one element {@code e} such that {@code o.equals(e)}.
+     *
+     * @param o object to be checked for containment in this queue
+     * @return {@code true} if this queue contains the specified element
+     */
+    public boolean contains(Object o) {
+        if (o == null) return false;
+        fullyLock();
+        try {
+            for (Node<E> p = head.next; p != null; p = p.next)
+                if (o.equals(p.item))
+                    return true;
+            return false;
+        } finally {
+            fullyUnlock();
+        }
+    }
+
+    /**
+     * Returns an array containing all of the elements in this queue, in
+     * proper sequence.
+     *
+     * <p>The returned array will be "safe" in that no references to it are
+     * maintained by this queue.  (In other words, this method must allocate
+     * a new array).  The caller is thus free to modify the returned array.
+     *
+     * <p>This method acts as bridge between array-based and collection-based
+     * APIs.
+     *
+     * @return an array containing all of the elements in this queue
+     */
+    public Object[] toArray() {
+        fullyLock();
+        try {
+            int size = count.get();
+            Object[] a = new Object[size];
+            int k = 0;
+            for (Node<E> p = head.next; p != null; p = p.next)
+                a[k++] = p.item;
+            return a;
+        } finally {
+            fullyUnlock();
+        }
+    }
+
+    /**
+     * Returns an array containing all of the elements in this queue, in
+     * proper sequence; the runtime type of the returned array is that of
+     * the specified array.  If the queue fits in the specified array, it
+     * is returned therein.  Otherwise, a new array is allocated with the
+     * runtime type of the specified array and the size of this queue.
+     *
+     * <p>If this queue fits in the specified array with room to spare
+     * (i.e., the array has more elements than this queue), the element in
+     * the array immediately following the end of the queue is set to
+     * {@code null}.
+     *
+     * <p>Like the {@link #toArray()} method, this method acts as bridge between
+     * array-based and collection-based APIs.  Further, this method allows
+     * precise control over the runtime type of the output array, and may,
+     * under certain circumstances, be used to save allocation costs.
+     *
+     * <p>Suppose {@code x} is a queue known to contain only strings.
+     * The following code can be used to dump the queue into a newly
+     * allocated array of {@code String}:
+     *
+     * <pre> {@code String[] y = x.toArray(new String[0]);}</pre>
+     *
+     * Note that {@code toArray(new Object[0])} is identical in function to
+     * {@code toArray()}.
+     *
+     * @param a the array into which the elements of the queue are to
+     *          be stored, if it is big enough; otherwise, a new array of the
+     *          same runtime type is allocated for this purpose
+     * @return an array containing all of the elements in this queue
+     * @throws ArrayStoreException if the runtime type of the specified array
+     *         is not a supertype of the runtime type of every element in
+     *         this queue
+     * @throws NullPointerException if the specified array is null
+     */
+    @SuppressWarnings("unchecked")
+    public <T> T[] toArray(T[] a) {
+        fullyLock();
+        try {
+            int size = count.get();
+            if (a.length < size)
+                a = (T[])java.lang.reflect.Array.newInstance
+                        (a.getClass().getComponentType(), size);
+
+            int k = 0;
+            for (Node<E> p = head.next; p != null; p = p.next)
+                a[k++] = (T)p.item;
+            if (a.length > k)
+                a[k] = null;
+            return a;
+        } finally {
+            fullyUnlock();
+        }
+    }
+
+    public String toString() {
+        return Helpers.collectionToString(this);
+    }
+
+    /**
+     * Atomically removes all of the elements from this queue.
+     * The queue will be empty after this call returns.
+     */
+    public void clear() {
+        fullyLock();
+        try {
+            for (Node<E> p, h = head; (p = h.next) != null; h = p) {
+                h.next = h;
+                p.item = null;
+            }
+            head = last;
+            // assert head.item == null && head.next == null;
+            if (count.getAndSet(0) == capacity)
+                notFull.signal();
+        } finally {
+            fullyUnlock();
+        }
+    }
+
+    /**
+     * @throws UnsupportedOperationException {@inheritDoc}
+     * @throws ClassCastException            {@inheritDoc}
+     * @throws NullPointerException          {@inheritDoc}
+     * @throws IllegalArgumentException      {@inheritDoc}
+     */
+    public int drainTo(Collection<? super E> c) {
+        return drainTo(c, Integer.MAX_VALUE);
+    }
+
+    /**
+     * @throws UnsupportedOperationException {@inheritDoc}
+     * @throws ClassCastException            {@inheritDoc}
+     * @throws NullPointerException          {@inheritDoc}
+     * @throws IllegalArgumentException      {@inheritDoc}
+     */
+    public int drainTo(Collection<? super E> c, int maxElements) {
+        Objects.requireNonNull(c);
+        if (c == this)
+            throw new IllegalArgumentException();
+        if (maxElements <= 0)
+            return 0;
+        boolean signalNotFull = false;
+        final ReentrantLock takeLock = this.takeLock;
+        takeLock.lock();
+        try {
+            int n = Math.min(maxElements, count.get());
+            // count.get provides visibility to first n Nodes
+            Node<E> h = head;
+            int i = 0;
+            try {
+                while (i < n) {
+                    Node<E> p = h.next;
+                    c.add(p.item);
+                    p.item = null;
+                    h.next = h;
+                    h = p;
+                    ++i;
+                }
+                return n;
+            } finally {
+                // Restore invariants even if c.add() threw
+                if (i > 0) {
+                    // assert h.item == null;
+                    head = h;
+                    signalNotFull = (count.getAndAdd(-i) == capacity);
+                }
+            }
+        } finally {
+            takeLock.unlock();
+            if (signalNotFull)
+                signalNotFull();
+        }
+    }
+
+    /**
+     * Used for any element traversal that is not entirely under lock.
+     * Such traversals must handle both:
+     * - dequeued nodes (p.next == p)
+     * - (possibly multiple) interior removed nodes (p.item == null)
+     */
+    Node<E> succ(Node<E> p) {
+        if (p == (p = p.next))
+            p = head.next;
+        return p;
+    }
+
+    /**
+     * Returns an iterator over the elements in this queue in proper sequence.
+     * The elements will be returned in order from first (head) to last (tail).
+     *
+     * <p>The returned iterator is
+     * <a href="package-summary.html#Weakly"><i>weakly consistent</i></a>.
+     *
+     * @return an iterator over the elements in this queue in proper sequence
+     */
+    public Iterator<E> iterator() {
+        return new Itr();
+    }
+
+    /**
+     * Weakly-consistent iterator.
+     *
+     * Lazily updated ancestor field provides expected O(1) remove(),
+     * but still O(n) in the worst case, whenever the saved ancestor
+     * is concurrently deleted.
+     */
+    private class Itr implements Iterator<E> {
+        private Node<E> next;           // Node holding nextItem
+        private E nextItem;             // next item to hand out
+        private Node<E> lastRet;
+        private Node<E> ancestor;       // Helps unlink lastRet on remove()
+
+        Itr() {
+            fullyLock();
+            try {
+                if ((next = head.next) != null)
+                    nextItem = next.item;
+            } finally {
+                fullyUnlock();
+            }
+        }
+
+        public boolean hasNext() {
+            return next != null;
+        }
+
+        public E next() {
+            Node<E> p;
+            if ((p = next) == null)
+                throw new NoSuchElementException();
+            lastRet = p;
+            E x = nextItem;
+            fullyLock();
+            try {
+                E e = null;
+                for (p = p.next; p != null && (e = p.item) == null; )
+                    p = succ(p);
+                next = p;
+                nextItem = e;
+            } finally {
+                fullyUnlock();
+            }
+            return x;
+        }
+
+        public void forEachRemaining(Consumer<? super E> action) {
+            // A variant of forEachFrom
+            Objects.requireNonNull(action);
+            Node<E> p;
+            if ((p = next) == null) return;
+            lastRet = p;
+            next = null;
+            final int batchSize = 64;
+            Object[] es = null;
+            int n, len = 1;
+            do {
+                fullyLock();
+                try {
+                    if (es == null) {
+                        p = p.next;
+                        for (Node<E> q = p; q != null; q = succ(q))
+                            if (q.item != null && ++len == batchSize)
+                                break;
+                        es = new Object[len];
+                        es[0] = nextItem;
+                        nextItem = null;
+                        n = 1;
+                    } else
+                        n = 0;
+                    for (; p != null && n < len; p = succ(p))
+                        if ((es[n] = p.item) != null) {
+                            lastRet = p;
+                            n++;
+                        }
+                } finally {
+                    fullyUnlock();
+                }
+                for (int i = 0; i < n; i++) {
+                    @SuppressWarnings("unchecked") E e = (E) es[i];
+                    action.accept(e);
+                }
+            } while (n > 0 && p != null);
+        }
+
+        public void remove() {
+            Node<E> p = lastRet;
+            if (p == null)
+                throw new IllegalStateException();
+            lastRet = null;
+            fullyLock();
+            try {
+                if (p.item != null) {
+                    if (ancestor == null)
+                        ancestor = head;
+                    ancestor = findPred(p, ancestor);
+                    unlink(p, ancestor);
+                }
+            } finally {
+                fullyUnlock();
+            }
+        }
+    }
+
+    /**
+     * A customized variant of Spliterators.IteratorSpliterator.
+     * Keep this class in sync with (very similar) LBDSpliterator.
+     */
+    private final class LBQSpliterator implements Spliterator<E> {
+        static final int MAX_BATCH = 1 << 25;  // max batch array size;
+        Node<E> current;    // current node; null until initialized
+        int batch;          // batch size for splits
+        boolean exhausted;  // true when no more nodes
+        long est = size();  // size estimate
+
+        LBQSpliterator() {}
+
+        public long estimateSize() { return est; }
+
+        public Spliterator<E> trySplit() {
+            Node<E> h;
+            if (!exhausted &&
+                    ((h = current) != null || (h = head.next) != null)
+                    && h.next != null) {
+                int n = batch = Math.min(batch + 1, MAX_BATCH);
+                Object[] a = new Object[n];
+                int i = 0;
+                Node<E> p = current;
+                fullyLock();
+                try {
+                    if (p != null || (p = head.next) != null)
+                        for (; p != null && i < n; p = succ(p))
+                            if ((a[i] = p.item) != null)
+                                i++;
+                } finally {
+                    fullyUnlock();
+                }
+                if ((current = p) == null) {
+                    est = 0L;
+                    exhausted = true;
+                }
+                else if ((est -= i) < 0L)
+                    est = 0L;
+                if (i > 0)
+                    return Spliterators.spliterator
+                            (a, 0, i, (Spliterator.ORDERED |
+                                    Spliterator.NONNULL |
+                                    Spliterator.CONCURRENT));
+            }
+            return null;
+        }
+
+        public boolean tryAdvance(Consumer<? super E> action) {
+            Objects.requireNonNull(action);
+            if (!exhausted) {
+                E e = null;
+                fullyLock();
+                try {
+                    Node<E> p;
+                    if ((p = current) != null || (p = head.next) != null)
+                        do {
+                            e = p.item;
+                            p = succ(p);
+                        } while (e == null && p != null);
+                    if ((current = p) == null)
+                        exhausted = true;
+                } finally {
+                    fullyUnlock();
+                }
+                if (e != null) {
+                    action.accept(e);
+                    return true;
+                }
+            }
+            return false;
+        }
+
+        public void forEachRemaining(Consumer<? super E> action) {
+            Objects.requireNonNull(action);
+            if (!exhausted) {
+                exhausted = true;
+                Node<E> p = current;
+                current = null;
+                forEachFrom(action, p);
+            }
+        }
+
+        public int characteristics() {
+            return (Spliterator.ORDERED |
+                    Spliterator.NONNULL |
+                    Spliterator.CONCURRENT);
+        }
+    }
+
+    /**
+     * Returns a {@link Spliterator} over the elements in this queue.
+     *
+     * <p>The returned spliterator is
+     * <a href="package-summary.html#Weakly"><i>weakly consistent</i></a>.
+     *
+     * <p>The {@code Spliterator} reports {@link Spliterator#CONCURRENT},
+     * {@link Spliterator#ORDERED}, and {@link Spliterator#NONNULL}.
+     *
+     * @implNote
+     * The {@code Spliterator} implements {@code trySplit} to permit limited
+     * parallelism.
+     *
+     * @return a {@code Spliterator} over the elements in this queue
+     * @since 1.8
+     */
+    public Spliterator<E> spliterator() {
+        return new LBQSpliterator();
+    }
+
+    /**
+     * @throws NullPointerException {@inheritDoc}
+     */
+    public void forEach(Consumer<? super E> action) {
+        Objects.requireNonNull(action);
+        forEachFrom(action, null);
+    }
+
+    /**
+     * Runs action on each element found during a traversal starting at p.
+     * If p is null, traversal starts at head.
+     */
+    void forEachFrom(Consumer<? super E> action, Node<E> p) {
+        // Extract batches of elements while holding the lock; then
+        // run the action on the elements while not
+        final int batchSize = 64;       // max number of elements per batch
+        Object[] es = null;             // container for batch of elements
+        int n, len = 0;
+        do {
+            fullyLock();
+            try {
+                if (es == null) {
+                    if (p == null) p = head.next;
+                    for (Node<E> q = p; q != null; q = succ(q))
+                        if (q.item != null && ++len == batchSize)
+                            break;
+                    es = new Object[len];
+                }
+                for (n = 0; p != null && n < len; p = succ(p))
+                    if ((es[n] = p.item) != null)
+                        n++;
+            } finally {
+                fullyUnlock();
+            }
+            for (int i = 0; i < n; i++) {
+                @SuppressWarnings("unchecked") E e = (E) es[i];
+                action.accept(e);
+            }
+        } while (n > 0 && p != null);
+    }
+
+    /**
+     * @throws NullPointerException {@inheritDoc}
+     */
+    public boolean removeIf(Predicate<? super E> filter) {
+        Objects.requireNonNull(filter);
+        return bulkRemove(filter);
+    }
+
+    /**
+     * @throws NullPointerException {@inheritDoc}
+     */
+    public boolean removeAll(Collection<?> c) {
+        Objects.requireNonNull(c);
+        return bulkRemove(e -> c.contains(e));
+    }
+
+    /**
+     * @throws NullPointerException {@inheritDoc}
+     */
+    public boolean retainAll(Collection<?> c) {
+        Objects.requireNonNull(c);
+        return bulkRemove(e -> !c.contains(e));
+    }
+
+    /**
+     * Returns the predecessor of live node p, given a node that was
+     * once a live ancestor of p (or head); allows unlinking of p.
+     */
+    Node<E> findPred(Node<E> p, Node<E> ancestor) {
+        // assert p.item != null;
+        if (ancestor.item == null)
+            ancestor = head;
+        // Fails with NPE if precondition not satisfied
+        for (Node<E> q; (q = ancestor.next) != p; )
+            ancestor = q;
+        return ancestor;
+    }
+
+    /** Implementation of bulk remove methods. */
+    @SuppressWarnings("unchecked")
+    private boolean bulkRemove(Predicate<? super E> filter) {
+        boolean removed = false;
+        Node<E> p = null, ancestor = head;
+        Node<E>[] nodes = null;
+        int n, len = 0;
+        do {
+            // 1. Extract batch of up to 64 elements while holding the lock.
+            fullyLock();
+            try {
+                if (nodes == null) {  // first batch; initialize
+                    p = head.next;
+                    for (Node<E> q = p; q != null; q = succ(q))
+                        if (q.item != null && ++len == 64)
+                            break;
+                    nodes = (Node<E>[]) new Node<?>[len];
+                }
+                for (n = 0; p != null && n < len; p = succ(p))
+                    nodes[n++] = p;
+            } finally {
+                fullyUnlock();
+            }
+
+            // 2. Run the filter on the elements while lock is free.
+            long deathRow = 0L;       // "bitset" of size 64
+            for (int i = 0; i < n; i++) {
+                final E e;
+                if ((e = nodes[i].item) != null && filter.test(e))
+                    deathRow |= 1L << i;
+            }
+
+            // 3. Remove any filtered elements while holding the lock.
+            if (deathRow != 0) {
+                fullyLock();
+                try {
+                    for (int i = 0; i < n; i++) {
+                        final Node<E> q;
+                        if ((deathRow & (1L << i)) != 0L
+                                && (q = nodes[i]).item != null) {
+                            ancestor = findPred(q, ancestor);
+                            unlink(q, ancestor);
+                            removed = true;
+                        }
+                        nodes[i] = null; // help GC
+                    }
+                } finally {
+                    fullyUnlock();
+                }
+            }
+        } while (n > 0 && p != null);
+        return removed;
+    }
+
+    /**
+     * Saves this queue to a stream (that is, serializes it).
+     *
+     * @param s the stream
+     * @throws java.io.IOException if an I/O error occurs
+     * @serialData The capacity is emitted (int), followed by all of
+     * its elements (each an {@code Object}) in the proper order,
+     * followed by a null
+     */
+    private void writeObject(java.io.ObjectOutputStream s)
+            throws java.io.IOException {
+
+        fullyLock();
+        try {
+            // Write out any hidden stuff, plus capacity
+            s.defaultWriteObject();
+
+            // Write out all elements in the proper order.
+            for (Node<E> p = head.next; p != null; p = p.next)
+                s.writeObject(p.item);
+
+            // Use trailing null as sentinel
+            s.writeObject(null);
+        } finally {
+            fullyUnlock();
+        }
+    }
+
+    /**
+     * Reconstitutes this queue from a stream (that is, deserializes it).
+     * @param s the stream
+     * @throws ClassNotFoundException if the class of a serialized object
+     *         could not be found
+     * @throws java.io.IOException if an I/O error occurs
+     */
+    private void readObject(java.io.ObjectInputStream s)
+            throws java.io.IOException, ClassNotFoundException {
+        // Read in capacity, and any hidden stuff
+        s.defaultReadObject();
+
+        count.set(0);
+        last = head = new Node<E>(null);
+
+        // Read in all elements and place in queue
+        for (;;) {
+            @SuppressWarnings("unchecked")
+            E item = (E)s.readObject();
+            if (item == null)
+                break;
+            add(item);
+        }
+    }
+
+    public void setCapacity(int capacity) {
+        int originalCapacity = this.capacity;
+        this.capacity = capacity;
+        int queueSize = count.get();
+        // 容量扩大且存在等待唤醒的元素
+        if (capacity > queueSize && queueSize > originalCapacity) {
+            signalNotFull();
+        }
+    }
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/AlarmStrategyEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/AlarmStrategyEnum.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/AlarmStrategyEnum.java
new file mode 100644
--- /dev/null	(date 1732353890612)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/model/enums/AlarmStrategyEnum.java	(date 1732353890612)
@@ -0,0 +1,17 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.model.enums;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Getter
+public enum AlarmStrategyEnum {
+
+    DING_DING("DingDing", "钉钉"),
+    FEI_SHU("FeiShu", "飞书");
+
+    private String value;
+    private String description;
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.util.concurrent.ThreadPoolExecutor;\r\n\r\n/**\r\n * 线程池配置对象\r\n */\r\n\r\n@Data\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\npublic class ThreadPoolConfigEntity {\r\n\r\n    /** 应用名称 */\r\n    private String applicationName;\r\n    /** 线程池名称 */\r\n    private String threadPoolName;\r\n    /** 核心线程数 */\r\n    private Integer corePoolSize;\r\n    /** 最大线程数 */\r\n    private Integer maximumPoolSize;\r\n    /** 当前活跃线程数 */\r\n    private Integer activeThreadCount;\r\n    /** 池中线程数 */\r\n    private int poolSize;\r\n    /** 队列类型 */\r\n    private String queueType;\r\n    /** 队列中任务数 */\r\n    private Integer queueSize;\r\n    /** 队列剩余的任务数 */\r\n    private Integer remainingCapacity;\r\n\r\n    /**\r\n     * 建造一个线程池配置对象\r\n     * @param applicationName 应用名\r\n     * @param threadPoolName 线程池名\r\n     * @param executor 线程池执行器对象\r\n     * @return 线程池配置对象\r\n     */\r\n    public static ThreadPoolConfigEntity buildThreadPoolConfigEntity(\r\n            String applicationName,\r\n            String threadPoolName,\r\n            ThreadPoolExecutor executor) {\r\n\r\n        return new ThreadPoolConfigEntity(\r\n                applicationName,\r\n                threadPoolName,\r\n                executor.getCorePoolSize(),\r\n                executor.getMaximumPoolSize(),\r\n                executor.getActiveCount(),\r\n                executor.getPoolSize(),\r\n                executor.getQueue().getClass().getSimpleName(),\r\n                executor.getQueue().size(),\r\n                executor.getQueue().remainingCapacity()\r\n        );\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java	(date 1732353890563)
@@ -1,61 +1,67 @@
 package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity;
 
-import lombok.AllArgsConstructor;
 import lombok.Data;
-import lombok.NoArgsConstructor;
-
-import java.util.concurrent.ThreadPoolExecutor;
 
 /**
- * 线程池配置对象
+ * @Description: 线程池配置实体对象
+ * @Author:bread
+ * @Date: 2024-06-03 15:40
  */
-
 @Data
-@NoArgsConstructor
-@AllArgsConstructor
 public class ThreadPoolConfigEntity {
 
-    /** 应用名称 */
-    private String applicationName;
-    /** 线程池名称 */
+    /**
+     * 应用名称
+     */
+    private String appName;
+
+    /**
+     * 线程池名称
+     */
     private String threadPoolName;
-    /** 核心线程数 */
-    private Integer corePoolSize;
-    /** 最大线程数 */
-    private Integer maximumPoolSize;
-    /** 当前活跃线程数 */
-    private Integer activeThreadCount;
-    /** 池中线程数 */
+
+    /**
+     * 核心线程数
+     */
+    private int corePoolSize;
+
+    /**
+     * 最大线程数
+     */
+    private int maximumPoolSize;
+
+    /**
+     * 当前活跃线程数
+     */
+    private int activeCount;
+
+    /**
+     * 当前池中线程数
+     */
     private int poolSize;
-    /** 队列类型 */
+
+    /**
+     * 队列类型
+     */
     private String queueType;
-    /** 队列中任务数 */
-    private Integer queueSize;
-    /** 队列剩余的任务数 */
-    private Integer remainingCapacity;
+
+    /**
+     * 当前队列任务数
+     */
+    private int queueSize;
 
     /**
-     * 建造一个线程池配置对象
-     * @param applicationName 应用名
-     * @param threadPoolName 线程池名
-     * @param executor 线程池执行器对象
-     * @return 线程池配置对象
+     * 队列剩余任务数
      */
-    public static ThreadPoolConfigEntity buildThreadPoolConfigEntity(
-            String applicationName,
-            String threadPoolName,
-            ThreadPoolExecutor executor) {
+    private int remainingCapacity;
 
-        return new ThreadPoolConfigEntity(
-                applicationName,
-                threadPoolName,
-                executor.getCorePoolSize(),
-                executor.getMaximumPoolSize(),
-                executor.getActiveCount(),
-                executor.getPoolSize(),
-                executor.getQueue().getClass().getSimpleName(),
-                executor.getQueue().size(),
-                executor.getQueue().remainingCapacity()
-        );
+    public ThreadPoolConfigEntity() {
     }
+
+    public ThreadPoolConfigEntity(String appName, String threadPoolName) {
+        this.appName = appName;
+        this.threadPoolName = threadPoolName;
+    }
+
+
 }
Index: dynamic-thread-pool-admin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/pom.xml b/dynamic-thread-pool-admin/pom.xml
new file mode 100644
--- /dev/null	(date 1732353890431)
+++ b/dynamic-thread-pool-admin/pom.xml	(date 1732353890431)
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>dynamic-thread-pool</artifactId>
+        <groupId>org.example</groupId>
+        <version>1.0</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>dynamic-thread-pool-admin</artifactId>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-configuration-processor</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>commons-lang</groupId>
+            <artifactId>commons-lang</artifactId>
+            <version>2.6</version>
+        </dependency>
+        <dependency>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-all</artifactId>
+            <version>4.1.68.Final</version> <!-- 选择一个稳定的版本 -->
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+            <version>2.0.49</version>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>commons-codec</groupId>
+            <artifactId>commons-codec</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.redisson</groupId>
+            <artifactId>redisson-spring-boot-starter</artifactId>
+            <version>3.26.0</version>
+        </dependency>
+    </dependencies>
+    <build>
+        <finalName>dynamic-thread-pool-admin-app</finalName>
+        <resources>
+            <resource>
+                <directory>src/main/resources</directory>
+                <filtering>true</filtering>
+                <includes>
+                    <include>**/**</include>
+                </includes>
+            </resource>
+        </resources>
+        <testResources>
+            <testResource>
+                <directory>src/test/resources</directory>
+                <filtering>true</filtering>
+                <includes>
+                    <include>**/**</include>
+                </includes>
+            </testResource>
+        </testResources>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.6</version>
+                <configuration>
+                    <skipTests>true</skipTests>
+                    <testFailureIgnore>false</testFailureIgnore>
+                    <includes>
+                        <include>**/*Test.java</include>
+                    </includes>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <configuration>
+                    <mainClass>cn.bread.middleware.dynamic.thread.pool.Application</mainClass>
+                    <layout>JAR</layout>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+</project>
\ No newline at end of file
Index: dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/Application.java b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/Application.java
new file mode 100644
--- /dev/null	(date 1732353890439)
+++ b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/Application.java	(date 1732353890439)
@@ -0,0 +1,105 @@
+package cn.bread.middleware.dynamic.thread.pool;
+
+import lombok.Data;
+import org.redisson.Redisson;
+import org.redisson.api.RedissonClient;
+import org.redisson.codec.JsonJacksonCodec;
+import org.redisson.config.Config;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+/**
+ * @Description: 启动
+ * @Author:bread
+ * @Date: 2024-06-06 21:27
+ */
+@SpringBootApplication
+@Configuration
+public class Application {
+    public static void main(String[] args) {
+        SpringApplication.run(Application.class);
+    }
+
+    @Configuration
+    @EnableConfigurationProperties(RedisClientConfigProperties.class)
+    public static class RedisClientConfig {
+
+        @Bean("redissonClient")
+        public RedissonClient redissonClient(ConfigurableApplicationContext applicationContext, RedisClientConfigProperties properties) {
+            Config config = new Config();
+            // 根据需要可以设定编解码器；https://github.com/redisson/redisson/wiki/4.-%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96
+            config.setCodec(JsonJacksonCodec.INSTANCE);
+
+            config.useSingleServer()
+                    .setAddress("redis://" + properties.getHost() + ":" + properties.getPort())
+                    .setConnectionPoolSize(properties.getPoolSize())
+                    .setConnectionMinimumIdleSize(properties.getMinIdleSize())
+                    .setIdleConnectionTimeout(properties.getIdleTimeout())
+                    .setConnectTimeout(properties.getConnectTimeout())
+                    .setRetryAttempts(properties.getRetryAttempts())
+                    .setRetryInterval(properties.getRetryInterval())
+                    .setPingConnectionInterval(properties.getPingInterval())
+                    .setKeepAlive(properties.isKeepAlive())
+            ;
+
+            return Redisson.create(config);
+        }
+
+    }
+
+
+    @Data
+    @ConfigurationProperties(prefix = "redis.sdk.config", ignoreInvalidFields = true)
+    public static class RedisClientConfigProperties {
+        /**
+         * host:ip
+         */
+        private String host;
+        /**
+         * 端口
+         */
+        private int port;
+        /**
+         * 账密
+         */
+        private String password;
+        /**
+         * 设置连接池的大小，默认为64
+         */
+        private int poolSize = 64;
+        /**
+         * 设置连接池的最小空闲连接数，默认为10
+         */
+        private int minIdleSize = 10;
+        /**
+         * 设置连接的最大空闲时间（单位：毫秒），超过该时间的空闲连接将被关闭，默认为10000
+         */
+        private int idleTimeout = 10000;
+        /**
+         * 设置连接超时时间（单位：毫秒），默认为10000
+         */
+        private int connectTimeout = 10000;
+        /**
+         * 设置连接重试次数，默认为3
+         */
+        private int retryAttempts = 3;
+        /**
+         * 设置连接重试的间隔时间（单位：毫秒），默认为1000
+         */
+        private int retryInterval = 1000;
+        /**
+         * 设置定期检查连接是否可用的时间间隔（单位：毫秒），默认为0，表示不进行定期检查
+         */
+        private int pingInterval = 0;
+        /**
+         * 设置是否保持长连接，默认为true
+         */
+        private boolean keepAlive = true;
+    }
+
+}
Index: dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/ThreadPoolDataReportJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.middleware.dynamic.thread.pool.sdk.trigger.job;\r\n\r\n\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryAutoProperties;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;\r\nimport com.alibaba.fastjson.JSON;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\r\nimport org.springframework.scheduling.annotation.Scheduled;\r\n\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * @Description: 线程池数据上报任务\r\n * @Author:bread\r\n * @Date: 2024-06-03 19:51\r\n */\r\n\r\n@Slf4j\r\n@AllArgsConstructor\r\n@EnableConfigurationProperties(DynamicThreadPoolRegistryAutoProperties.class)\r\npublic class ThreadPoolDataReportJob {\r\n\r\n    private IDynamicThreadPoolService dynamicThreadPoolService;\r\n\r\n    private IRegistry registry;\r\n\r\n    @Scheduled(cron = \"${dynamic-thread-pool.registry.report-cron}\")\r\n    public void reportThreadPoolData() {\r\n        List<ThreadPoolConfigEntity> threadPoolConfigEntities = dynamicThreadPoolService.queryThreadPoolList();\r\n        registry.reportThreadPool(threadPoolConfigEntities);\r\n\r\n        log.info(\"动态线程池, 上报线程池信息: {}\", threadPoolConfigEntities);\r\n\r\n        // 遍历每个线程池信息, 上报配置信息\r\n        threadPoolConfigEntities.forEach(threadPoolConfigEntity -> {\r\n            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO = UpdateThreadPoolConfigDTO\r\n                    .buildUpdateThreadPoolConfigDTO(threadPoolConfigEntity);\r\n\r\n            registry.reportUpdateThreadPoolConfigParameter(updateThreadPoolConfigDTO);\r\n\r\n            log.info(\"动态线程池, 上报线程池配置信息: {}\", updateThreadPoolConfigDTO);\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/ThreadPoolDataReportJob.java b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/ThreadPoolDataReportJob.java
--- a/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/ThreadPoolDataReportJob.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-spring-boot-starter/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/trigger/job/ThreadPoolDataReportJob.java	(date 1732353890648)
@@ -1,17 +1,11 @@
 package cn.bread.middleware.dynamic.thread.pool.sdk.trigger.job;
 
-
-import cn.bread.middleware.dynamic.thread.pool.sdk.config.properties.DynamicThreadPoolRegistryAutoProperties;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.dto.UpdateThreadPoolConfigDTO;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.IDynamicThreadPoolService;
 import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.registry.IRegistry;
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.service.IDynamicThreadPoolService;
+import cn.bread.middleware.dynamic.thread.pool.sdk.registry.IRegistry;
 import com.alibaba.fastjson.JSON;
-import lombok.AllArgsConstructor;
-import lombok.extern.slf4j.Slf4j;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.scheduling.annotation.Scheduled;
 
 import java.util.List;
@@ -22,31 +16,29 @@
  * @Author:bread
  * @Date: 2024-06-03 19:51
  */
-
-@Slf4j
-@AllArgsConstructor
-@EnableConfigurationProperties(DynamicThreadPoolRegistryAutoProperties.class)
 public class ThreadPoolDataReportJob {
 
-    private IDynamicThreadPoolService dynamicThreadPoolService;
+    private final Logger logger= LoggerFactory.getLogger(ThreadPoolDataReportJob.class);
+
+    private final IDynamicThreadPoolService dynamicThreadPoolService;
 
-    private IRegistry registry;
+    private final IRegistry registry;
 
-    @Scheduled(cron = "${dynamic-thread-pool.registry.report-cron}")
-    public void reportThreadPoolData() {
+    public ThreadPoolDataReportJob(IDynamicThreadPoolService dynamicThreadPoolService, IRegistry registry) {
+        this.dynamicThreadPoolService = dynamicThreadPoolService;
+        this.registry = registry;
+    }
+
+    @Scheduled(cron = "0/20 * * * * ?")   //时间
+    public void execReportThreadPoolList() {
         List<ThreadPoolConfigEntity> threadPoolConfigEntities = dynamicThreadPoolService.queryThreadPoolList();
         registry.reportThreadPool(threadPoolConfigEntities);
-
-        log.info("动态线程池, 上报线程池信息: {}", threadPoolConfigEntities);
+        logger.info("动态线程池，上报线程池信息：{}", JSON.toJSONString(threadPoolConfigEntities));
 
-        // 遍历每个线程池信息, 上报配置信息
-        threadPoolConfigEntities.forEach(threadPoolConfigEntity -> {
-            UpdateThreadPoolConfigDTO updateThreadPoolConfigDTO = UpdateThreadPoolConfigDTO
-                    .buildUpdateThreadPoolConfigDTO(threadPoolConfigEntity);
+        for (ThreadPoolConfigEntity threadPoolConfigEntity : threadPoolConfigEntities) {
+            registry.reportThreadPoolConfigParameter(threadPoolConfigEntity);
+            logger.info("动态线程池，上报线程池配置：{}", JSON.toJSONString(threadPoolConfigEntity));
+        }
 
-            registry.reportUpdateThreadPoolConfigParameter(updateThreadPoolConfigDTO);
-
-            log.info("动态线程池, 上报线程池配置信息: {}", updateThreadPoolConfigDTO);
-        });
     }
 }
Index: dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/types/Response.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/types/Response.java b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/types/Response.java
new file mode 100644
--- /dev/null	(date 1732353890447)
+++ b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/types/Response.java	(date 1732353890447)
@@ -0,0 +1,34 @@
+package cn.bread.middleware.dynamic.thread.pool.types;
+
+import lombok.*;
+
+import java.io.Serializable;
+
+@Data
+@Builder
+@NoArgsConstructor
+@AllArgsConstructor
+public class Response<T> implements Serializable {
+
+    private static final long serialVersionUID = -2474596551402989285L;
+
+    private String code;
+    private String info;
+    private T data;
+
+    @AllArgsConstructor
+    @NoArgsConstructor
+    @Getter
+    public enum Code {
+        SUCCESS("0000", "调用成功"),
+        UN_ERROR("0001", "调用失败"),
+        ILLEGAL_PARAMETER("0002", "非法参数"),
+        ;
+
+        private String code;
+        private String info;
+
+    }
+
+}
+
Index: dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/trigger/DynamicThreadPoolController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/trigger/DynamicThreadPoolController.java b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/trigger/DynamicThreadPoolController.java
new file mode 100644
--- /dev/null	(date 1732353890445)
+++ b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/trigger/DynamicThreadPoolController.java	(date 1732353890445)
@@ -0,0 +1,105 @@
+package cn.bread.middleware.dynamic.thread.pool.trigger;
+
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
+import cn.bread.middleware.dynamic.thread.pool.types.Response;
+import com.alibaba.fastjson.JSON;
+import lombok.extern.slf4j.Slf4j;
+import org.redisson.api.RList;
+import org.redisson.api.RTopic;
+import org.redisson.api.RedissonClient;
+import org.springframework.web.bind.annotation.*;
+
+import javax.annotation.Resource;
+import java.util.List;
+
+@Slf4j
+@RestController()
+@CrossOrigin("*")
+@RequestMapping("/api/v1/dynamic/thread/pool/")
+public class DynamicThreadPoolController {
+
+    @Resource
+    public RedissonClient redissonClient;
+
+    /**
+     * 查询线程池数据
+     * curl --request GET \
+     * --url 'http://localhost:8089/api/v1/dynamic/thread/pool/query_thread_pool_list'
+     */
+    @RequestMapping(value = "query_thread_pool_list", method = RequestMethod.GET)
+    public Response<List<ThreadPoolConfigEntity>> queryThreadPoolList() {
+        try {
+            RList<ThreadPoolConfigEntity> cacheList = redissonClient.getList("THREAD_POOL_CONFIG_LIST_KEY");
+            return Response.<List<ThreadPoolConfigEntity>>builder()
+                    .code(Response.Code.SUCCESS.getCode())
+                    .info(Response.Code.SUCCESS.getInfo())
+                    .data(cacheList.readAll())
+                    .build();
+        } catch (Exception e) {
+            log.error("查询线程池数据异常", e);
+            return Response.<List<ThreadPoolConfigEntity>>builder()
+                    .code(Response.Code.UN_ERROR.getCode())
+                    .info(Response.Code.UN_ERROR.getInfo())
+                    .build();
+        }
+    }
+
+    /**
+     * 查询线程池配置
+     * curl --request GET \
+     * --url 'http://localhost:8089/api/v1/dynamic/thread/pool/query_thread_pool_config?appName=dynamic-thread-pool-test-app&threadPoolName=threadPoolExecutor'
+     */
+    @RequestMapping(value = "query_thread_pool_config", method = RequestMethod.GET)
+    public Response<ThreadPoolConfigEntity> queryThreadPoolConfig(@RequestParam String appName, @RequestParam String threadPoolName) {
+        try {
+            String cacheKey = "THREAD_POOL_CONFIG_PARAMETER_LIST_KEY" + "_" + appName + "_" + threadPoolName;
+            ThreadPoolConfigEntity threadPoolConfigEntity = redissonClient.<ThreadPoolConfigEntity>getBucket(cacheKey).get();
+            return Response.<ThreadPoolConfigEntity>builder()
+                    .code(Response.Code.SUCCESS.getCode())
+                    .info(Response.Code.SUCCESS.getInfo())
+                    .data(threadPoolConfigEntity)
+                    .build();
+        } catch (Exception e) {
+            log.error("查询线程池配置异常", e);
+            return Response.<ThreadPoolConfigEntity>builder()
+                    .code(Response.Code.UN_ERROR.getCode())
+                    .info(Response.Code.UN_ERROR.getInfo())
+                    .build();
+        }
+    }
+
+    /**
+     * 修改线程池配置
+     * curl --request POST \
+     * --url http://localhost:8089/api/v1/dynamic/thread/pool/update_thread_pool_config \
+     * --header 'content-type: application/json' \
+     * --data '{
+     * "appName":"dynamic-thread-pool-test-app",
+     * "threadPoolName": "threadPoolExecutor",
+     * "corePoolSize": 1,
+     * "maximumPoolSize": 10
+     * }'
+     */
+    @RequestMapping(value = "update_thread_pool_config", method = RequestMethod.POST)
+    public Response<Boolean> updateThreadPoolConfig(@RequestBody ThreadPoolConfigEntity request) {
+        try {
+            log.info("修改线程池配置开始 {} {} {}", request.getAppName(), request.getThreadPoolName(), JSON.toJSONString(request));
+            RTopic topic = redissonClient.getTopic("DYNAMIC_THREAD_POOL_REDIS_TOPIC" + "_" + request.getAppName());
+            topic.publish(request);
+            log.info("修改线程池配置完成 {} {}", request.getAppName(), request.getThreadPoolName());
+            return Response.<Boolean>builder()
+                    .code(Response.Code.SUCCESS.getCode())
+                    .info(Response.Code.SUCCESS.getInfo())
+                    .data(true)
+                    .build();
+        } catch (Exception e) {
+            log.error("修改线程池配置异常 {}", JSON.toJSONString(request), e);
+            return Response.<Boolean>builder()
+                    .code(Response.Code.UN_ERROR.getCode())
+                    .info(Response.Code.UN_ERROR.getInfo())
+                    .data(false)
+                    .build();
+        }
+    }
+
+}
Index: dynamic-thread-pool-admin/src/test/java/cn/bread/middleware/dynamic/thread/pool/test/ApiTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/test/java/cn/bread/middleware/dynamic/thread/pool/test/ApiTest.java b/dynamic-thread-pool-admin/src/test/java/cn/bread/middleware/dynamic/thread/pool/test/ApiTest.java
new file mode 100644
--- /dev/null	(date 1732353890463)
+++ b/dynamic-thread-pool-admin/src/test/java/cn/bread/middleware/dynamic/thread/pool/test/ApiTest.java	(date 1732353890463)
@@ -0,0 +1,4 @@
+package cn.bread.middleware.dynamic.thread.pool.test;
+
+public class ApiTest {
+}
Index: dynamic-thread-pool-test/src/test/java/cn/bread/test/ApiTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.bread.test;\r\n\r\nimport cn.bread.middleware.dynamic.thread.pool.sdk.domain.model2.entity.ThreadPoolConfigEntity;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.redisson.api.RTopic;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.test.context.junit4.SpringRunner;\r\n\r\nimport javax.annotation.Resource;\r\nimport java.util.concurrent.CountDownLatch;\r\n\r\n/**\r\n * @Description: 测试\r\n * @Author:bread\r\n * @Date: 2024-05-28 18:03\r\n */\r\n\r\n@Slf4j\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest\r\npublic class ApiTest {\r\n\r\n    @Resource(name = \"dynamicThreadPoolRedisTopic\")\r\n    private RTopic dynamicThreadPoolRedisTopic;\r\n\r\n    @Test\r\n    public void test_dynamicThreadPoolRedisTopic() throws InterruptedException {\r\n        ThreadPoolConfigEntity threadPoolConfigEntity = new ThreadPoolConfigEntity(\"dynamic-thread-pool-test-app\", \"threadPoolExecutor01\");\r\n        threadPoolConfigEntity.setPoolSize(100);\r\n        threadPoolConfigEntity.setMaximumPoolSize(100);\r\n        dynamicThreadPoolRedisTopic.publish(threadPoolConfigEntity);\r\n\r\n        new CountDownLatch(1).await();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/src/test/java/cn/bread/test/ApiTest.java b/dynamic-thread-pool-test/src/test/java/cn/bread/test/ApiTest.java
--- a/dynamic-thread-pool-test/src/test/java/cn/bread/test/ApiTest.java	(revision fd466f9976a2e22d8ce2f800c1d76473b0d5a57e)
+++ b/dynamic-thread-pool-test/src/test/java/cn/bread/test/ApiTest.java	(date 1732353890797)
@@ -1,10 +1,13 @@
 package cn.bread.test;
 
-import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model2.entity.ThreadPoolConfigEntity;
+import cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity.ThreadPoolConfigEntity;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.redisson.api.RTopic;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Configurable;
+import org.springframework.beans.factory.annotation.Qualifier;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.test.context.junit4.SpringRunner;
 
Index: dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java
new file mode 100644
--- /dev/null	(date 1732353890442)
+++ b/dynamic-thread-pool-admin/src/main/java/cn/bread/middleware/dynamic/thread/pool/sdk/domain/model/entity/ThreadPoolConfigEntity.java	(date 1732353890442)
@@ -0,0 +1,122 @@
+package cn.bread.middleware.dynamic.thread.pool.sdk.domain.model.entity;
+
+public class ThreadPoolConfigEntity {
+
+    /**
+     * 应用名称
+     */
+    private String appName;
+
+    /**
+     * 线程池名称
+     */
+    private String threadPoolName;
+
+    /**
+     * 核心线程数
+     */
+    private int corePoolSize;
+
+    /**
+     * 最大线程数
+     */
+    private int maximumPoolSize;
+
+    /**
+     * 当前活跃线程数
+     */
+    private int activeCount;
+
+    /**
+     * 当前池中线程数
+     */
+    private int poolSize;
+
+    /**
+     * 队列类型
+     */
+    private String queueType;
+
+    /**
+     * 当前队列任务数
+     */
+    private int queueSize;
+
+    /**
+     * 队列剩余任务数
+     */
+    private int remainingCapacity;
+
+    public ThreadPoolConfigEntity() {
+    }
+
+    public ThreadPoolConfigEntity(String appName, String threadPoolName) {
+        this.appName = appName;
+        this.threadPoolName = threadPoolName;
+    }
+
+    public String getAppName() {
+        return appName;
+    }
+
+    public String getThreadPoolName() {
+        return threadPoolName;
+    }
+
+    public int getCorePoolSize() {
+        return corePoolSize;
+    }
+
+    public void setCorePoolSize(int corePoolSize) {
+        this.corePoolSize = corePoolSize;
+    }
+
+    public int getMaximumPoolSize() {
+        return maximumPoolSize;
+    }
+
+    public void setMaximumPoolSize(int maximumPoolSize) {
+        this.maximumPoolSize = maximumPoolSize;
+    }
+
+    public int getActiveCount() {
+        return activeCount;
+    }
+
+    public void setActiveCount(int activeCount) {
+        this.activeCount = activeCount;
+    }
+
+    public int getPoolSize() {
+        return poolSize;
+    }
+
+    public void setPoolSize(int poolSize) {
+        this.poolSize = poolSize;
+    }
+
+    public String getQueueType() {
+        return queueType;
+    }
+
+    public void setQueueType(String queueType) {
+        this.queueType = queueType;
+    }
+
+    public int getQueueSize() {
+        return queueSize;
+    }
+
+    public void setQueueSize(int queueSize) {
+        this.queueSize = queueSize;
+    }
+
+    public int getRemainingCapacity() {
+        return remainingCapacity;
+    }
+
+    public void setRemainingCapacity(int remainingCapacity) {
+        this.remainingCapacity = remainingCapacity;
+    }
+
+}
Index: dynamic-thread-pool-test/src/main/java/cn/bread/Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java b/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java
new file mode 100644
--- /dev/null	(date 1732353890789)
+++ b/dynamic-thread-pool-test/src/main/java/cn/bread/Application.java	(date 1732353890789)
@@ -0,0 +1,56 @@
+package cn.bread;
+
+import org.springframework.beans.factory.annotation.Configurable;
+import org.springframework.boot.ApplicationRunner;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.context.annotation.Bean;
+
+import java.util.Random;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.TimeUnit;
+
+/**
+ * @Description:
+ * @Author:bread
+ * @Date: 2024-05-27 11:04
+ */
+@SpringBootApplication
+@Configurable
+public class Application {
+    public static void main(String[] args) {
+        SpringApplication.run(Application.class);
+    }
+
+    @Bean
+    public ApplicationRunner applicationRunner(ExecutorService threadPoolExecutor01) {
+        return args -> {
+            while (true){
+                // 创建一个随机时间生成器
+                Random random = new Random();
+                // 随机时间，用于模拟任务启动延迟
+                int initialDelay = random.nextInt(10) + 1; // 1到10秒之间
+                // 随机休眠时间，用于模拟任务执行时间
+                int sleepTime = random.nextInt(10) + 1; // 1到10秒之间
+
+                // 提交任务到线程池
+                threadPoolExecutor01.submit(() -> {
+                    try {
+                        // 模拟任务启动延迟
+                        TimeUnit.SECONDS.sleep(initialDelay);
+                        System.out.println("Task started after " + initialDelay + " seconds.");
+
+                        // 模拟任务执行
+                        TimeUnit.SECONDS.sleep(sleepTime);
+                        System.out.println("Task executed for " + sleepTime + " seconds.");
+                    } catch (InterruptedException e) {
+                        Thread.currentThread().interrupt();
+                    }
+                });
+
+                Thread.sleep(random.nextInt(50) + 1);
+            }
+        };
+    }
+
+}
Index: dynamic-thread-pool-admin/src/main/resources/application-dev.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/resources/application-dev.yml b/dynamic-thread-pool-admin/src/main/resources/application-dev.yml
new file mode 100644
--- /dev/null	(date 1732353890450)
+++ b/dynamic-thread-pool-admin/src/main/resources/application-dev.yml	(date 1732353890450)
@@ -0,0 +1,22 @@
+#开发环境
+server:
+  port: 8089
+
+redis:
+  sdk:
+    config:
+      host: localhost
+      port: 6379
+      pool-size: 10
+      min-idle-size: 5
+      idle-timeout: 30000
+      connect-timeout: 5000
+      retry-attempts: 3
+      retry-interval: 1000
+      ping-interval: 60000
+      keep-alive: true
+
+logging:
+  level:
+    root: info
+  config: classpath:logback-spring.xml
\ No newline at end of file
Index: dynamic-thread-pool-admin/src/main/resources/application-prod.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/resources/application-prod.yml b/dynamic-thread-pool-admin/src/main/resources/application-prod.yml
new file mode 100644
--- /dev/null	(date 1732353890451)
+++ b/dynamic-thread-pool-admin/src/main/resources/application-prod.yml	(date 1732353890451)
@@ -0,0 +1,20 @@
+#生产环境给用户的
+server:
+  port: 8091
+
+# 线程池配置
+thread:
+  pool:
+    executor:
+      config:
+        core-pool-size: 20
+        max-pool-size: 50
+        keep-alive-time: 5000
+        block-queue-size: 5000
+        policy: CallerRunsPolicy
+
+# 日志
+logging:
+  level:
+    root: info
+  config: classpath:logback-spring.xml
\ No newline at end of file
Index: dynamic-thread-pool-admin/src/main/resources/application-test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/resources/application-test.yml b/dynamic-thread-pool-admin/src/main/resources/application-test.yml
new file mode 100644
--- /dev/null	(date 1732353890453)
+++ b/dynamic-thread-pool-admin/src/main/resources/application-test.yml	(date 1732353890453)
@@ -0,0 +1,41 @@
+server:
+  port: 8091
+
+# 线程池配置
+thread:
+  pool:
+    executor:
+      config:
+        core-pool-size: 20
+        max-pool-size: 50
+        keep-alive-time: 5000
+        block-queue-size: 5000
+        policy: CallerRunsPolicy
+
+# 数据库配置
+#spring:
+#  datasource:
+#    username: root
+#    password: 123456
+#    url: jdbc:mysql://127.0.0.1:3306/xfg_frame_archetype?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
+#    driver-class-name: com.mysql.cj.jdbc.Driver
+#  hikari:
+#    pool-name: Retail_HikariCP
+#    minimum-idle: 15 #最小空闲连接数量
+#    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
+#    maximum-pool-size: 25 #连接池最大连接数，默认是10
+#    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
+#    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
+#    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
+#    connection-test-query: SELECT 1
+#  type: com.zaxxer.hikari.HikariDataSource
+
+#mybatis:
+#  mapper-locations: classpath:/mybatis/mapper/*.xml
+#  config-location:  classpath:/mybatis/config/mybatis-config.xml
+#测试环境
+# 日志
+logging:
+  level:
+    root: info
+  config: classpath:logback-spring.xml
\ No newline at end of file
Index: dynamic-thread-pool-admin/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/resources/application.yml b/dynamic-thread-pool-admin/src/main/resources/application.yml
new file mode 100644
--- /dev/null	(date 1732353890454)
+++ b/dynamic-thread-pool-admin/src/main/resources/application.yml	(date 1732353890454)
@@ -0,0 +1,5 @@
+spring:
+  application:
+    name: dynamic-thread-pool-test-app
+  profiles:
+    active: dev
Index: dynamic-thread-pool-admin/src/main/resources/logback-spring.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dynamic-thread-pool-admin/src/main/resources/logback-spring.xml b/dynamic-thread-pool-admin/src/main/resources/logback-spring.xml
new file mode 100644
--- /dev/null	(date 1732353890456)
+++ b/dynamic-thread-pool-admin/src/main/resources/logback-spring.xml	(date 1732353890456)
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
+<configuration scan="true" scanPeriod="10 seconds">
+
+    <contextName>logback</contextName>
+    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
+    <springProperty scope="context" name="log.path" source="logging.path"/>
+    <!-- 日志格式 -->
+    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
+    <conversionRule conversionWord="wex"
+                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
+    <conversionRule conversionWord="wEx"
+                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
+
+    <!-- 输出到控制台 -->
+    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
+        <!-- 此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息 -->
+        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
+            <level>info</level>
+        </filter>
+        <encoder>
+            <pattern>%d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0}%X{ServiceId} -%X{trace-id} %m%n</pattern>
+            <charset>UTF-8</charset>
+        </encoder>
+    </appender>
+
+    <!--输出到文件-->
+    <!-- 时间滚动输出 level为 INFO 日志 -->
+    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
+        <!-- 正在记录的日志文件的路径及文件名 -->
+        <file>./data/log/log_info.log</file>
+        <!--日志文件输出格式-->
+        <encoder>
+            <pattern>%d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0}%X{ServiceId} -%X{trace-id} %m%n</pattern>
+            <charset>UTF-8</charset>
+        </encoder>
+        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
+        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
+            <!-- 每天日志归档路径以及格式 -->
+            <fileNamePattern>./data/log/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
+            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
+                <maxFileSize>100MB</maxFileSize>
+            </timeBasedFileNamingAndTriggeringPolicy>
+            <!--日志文件保留天数-->
+            <maxHistory>15</maxHistory>
+            <totalSizeCap>10GB</totalSizeCap>
+        </rollingPolicy>
+    </appender>
+
+    <!-- 时间滚动输出 level为 ERROR 日志 -->
+    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
+        <!-- 正在记录的日志文件的路径及文件名 -->
+        <file>./data/log/log_error.log</file>
+        <!--日志文件输出格式-->
+        <encoder>
+            <pattern>%d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0}%X{ServiceId} -%X{trace-id} %m%n</pattern>
+            <charset>UTF-8</charset>
+        </encoder>
+        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
+        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
+            <fileNamePattern>./data/log/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
+            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
+                <maxFileSize>100MB</maxFileSize>
+            </timeBasedFileNamingAndTriggeringPolicy>
+            <!-- 日志文件保留天数【根据服务器预留，可自行调整】 -->
+            <maxHistory>7</maxHistory>
+            <totalSizeCap>5GB</totalSizeCap>
+        </rollingPolicy>
+        <!-- WARN 级别及以上 -->
+        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
+            <level>WARN</level>
+        </filter>
+    </appender>
+
+    <!-- 异步输出 -->
+    <appender name="ASYNC_FILE_INFO" class="ch.qos.logback.classic.AsyncAppender">
+        <!-- 队列剩余容量小于discardingThreshold,则会丢弃TRACT、DEBUG、INFO级别的日志;默认值-1,为queueSize的20%;0不丢失日志 -->
+        <discardingThreshold>0</discardingThreshold>
+        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
+        <queueSize>8192</queueSize>
+        <!-- neverBlock:true 会丢失日志,但业务性能不受影响 -->
+        <neverBlock>true</neverBlock>
+        <!--是否提取调用者数据-->
+        <includeCallerData>false</includeCallerData>
+        <appender-ref ref="INFO_FILE"/>
+    </appender>
+
+    <appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">
+        <!-- 队列剩余容量小于discardingThreshold,则会丢弃TRACT、DEBUG、INFO级别的日志;默认值-1,为queueSize的20%;0不丢失日志 -->
+        <discardingThreshold>0</discardingThreshold>
+        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
+        <queueSize>1024</queueSize>
+        <!-- neverBlock:true 会丢失日志,但业务性能不受影响 -->
+        <neverBlock>true</neverBlock>
+        <!--是否提取调用者数据-->
+        <includeCallerData>false</includeCallerData>
+        <appender-ref ref="ERROR_FILE"/>
+    </appender>
+
+    <!-- 开发环境：控制台打印 -->
+    <springProfile name="dev">
+        <logger name="com.nmys.view" level="debug"/>
+    </springProfile>
+
+    <root level="info">
+        <appender-ref ref="CONSOLE"/>
+        <!-- 异步日志-INFO -->
+        <appender-ref ref="ASYNC_FILE_INFO"/>
+        <!-- 异步日志-ERROR -->
+        <appender-ref ref="ASYNC_FILE_ERROR"/>
+    </root>
+
+</configuration>
\ No newline at end of file
